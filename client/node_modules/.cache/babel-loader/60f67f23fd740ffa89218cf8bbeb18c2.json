{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\projects\\\\fullstack-project\\\\client\\\\src\\\\components\\\\sections\\\\ShowAllRecipes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Spinner } from \"react-bootstrap\";\nimport Pagination from \"../utills/Pagination\";\nimport CardItem from \"./CardItem\";\nimport { Form, Row, Col } from \"react-bootstrap\";\nimport { getData, orderBy } from \"../DAL/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ShowAllRecipes = props => {\n  _s();\n\n  const {\n    recipes,\n    images,\n    loading,\n    onAdd\n  } = props; // const [order, setOrder] = useState(\"color\");\n\n  const [newImages, setNewImages] = useState([]);\n  const [orderListBy, setOrderListBy] = useState('asc');\n  const [newRecipes, setNewRecipes] = useState([...recipes]);\n  const [listState, setListState] = useState('name');\n  const [orderState, setOrderState] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [recipesPerPage, setRecipesPerPage] = useState(5);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Loading\", /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n  const order = async () => {\n    const value = listState;\n    const response = await orderBy(value, orderListBy);\n    console.log(response);\n    setNewRecipes(response);\n  };\n\n  const changeState = () => {\n    if (orderListBy === 'asc') {\n      setOrderListBy('desc');\n      order();\n    }\n\n    if (orderListBy === 'desc') {\n      setOrderListBy('asc');\n      order();\n    }\n  };\n\n  function getObj(array, filter) {\n    const image = array.find(item => item.recipeId == filter);\n    if (image) return image.imgUrl;\n  } // Change page\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      value: \"name\",\n      onClick: e => setListState('name'),\n      className: \"m-5\",\n      children: \"orderBY Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      value: \"views\",\n      onClick: () => {\n        setListState('views');\n      },\n      className: \"m-5\",\n      children: \"orderBY views\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      vlaue: \"date\",\n      onClick: () => {\n        order('date');\n      },\n      children: \"orderBY date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      vlaue: \"date\",\n      onClick: changeState,\n      children: orderListBy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \" d-flex flex-wrap justify-content-center  \",\n      children: newRecipes.map(recipe => /*#__PURE__*/_jsxDEV(CardItem, {\n        path: `/products/${recipe.recipeId}`,\n        src: getObj(images, recipe.recipeId) || \"https://images.pexels.com/photos/4735285/pexels-photo-4735285.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\",\n        text: recipe.name,\n        views: recipe.views,\n        label: recipe.name,\n        onAdd: onAdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ShowAllRecipes, \"8sfSXeZnNeiSdjmR4ABIydXS3RI=\");\n\n_c = ShowAllRecipes;\nexport default ShowAllRecipes;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowAllRecipes\");","map":{"version":3,"sources":["C:/Users/User/Documents/projects/fullstack-project/client/src/components/sections/ShowAllRecipes.js"],"names":["React","useState","useEffect","Link","Spinner","Pagination","CardItem","Form","Row","Col","getData","orderBy","ShowAllRecipes","props","recipes","images","loading","onAdd","newImages","setNewImages","orderListBy","setOrderListBy","newRecipes","setNewRecipes","listState","setListState","orderState","setOrderState","currentPage","setCurrentPage","recipesPerPage","setRecipesPerPage","order","value","response","console","log","changeState","getObj","array","filter","image","find","item","recipeId","imgUrl","e","map","recipe","name","views"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport Pagination from \"../utills/Pagination\";\r\nimport CardItem from \"./CardItem\";\r\nimport { Form, Row, Col } from \"react-bootstrap\";\r\nimport { getData, orderBy } from \"../DAL/api\";\r\nconst ShowAllRecipes = (props) => {\r\n  const { recipes, images, loading, onAdd } = props\r\n  // const [order, setOrder] = useState(\"color\");\r\n  const [newImages, setNewImages] = useState([]);\r\n  const [orderListBy, setOrderListBy] = useState('asc')\r\n  const [newRecipes, setNewRecipes] = useState([...recipes])\r\n  const [listState, setListState] = useState('name')\r\n  const [orderState, setOrderState] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [recipesPerPage, setRecipesPerPage] = useState(5);\r\n\r\n  if (loading) {\r\n    return (\r\n      <h2>\r\n        Loading\r\n        <Spinner animation=\"border\" />\r\n      </h2>\r\n    );\r\n  }\r\n  const order = async () => {\r\n    const value = listState\r\n    const response = await orderBy(value, orderListBy)\r\n    console.log(response);\r\n    setNewRecipes(response)\r\n  }\r\n\r\n  const changeState = () => {\r\n    if (orderListBy === 'asc') {\r\n      setOrderListBy('desc')\r\n      order()\r\n    }\r\n    if (orderListBy === 'desc') {\r\n      setOrderListBy('asc')\r\n      order()\r\n    }\r\n  }\r\n\r\n  function getObj(array, filter) {\r\n    const image = array.find((item) => item.recipeId == filter)\r\n    if (image) return image.imgUrl\r\n  }\r\n\r\n\r\n  // Change page\r\n\r\n  return (\r\n    <>\r\n      <button value='name' onClick={(e) => setListState('name')} className='m-5'>orderBY Name</button>\r\n      <button value='views' onClick={() => { setListState('views')}} className='m-5'>orderBY views</button>\r\n      <button vlaue='date' onClick={() => { order('date') }}>orderBY date</button>\r\n      <button vlaue='date' onClick={changeState}>{orderListBy}</button>\r\n      <ul className=\" d-flex flex-wrap justify-content-center  \">\r\n        {newRecipes.map((recipe) => (\r\n          <CardItem\r\n            path={`/products/${recipe.recipeId}`}\r\n            src={\r\n              getObj(images, recipe.recipeId) ||\r\n              \"https://images.pexels.com/photos/4735285/pexels-photo-4735285.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\"\r\n            }\r\n            text={recipe.name}\r\n            views={recipe.views}\r\n            label={recipe.name}\r\n            onAdd={onAdd}\r\n          />\r\n        ))}\r\n      </ul>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShowAllRecipes;\r\n"]},"metadata":{},"sourceType":"module"}