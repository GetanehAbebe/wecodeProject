{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\projects\\\\fullstack-project\\\\client\\\\src\\\\components\\\\forms\\\\RegisterForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./registerform.css\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Form, Col, Button, Row } from \"react-bootstrap\";\nimport InputCreator from \"./InputCreator\";\nimport { getData, insertDataToDB, appendUser, getSpecificUser, updateUser } from \"../DAL/api\";\nimport * as Yup from 'yup';\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cookies = require('js-cookie');\n\nconst RegisterForm = ({\n  recipe,\n  editUser\n}) => {\n  _s();\n\n  const [editMode, setEditMode] = useState(false);\n  const [diets, setDiets] = useState([]);\n  const [message, setMessage] = useState('');\n  const history = useHistory();\n\n  const insertToForm = user => {\n    console.log('user', user);\n    const email = user.email;\n    console.log(email);\n    formik.values.firstName = user.firstName;\n    formik.values.lastName = user.lastName;\n    formik.values.email = user.email;\n    formik.values.password = user.password;\n    formik.values.confirmPassword = user.password;\n    const arr = [];\n    user.favorites.map(item => {\n      arr.push(item.DietId);\n    });\n    formik.values.diet = arr;\n  };\n\n  useEffect(async () => {\n    if (editUser) {\n      const id = Cookies.get(\"user\");\n      setEditMode(true);\n      const getUser = await getSpecificUser(id);\n      console.log(getUser);\n      insertToForm(getUser);\n    }\n\n    const fetchDiets = await getData('diets');\n    setDiets(fetchDiets.map(item => {\n      return {\n        id: '' + item.id,\n        name: item.name,\n        select: formik.values.diet.includes(item.id)\n      };\n    }));\n  }, []);\n  const formik = useFormik({\n    initialValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      diet: [],\n      confirmPassword: ''\n    },\n    validationSchema: Yup.object({\n      firstName: Yup.string().max(15, 'Must be 15 characters or less').min(3),\n      lastName: Yup.string().max(20, 'Must be 20 characters or less').min(3),\n      email: Yup.string().email('Email is invalid').required('Email is required'),\n      password: Yup.string().min(8, 'Password must be at least 8 charaters').required('Password is required'),\n      confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Password must match').required('Confirm password is required') // diet: Yup.array().required('required')\n      //   .min(2, 'must check 2 types')\n\n    }),\n    onSubmit: async values => {\n      // const res = await insertDataToDB('users', formik.values);\n      const data = new FormData();\n      formik.values.id = Cookies.get(\"user\");\n\n      if (!editUser) {\n        const response = await appendUser(values);\n        console.log(response);\n        history.push('/login');\n      } else {\n        const update = await updateUser(values);\n        setMessage('updated');\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: formik.handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-inner\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n          className: \"m-auto text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-center\",\n            children: editMode ? \"Update Profile\" : \"Registration Page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(InputCreator, {\n            title: \"First name\",\n            type: \"text\",\n            required: \"true\",\n            value: formik.values.firstName,\n            placeholder: \"First Name\",\n            sign: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 21\n            }, this),\n            onChange: formik.handleChange,\n            name: \"firstName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), formik.touched.firstName && formik.errors.firstName ? /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-danger\",\n            children: [formik.errors.firstName, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 68\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(InputCreator, {\n            title: \"Last name\",\n            type: \"text\",\n            required: \"true\",\n            value: formik.values.lastName,\n            placeholder: \"last Name\",\n            sign: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 21\n            }, this),\n            onChange: formik.handleChange,\n            name: \"lastName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), formik.touched.lastName && formik.errors.lastName ? /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-danger\",\n            children: [formik.errors.lastName, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 66\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGridPassword\",\n          children: [/*#__PURE__*/_jsxDEV(InputCreator, {\n            title: \"Email\",\n            type: \"email\",\n            value: formik.values.email,\n            required: \"true\",\n            onChange: formik.handleChange,\n            placeholder: \"Email\",\n            sign: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-mail-bulk\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 21\n            }, this),\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-danger\",\n            children: [formik.errors.email, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 60\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(InputCreator, {\n            title: \"Password\",\n            type: \"password\",\n            required: \"true\",\n            value: formik.values.password,\n            placeholder: \"password\",\n            sign: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-mail-bulk\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 21\n            }, this),\n            onChange: formik.handleChange,\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), formik.touched.password && formik.errors.password ? /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-danger\",\n            children: [formik.errors.password, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 66\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(InputCreator, {\n            title: \"Confirm password\",\n            type: \"password\",\n            required: \"true\",\n            value: formik.values.confirmPassword,\n            placeholder: \"\",\n            sign: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-mail-bulk\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 21\n            }, this),\n            onChange: formik.handleChange,\n            name: \"confirmPassword\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), formik.touched.confirmPassword && formik.errors.confirmPassword ? /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-danger\",\n            children: [formik.errors.confirmPassword, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 80\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          id: \"submit\",\n          children: editMode ? \"update\" : \"sign-up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), !editMode && /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Have an acount?login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(RegisterForm, \"UEeUh8jNfC9F9h/xRBxrPEhrS6k=\", false, function () {\n  return [useHistory, useFormik];\n});\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["C:/Users/User/Documents/projects/fullstack-project/client/src/components/forms/RegisterForm.jsx"],"names":["React","useEffect","useState","Link","useHistory","Form","Col","Button","Row","InputCreator","getData","insertDataToDB","appendUser","getSpecificUser","updateUser","Yup","useFormik","Cookies","require","RegisterForm","recipe","editUser","editMode","setEditMode","diets","setDiets","message","setMessage","history","insertToForm","user","console","log","email","formik","values","firstName","lastName","password","confirmPassword","arr","favorites","map","item","push","DietId","diet","id","get","getUser","fetchDiets","name","select","includes","initialValues","validationSchema","object","string","max","min","required","oneOf","ref","onSubmit","data","FormData","response","update","handleSubmit","handleChange","touched","errors"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./registerform.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Form, Col, Button, Row } from \"react-bootstrap\";\r\nimport InputCreator from \"./InputCreator\";\r\n\r\nimport { getData, insertDataToDB, appendUser, getSpecificUser, updateUser } from \"../DAL/api\";\r\nimport * as Yup from 'yup'\r\nimport { useFormik } from \"formik\";\r\nconst Cookies = require('js-cookie')\r\nconst RegisterForm = ({ recipe, editUser }) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [diets, setDiets] = useState([]);\r\n  const [message, setMessage] = useState('')\r\n  const history = useHistory()\r\n\r\n\r\n\r\n\r\n  const insertToForm = (user) => {\r\n    console.log('user', user);\r\n    const email = user.email;\r\n    console.log(email);\r\n    formik.values.firstName = user.firstName;\r\n    formik.values.lastName = user.lastName;\r\n    formik.values.email = user.email;\r\n    formik.values.password = user.password;\r\n    formik.values.confirmPassword = user.password;\r\n    const arr = []\r\n    user.favorites.map(item => {\r\n      arr.push(item.DietId)\r\n    })\r\n    formik.values.diet = arr;\r\n\r\n  }\r\n\r\n  useEffect(async () => {\r\n    if (editUser) {\r\n      const id = Cookies.get(\"user\")\r\n      setEditMode(true);\r\n      const getUser = await getSpecificUser(id)\r\n      console.log(getUser);\r\n      insertToForm(getUser)\r\n\r\n    }\r\n\r\n    const fetchDiets = await getData('diets')\r\n    setDiets(fetchDiets.map(item => {\r\n      return {\r\n        id: '' + item.id,\r\n        name: item.name,\r\n        select: formik.values.diet.includes(item.id)\r\n      }\r\n    }));\r\n  }, []);\r\n\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      diet: [],\r\n      confirmPassword: '',\r\n\r\n    },\r\n\r\n    validationSchema: Yup.object({\r\n      firstName: Yup.string()\r\n        .max(15, 'Must be 15 characters or less')\r\n        .min(3),\r\n      lastName: Yup.string()\r\n        .max(20, 'Must be 20 characters or less')\r\n        .min(3),\r\n      email: Yup.string()\r\n        .email('Email is invalid')\r\n        .required('Email is required'),\r\n      password: Yup.string()\r\n        .min(8, 'Password must be at least 8 charaters')\r\n        .required('Password is required'),\r\n      confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], 'Password must match')\r\n        .required('Confirm password is required'),\r\n      // diet: Yup.array().required('required')\r\n      //   .min(2, 'must check 2 types')\r\n    })\r\n    ,\r\n\r\n    onSubmit: async (values) => {\r\n      // const res = await insertDataToDB('users', formik.values);\r\n\r\n      const data = new FormData();\r\n      formik.values.id = Cookies.get(\"user\");\r\n      if (!editUser) {\r\n        const response = await appendUser(values)\r\n        console.log(response)\r\n        history.push('/login')\r\n      } else {\r\n\r\n        const update = await updateUser(values)\r\n        setMessage('updated')\r\n      }\r\n    },\r\n  })\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={formik.handleSubmit}>\r\n        <div className=\"form-inner\">\r\n          <Form.Row className=\"m-auto text-center\">\r\n            <h1 className=\"text-center\">{editMode ? \"Update Profile\" : \"Registration Page\"}</h1>\r\n          </Form.Row>\r\n          {<small>{message}</small>}\r\n          <hr />\r\n          <Form.Group>\r\n            <InputCreator\r\n              title=\"First name\"\r\n              type=\"text\"\r\n              required=\"true\"\r\n              value={formik.values.firstName}\r\n              placeholder=\"First Name\"\r\n              sign={<i class=\"fas fa-user\"></i>}\r\n              onChange={formik.handleChange}\r\n              name=\"firstName\"\r\n            />\r\n            {formik.touched.firstName && formik.errors.firstName ? <small className='text-danger'>{formik.errors.firstName} </small> : \"\"}\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <InputCreator\r\n              title=\"Last name\"\r\n              type=\"text\"\r\n              required=\"true\"\r\n              value={formik.values.lastName}\r\n              placeholder=\"last Name\"\r\n              sign={<i class=\"fas fa-user\"></i>}\r\n              onChange={formik.handleChange}\r\n              name=\"lastName\"\r\n            />\r\n            {formik.touched.lastName && formik.errors.lastName ? <small className='text-danger'>{formik.errors.lastName} </small> : \"\"}\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGridPassword\">\r\n            <InputCreator\r\n              title=\"Email\"\r\n              type=\"email\"\r\n              value={formik.values.email}\r\n              required=\"true\"\r\n              onChange={formik.handleChange}\r\n              placeholder=\"Email\"\r\n              sign={<i class=\"fas fa-mail-bulk\"></i>}\r\n              name=\"email\"\r\n            />\r\n            {formik.touched.email && formik.errors.email ? <small className='text-danger'>{formik.errors.email} </small> : \"\"}\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <InputCreator\r\n              title=\"Password\"\r\n              type=\"password\"\r\n              required=\"true\"\r\n              value={formik.values.password}\r\n              placeholder=\"password\"\r\n              sign={<i class=\"fas fa-mail-bulk\"></i>}\r\n              onChange={formik.handleChange}\r\n              name=\"password\"\r\n\r\n            />\r\n            {formik.touched.password && formik.errors.password ? <small className='text-danger'>{formik.errors.password} </small> : \"\"}\r\n\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <InputCreator\r\n              title=\"Confirm password\"\r\n              type=\"password\"\r\n              required=\"true\"\r\n              value={formik.values.confirmPassword}\r\n              placeholder=\"\"\r\n              sign={<i class=\"fas fa-mail-bulk\"></i>}\r\n              onChange={formik.handleChange}\r\n              name=\"confirmPassword\"\r\n            />\r\n            {formik.touched.confirmPassword && formik.errors.confirmPassword ? <small className='text-danger'>{formik.errors.confirmPassword} </small> : \"\"}\r\n\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Row>\r\n              {/* <Col className='col-sm-2'>\r\n                <label className='text-left d-block'>Favorite diet</label>\r\n              </Col> */}\r\n              {/* <Col className=\"d-flex flex-row flex-wrap col-sm-10 justify-content-center\">\r\n                {diets.length &&\r\n                  diets.map((diet) => {\r\n                    return (\r\n                      <Form.Check\r\n                        type=\"checkbox\"\r\n                        label={diet.name}\r\n                        name={'diet'}\r\n                        value={''+diet.id}\r\n                        checked={diet.select}\r\n                        onChange={(e) => {\r\n                          let checked = e.target.checked;\r\n                          setDiets(diets.map(item => {\r\n                            diet.select = checked;\r\n                            return item\r\n                          }))\r\n                          formik.handleChange(e);\r\n                        }}\r\n                      //  {...formik.getFieldProps(\"diet\")}\r\n                      />\r\n                    );\r\n                  })}\r\n                {formik.touched.diet && formik.errors.diet ? <small className='text-danger'>{formik.errors.diet} </small> : \"\"}\r\n\r\n              </Col> */}\r\n            </Row>\r\n          </Form.Group>\r\n          {\r\n            <Button type=\"submit\" id=\"submit\" >\r\n              {editMode ? \"update\" : \"sign-up\"}\r\n            </Button>\r\n          }\r\n          {!editMode && <Link to=\"/login\">Have an acount?login</Link>}\r\n        </div>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n"]},"metadata":{},"sourceType":"module"}