{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useForm = (callback, validate) => {\n  _s();\n\n  const [values, setValues] = useState({\n    diet: [],\n    category: [],\n    image: []\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (e.target.name == 'diet') {\n      if (values.diet.includes(value)) {\n        const newDiet = values.diet.filter(item => item !== value);\n        const diet = newDiet;\n        values.diet = diet;\n        const newVal = values;\n        setValues(newVal);\n      } else {\n        values.diet.push(value);\n        const diet = [...values.diet];\n        setValues({ ...values,\n          diet\n        });\n      }\n    } else if (e.target.name === 'image') {\n      setValues({ ...values,\n        image: e.target.files\n      });\n    } else if (e.target.name == 'category') {\n      if (values.category.includes(value)) {\n        console.log(values.category);\n        const newCat = values.category.filter(item => item !== value);\n        const category = newCat;\n        values.category = category;\n        const newVal = values;\n        setValues(newVal);\n      } else {\n        values.category.push(value);\n        const category = [...values.category];\n        setValues({ ...values,\n          category\n        });\n      }\n    } else {\n      setValues({ ...values,\n        [name]: value\n      });\n    }\n  };\n\n  cl;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true); // callback()\n  };\n\n  useEffect(() => {\n    for (const key in errors) {\n      if (!!errors[key].length) return;\n    }\n\n    callback();\n  }, [errors]);\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors\n  };\n};\n\n_s(useForm, \"AkWsB4MAR+C2pw6M0i0SQa5Tv4U=\");\n\nexport default useForm;","map":{"version":3,"sources":["C:/Users/User/Documents/projects/fullstack-project/client/src/components/utills/useForm.js"],"names":["useState","useEffect","useForm","callback","validate","values","setValues","diet","category","image","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","e","name","value","target","includes","newDiet","filter","item","newVal","push","files","console","log","newCat","cl","handleSubmit","preventDefault","key","length"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nconst useForm = (callback, validate) => {\r\n  const [values, setValues] = useState({ diet: [], category: [], image: [] });\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (e.target.name == 'diet') {\r\n      if (values.diet.includes(value)) {\r\n        const newDiet = values.diet.filter(item => item !== value);\r\n        const diet = newDiet;\r\n        values.diet = diet\r\n        const newVal = values\r\n        setValues(newVal)\r\n      } else {\r\n        values.diet.push(value)\r\n        const diet = [...values.diet]\r\n        setValues({ ...values, diet })\r\n      }\r\n    } else if (e.target.name === 'image') {\r\n      setValues({ ...values, image: e.target.files })\r\n    } else if (e.target.name == 'category') {\r\n      if (values.category.includes(value)) {\r\n        console.log(values.category);\r\n        \r\n        const newCat = values.category.filter(item => item !== value);\r\n        const category = newCat;\r\n        values.category = category\r\n        const newVal = values\r\n        setValues(newVal)\r\n      } else {\r\n        values.category.push(value)\r\n        const category = [...values.category]\r\n        setValues({ ...values, category })\r\n      }\r\n\r\n    } else {\r\n      setValues({ ...values, [name]: value });\r\n    }\r\n  };\r\ncl\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(validate(values));\r\n    setIsSubmitting(true);\r\n    // callback()\r\n\r\n  };\r\n  useEffect(() => {\r\n    for (const key in errors) {\r\n      if (!!errors[key].length) return;\r\n    }\r\n    callback();\r\n  }, [errors]);\r\n  return { handleChange, handleSubmit, values, errors };\r\n};\r\n\r\nexport default useForm;\r\n"]},"metadata":{},"sourceType":"module"}