{"ast":null,"code":"import { ADD_TO_CART, REMOVE_FROM_CART, CLEAR_ALL_FROM_CART } from \"./types\";\n\nconst addProductToCart = (state, product) => {\n  const copy = [...state.carts];\n  const curItemIndex = copy.findIndex(i => i.product.id === product.id);\n\n  if (curItemIndex < 0) {\n    copy.push({\n      product,\n      quantity: 1\n    });\n  } else {\n    const copyItem = { ...copy[curItemIndex]\n    };\n    copyItem.quantity++;\n    copy[curItemIndex] = copyItem;\n  } // # always update your state, and update whatever you did\n\n\n  return { ...state,\n    carts: copy\n  };\n};\n\nconst removeProductFromCart = (state, productID) => {\n  const copy = [...state.carts];\n  const curItemIndex = copy.findIndex(i => i.product.id === productID);\n  const curItem = { ...copy[curItemIndex]\n  };\n  curItem.quantity--;\n\n  if (curItem.quantity <= 0) {\n    copy.splice(curItemIndex, 1);\n  } else {\n    copy[curItemIndex] = curItem;\n  }\n\n  return { ...state,\n    carts: copy\n  };\n};\n\nconst clearCart = state => {\n  return { ...state,\n    carts: []\n  };\n};\n\nexport default ((state, action) => {\n  console.log(state);\n\n  switch (action.type) {\n    case \"REMOVE_RECIPE\":\n      return { ...state,\n        users: state.users.filter(user => {\n          return user.id !== action.payload;\n        })\n      };\n\n    case \"ADD_USER\":\n      return { ...state,\n        users: [action.payload, ...state.users]\n      };\n\n    case \"EDIT_USER\":\n      const updateUser = action.payload;\n      const updateUsers = state.users.map(user => {\n        if (user.id === updateUser.id) {\n          return updateUser;\n        }\n\n        return user;\n      });\n      return { ...state,\n        users: updateUsers\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Documents/projects/fullstack-project/client/src/components/context/AppReducer.js"],"names":["ADD_TO_CART","REMOVE_FROM_CART","CLEAR_ALL_FROM_CART","addProductToCart","state","product","copy","carts","curItemIndex","findIndex","i","id","push","quantity","copyItem","removeProductFromCart","productID","curItem","splice","clearCart","action","console","log","type","users","filter","user","payload","updateUser","updateUsers","map"],"mappings":"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","sourcesContent":["\r\nimport { ADD_TO_CART, REMOVE_FROM_CART, CLEAR_ALL_FROM_CART } from \"./types\";\r\n\r\nconst addProductToCart = (state, product) => {\r\n  const copy = [...state.carts];\r\n  const curItemIndex = copy.findIndex((i) => i.product.id === product.id);\r\n\r\n  if (curItemIndex < 0) {\r\n    copy.push({ product, quantity: 1 });\r\n  } else {\r\n    const copyItem = { ...copy[curItemIndex] };\r\n    copyItem.quantity++;\r\n    copy[curItemIndex] = copyItem;\r\n  }\r\n\r\n  // # always update your state, and update whatever you did\r\n  return { ...state, carts: copy };\r\n};\r\n\r\nconst removeProductFromCart = (state, productID) => {\r\n  const copy = [...state.carts];\r\n  const curItemIndex = copy.findIndex((i) => i.product.id === productID);\r\n\r\n  const curItem = { ...copy[curItemIndex] };\r\n  curItem.quantity--;\r\n\r\n  if (curItem.quantity <= 0) {\r\n    copy.splice(curItemIndex, 1);\r\n  } else {\r\n    copy[curItemIndex] = curItem;\r\n  }\r\n\r\n  return { ...state, carts: copy };\r\n};\r\n\r\nconst clearCart = (state) => {\r\n  return {\r\n    ...state,\r\n    carts: [],\r\n  };\r\n};\r\n\r\nexport default (state, action) => {\r\n  console.log(state);\r\n  switch (action.type) {\r\n    case \"REMOVE_RECIPE\":\r\n      return {\r\n        ...state,\r\n        users: state.users.filter((user) => {\r\n          return user.id !== action.payload;\r\n        }),\r\n      };\r\n    case \"ADD_USER\":\r\n      return {\r\n        ...state,\r\n        users: [action.payload, ...state.users],\r\n      };\r\n    case \"EDIT_USER\":\r\n      const updateUser = action.payload;\r\n\r\n      const updateUsers = state.users.map((user) => {\r\n        if (user.id === updateUser.id) {\r\n          return updateUser;\r\n        }\r\n        return user;\r\n      });\r\n      return {\r\n        ...state,\r\n        users: updateUsers,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}