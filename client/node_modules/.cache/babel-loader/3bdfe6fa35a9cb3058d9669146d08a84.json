{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useForm = (callback, validate) => {\n  _s();\n\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (e.target.type == \"checkbox\" && values[name]) {\n      delete values[name];\n      setValues({ ...values\n      });\n    } else {\n      setValues({ ...values,\n        [name]: value\n      });\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  console.log(values);\n  useEffect(() => {\n    for (const key in errors) {\n      if (!!errors[key].length) return;\n    }\n\n    isSubmitting && callback();\n  }, [errors]);\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors\n  };\n};\n\n_s(useForm, \"fN8x5Yp0b2dZEBXkEth9Ky/Ylmk=\");\n\nexport default useForm;","map":{"version":3,"sources":["C:/Users/User/Documents/projects/fullstack-project/src/components/utills/useForm.js"],"names":["useState","useEffect","useForm","callback","validate","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","e","name","value","target","type","handleSubmit","preventDefault","console","log","key","length"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AACA,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAAA;;AACtC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMW,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;;AACA,QAAIH,CAAC,CAACG,MAAF,CAASC,IAAT,IAAiB,UAAjB,IAA+BX,MAAM,CAACQ,IAAD,CAAzC,EAAiD;AAC7C,aAAOR,MAAM,CAACQ,IAAD,CAAb;AACFP,MAAAA,SAAS,CAAC,EAAE,GAAGD;AAAL,OAAD,CAAT;AACD,KAHD,MAGO;AACLC,MAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAa,SAACQ,IAAD,GAAQC;AAArB,OAAD,CAAT;AACD;AACF,GARD;;AAUA,QAAMG,YAAY,GAAIL,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACM,cAAF;AACAV,IAAAA,SAAS,CAACJ,QAAQ,CAACC,MAAD,CAAT,CAAT;AAEAK,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GALD;;AAMAS,EAAAA,OAAO,CAACC,GAAR,CAAYf,MAAZ;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,SAAK,MAAMoB,GAAX,IAAkBd,MAAlB,EAA0B;AACxB,UAAI,CAAC,CAACA,MAAM,CAACc,GAAD,CAAN,CAAYC,MAAlB,EAA0B;AAC3B;;AACDb,IAAAA,YAAY,IAAIN,QAAQ,EAAxB;AACD,GALQ,EAKN,CAACI,MAAD,CALM,CAAT;AAOA,SAAO;AAAEI,IAAAA,YAAF;AAAgBM,IAAAA,YAAhB;AAA8BZ,IAAAA,MAA9B;AAAsCE,IAAAA;AAAtC,GAAP;AACD,CAhCD;;GAAML,O;;AAkCN,eAAeA,OAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nconst useForm = (callback, validate) => {\r\n  const [values, setValues] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (e.target.type == \"checkbox\" && values[name]) {\r\n        delete values[name]\r\n      setValues({ ...values});\r\n    } else {\r\n      setValues({ ...values, [name]: value });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(validate(values));\r\n\r\n    setIsSubmitting(true);\r\n  };\r\n  console.log(values);\r\n\r\n  useEffect(() => {\r\n    for (const key in errors) {\r\n      if (!!errors[key].length) return;\r\n    }\r\n    isSubmitting && callback();\r\n  }, [errors]);\r\n\r\n  return { handleChange, handleSubmit, values, errors };\r\n};\r\n\r\nexport default useForm;\r\n"]},"metadata":{},"sourceType":"module"}