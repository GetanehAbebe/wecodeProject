{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\projects\\\\fullstack-project\\\\client\\\\src\\\\components\\\\forms\\\\NewRecipeForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport * as Yup from 'yup';\nimport { Accordion, Card, Button, Form, Col, Row, Table } from \"react-bootstrap\";\nimport useForm from \"../utills/useForm\";\nimport validate from \"../utills/validateInfo\";\nimport { getData, insertDataToDB, ingredientsOfRecipe, uploadRecipe, appentIngredient, getRecipeDetails, updateRecipe } from \"../DAL/api\";\nimport { useHistory } from \"react-router-dom\";\nimport ErrorMessages from \"../utills/ErrorMessages\";\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cookies = require('js-cookie');\n\nconst axios = require('axios');\n\nfunction NewRecipeForm({\n  match,\n  recipeId,\n  mode\n}) {\n  _s();\n\n  var _units$;\n\n  const [ingredients, setIngredients] = useState([]);\n  const [image, setImage] = useState(null);\n  const [units, setUnits] = useState([]);\n  const [instructions, setInstructions] = useState([]);\n  const [guide, setGuide] = useState([]);\n  const [diets, setDiets] = useState([]);\n  const [recipeIngredient, setRecipeIngredient] = useState({});\n  const [recipeGuide, setRecipeGuide] = useState({});\n  const [editMode, setEditMode] = useState(false);\n  const [newIngredient, setNewIngredient] = useState('');\n  const history = useHistory();\n  const [addIng, setAddIng] = useState(false);\n  const [message, setMessage] = useState('');\n  const [categories, setCategories] = useState([]); // const { handleSubmit, handleChange, values, errors } = useForm(submit, validate);\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      source: \"\",\n      sourceUrl: \"\",\n      diet: [],\n      category: [],\n      prepTimeMin: '',\n      description: '',\n      image: '',\n      ingredient: ''\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().min(3).max(30).required(),\n      // image: Yup.string().required(\"required\"),\n      ingredient: Yup.string().max(20).min(3).matches(/[a-z]/, 'must be letters in lowercase'),\n      // diet: Yup.array().min(2, 'choose at least 2 types').required(),\n      // category: Yup.array().min(2, 'choose at least 2 types').required(),\n      prepTimeMin: Yup.string(),\n      description: Yup.string().min(3).max(150),\n      source: Yup.string().min(3, 'min 3 charachters').max(40, 'must be 20 charachters or less').required('required')\n    }),\n    onSubmit: async values => {\n      const data = new FormData();\n      formik.values.guide = guide;\n      formik.values.userId = Cookies.get('user');\n      formik.values.instructions = instructions;\n      if (recipeId) formik.values.id = recipeId;\n      data.append(\"image\", image);\n      data.append(\"user\", Cookies.get('user'));\n      data.append(\"recipe\", JSON.stringify(formik.values));\n\n      if (!recipeId) {\n        const response = await uploadRecipe(data);\n      } else {\n        const update = await updateRecipe(data);\n        submit();\n      }\n    }\n  });\n\n  const deleteInstruction = index => {\n    instructions.splice(index, 1);\n    setInstructions([...instructions]);\n  };\n\n  const deleteGuide = index => {\n    guide.splice(index, 1);\n    setGuide([...guide]);\n  };\n\n  const checkThefilds = obj => {\n    if (Object.keys(obj).length === 0 || Object.keys(obj).length < 3) return false;\n\n    for (const prop in obj) {\n      console.log('prop', prop);\n      if (!obj[prop].length) return false;\n    }\n\n    return true;\n  };\n\n  const addToList = value => {\n    if (value === 'ingredients') {\n      console.log(formik.values.ingredient, instructions.includes(formik.values.ingredient));\n      const check = instructions.filter(item => item.ingredient === formik.values.ingredient);\n\n      if (!formik.errors.ingredient) {\n        recipeIngredient.ingredient = formik.values.ingredient;\n      }\n\n      if (check.length === 0) {\n        if (checkThefilds(recipeIngredient)) {\n          setInstructions([...instructions, { ...recipeIngredient\n          }]);\n          formik.values.ingredient = '';\n        } else {\n          alert('please check the fields');\n        }\n      } else alert(`you can't insert the ${formik.values.ingredient} twice into ingredients`);\n    }\n\n    if (value === 'guide') setGuide([...guide, recipeGuide]);\n  };\n\n  const insertDataToForm = recipe => {\n    var _recipe$images$;\n\n    console.log('recipe from insert into table', recipe); // formik.values.name = recipe.recipe.name\n    // formik.values.source = recipe.recipe.source\n    // formik.values.sourceUrl = recipe.recipe.sourceUrl\n    // formik.values.description = recipe.recipe.description\n    // formik.values.isPrivate = !!recipe.recipe.isPrivate\n    // formik.values.prepTimeMin = recipe.recipe.prepTimeMin\n    // formik.values.image = recipe.images[0]?.url\n\n    formik.values.name = recipe.name;\n    formik.values.source = recipe.source;\n    formik.values.sourceUrl = recipe.sourceUrl;\n    formik.values.description = recipe.description;\n    formik.values.isPrivate = !!recipe.isPrivate;\n    formik.values.prepTimeMin = recipe.prepTimeMin; // formik.values.image = recipe.images[0]?.url\n\n    console.log(recipe.category);\n    setImage((_recipe$images$ = recipe.images[0]) === null || _recipe$images$ === void 0 ? void 0 : _recipe$images$.url);\n    console.log(recipe.ingredients);\n    setGuide(recipe.instructions);\n    setInstructions(recipe.ingredients);\n    const arr = [];\n\n    for (let x of recipe.categories) {\n      console.log(x);\n      arr.push(x.categoryId || x.id);\n    }\n\n    formik.values.category = arr;\n    const diets = [];\n\n    for (let x of recipe.diets) {\n      diets.push(x.id || x.dietId);\n    }\n\n    formik.values.diet = diets;\n  };\n\n  async function submit() {\n    // if (checkErrors(errors)) {\n    const data = new FormData();\n    formik.values.guide = guide;\n    formik.values.instructions = instructions;\n    if (recipeId) formik.values.id = recipeId;\n    data.append(\"image\", image);\n    data.append(\"user\", Cookies.get('user'));\n    data.append(\"recipe\", JSON.stringify(formik.values));\n\n    if (!recipeId) {\n      const response = await uploadRecipe(data);\n      if (response) setMessage('Successfully completed');\n    } else {\n      const update = await updateRecipe(data);\n      if (update) setMessage('updated');\n    }\n  }\n\n  const changeIngredient = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'ingredient') return; // console.log('ingredient', value);\n    // if (name === 'ingredient') {\n    //   for (let x of instructions) {\n    //     console.log(x.ingredient);\n    //     if (x.ingredient === value) alert('the ingredient already inserted')\n    //   }\n    // }\n\n    setRecipeIngredient({ ...recipeIngredient,\n      [name]: value\n    });\n  };\n\n  const changeGuide = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setRecipeGuide({ ...recipeGuide,\n      [name]: value\n    });\n  };\n\n  const addIngtoDB = async () => {\n    for (let ing of ingredients) {\n      if (ing.name === newIngredient) alert('already exist');\n    }\n\n    const response = await appentIngredient(newIngredient);\n    setAddIng(false);\n  };\n\n  useEffect(async () => {\n    if (recipeId) {\n      setEditMode(true); // const instruc = await ingredientsOfRecipe(recipeId)\n\n      const formRecipe = await getRecipeDetails(recipeId);\n      insertDataToForm(formRecipe);\n      console.log(\"instruc\", formRecipe);\n    }\n\n    if (!Cookies.get('user')) history.push('/login');\n    const fetchDiets = await getData('diets');\n    console.log(fetchDiets);\n    const fetchUnits = await getData('units');\n    const fetchCategories = await getData('categories');\n    const fetchIngredient = await getData('ingredients');\n    setDiets(fetchDiets.map(item => {\n      return {\n        select: formik.values.diet.includes(item.id),\n        name: item.name,\n        id: item.id || item[\"_id\"]\n      };\n    }));\n    setUnits(fetchUnits);\n    setIngredients(fetchIngredient);\n    setCategories(fetchCategories.map(cat => {\n      console.log(formik.values.category);\n      return {\n        select: formik.values.category.includes(cat.id),\n        name: cat.name,\n        id: cat.id || cat[\"_id\"]\n      };\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: formik.handleSubmit,\n    encType: \"multipart/form-data\",\n    className: \"text-dark\",\n    children: [message.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 25\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: editMode ? \"Update Recipe\" : \"Add Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          className: \"col-md-7\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Recipe name \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"name\",\n            value: formik.values,\n            ...formik.getFieldProps(\"name\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), formik.touched.name && formik.errors.name ? /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-danger\",\n            children: [formik.errors.name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 58\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Form.File, {\n            label: \"Image\",\n            name: \"image\",\n            accept: \".jpg, .png,.jpeg\",\n            DefaultValue: formik.values,\n            onChange: e => {\n              setImage(e.target.files[0]);\n              formik.handleChange(e);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), formik.touched.image && formik.errors.image ? /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-danger\",\n            children: [formik.errors.image, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 60\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"container-fluid\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" source\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"recipe source\",\n            name: \"source\",\n            value: formik.values,\n            ...formik.getFieldProps(\"source\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), formik.touched.source && formik.errors.source ? /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-danger\",\n            children: [formik.errors.source, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 62\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" link to source \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \" if exists\",\n            name: \"sourceUrl\",\n            value: formik.values,\n            ...formik.getFieldProps(\"sourceUrl\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), formik.touched.sourceUrl && formik.errors.sourceUrl ? /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-danger\",\n            children: [formik.errors.sourceUrl, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 68\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n        defaultActiveKey: \"0\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n              as: Button,\n              variant: \"link\",\n              eventKey: \"3\",\n              children: \"General description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n            eventKey: \"3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"textarea\",\n                    rows: 1,\n                    name: \"description\",\n                    placeholder: \"description as you can shortly\",\n                    value: formik.values,\n                    ...formik.getFieldProps(\"description\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 21\n                  }, this), formik.touched.description && formik.errors.description ? /*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"text-danger\",\n                    children: [formik.errors.description, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 80\n                  }, this) : \"\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"col-sm-4\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"preparation time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"number\",\n                    min: 3,\n                    placeholder: \"time in minutes\",\n                    name: \"prepTimeMin\",\n                    value: formik.values,\n                    ...formik.getFieldProps(\"prepTimeMin\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 308,\n                    columnNumber: 21\n                  }, this), formik.touched.prepTimeMin && formik.errors.prepTimeMin ? /*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"text-danger\",\n                    children: [formik.errors.prepTimeMin, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 80\n                  }, this) : \"\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  className: \"container-fluid mx-2\",\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: [/*#__PURE__*/_jsxDEV(Row, {\n                      className: \"mr-3\",\n                      children: \"Diet type: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 322,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Row, {\n                      children: [diets.length && diets.map(diet => {\n                        return /*#__PURE__*/_jsxDEV(Form.Check, {\n                          type: \"checkbox\",\n                          label: diet.name,\n                          name: \"diet\",\n                          checked: diet.id in formik.values.diet || diet.select,\n                          value: diet.id || diet[\"_id\"],\n                          onChange: e => {\n                            let checked = e.target.checked;\n                            setDiets(diets.map(item => {\n                              diet.select = checked;\n                              return item;\n                            }));\n                            formik.handleChange(e);\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 327,\n                          columnNumber: 31\n                        }, this);\n                      }), formik.touched.diet && formik.errors.diet ? /*#__PURE__*/_jsxDEV(\"small\", {\n                        className: \"text-danger\",\n                        children: [formik.errors.diet, \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 343,\n                        columnNumber: 70\n                      }, this) : \"\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 323,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: [/*#__PURE__*/_jsxDEV(Row, {\n                      className: \"mr-3\",\n                      children: \"Category \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 347,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Row, {\n                      children: [categories.length && categories.map(category => {\n                        return /*#__PURE__*/_jsxDEV(Form.Check, {\n                          type: \"checkbox\",\n                          label: category.name,\n                          name: \"category\",\n                          checked: category.select,\n                          value: category.id || category[\"_id\"],\n                          onChange: e => {\n                            let checked = e.target.checked;\n                            setCategories(categories.map(item => {\n                              category.select = checked;\n                              return item;\n                            }));\n                            formik.handleChange(e);\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 352,\n                          columnNumber: 31\n                        }, this);\n                      }), formik.touched.category && formik.errors.category ? /*#__PURE__*/_jsxDEV(\"small\", {\n                        className: \"text-danger\",\n                        children: [formik.errors.category, \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 370,\n                        columnNumber: 78\n                      }, this) : \"\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 348,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n              as: Button,\n              variant: \"link\",\n              eventKey: \"0\",\n              children: \"Ingredients\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n            eventKey: \"0\",\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [instructions.length > 0 && instructions.map((item, i) => {\n                var _units, _ingredients;\n\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex ingredints mb-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-sm-2\",\n                    children: item.quantity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 390,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-sm-4\",\n                    children: (_units = units[item.measureUnit - 1]) === null || _units === void 0 ? void 0 : _units.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 391,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-sm-4\",\n                    children: item.ingredient || item.name || ((_ingredients = ingredients[item.ingredient - 1]) === null || _ingredients === void 0 ? void 0 : _ingredients.name)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fas fa-trash text-sm\",\n                    onClick: () => deleteInstruction(i),\n                    children: \" \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 393,\n                    columnNumber: 23\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 21\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"small-5 mt-4\",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  className: \"col-sm-2\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Amount\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 399,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"number\",\n                    min: 1,\n                    name: \"quantity\",\n                    onChange: e => {\n                      changeIngredient(e);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 400,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"col-md-4 mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Measurement unit \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    onChange: e => changeIngredient(e),\n                    name: \"measureUnit\",\n                    defaultValue: (_units$ = units[0]) === null || _units$ === void 0 ? void 0 : _units$.id,\n                    children: units.map((unit, i) => {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: unit.id,\n                        name: unit.name,\n                        children: unit.name\n                      }, i, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 407,\n                        columnNumber: 27\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 404,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Ingredient\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 415,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    name: \"ingredient\",\n                    value: formik.values,\n                    ...formik.getFieldProps(\"ingredient\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 416,\n                    columnNumber: 21\n                  }, this), formik.touched.ingredient && formik.errors.ingredient ? /*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"text-danger\",\n                    children: [formik.errors.ingredient, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 417,\n                    columnNumber: 78\n                  }, this) : \"\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"md-3  save-btn\",\n                    onClick: e => addToList('ingredients'),\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 420,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n              as: Button,\n              variant: \"link\",\n              eventKey: \"1\",\n              children: \"Preparation steps\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n            eventKey: \"1\",\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [guide.length > 0 && guide.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex instruction\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-left col-sm-10 \",\n                  children: item.instruction\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => deleteGuide(i),\n                  className: \"col-sm-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fas fa-trash text-sm \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 444,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 23\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"d-flex \",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  className: \"col-md-10\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"instruction\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 450,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"input\",\n                    name: \"instruction\",\n                    onChange: e => changeGuide(e)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 451,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"col-md-2 mb-0\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    className: \" flex-grow-0\",\n                    onClick: () => addToList('guide'),\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 454,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"text-left\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: editMode ? \"Update Recipe\" : \"Add Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewRecipeForm, \"fdXpluzA/QSqurzmo+g+bIh2sas=\", false, function () {\n  return [useHistory, useFormik];\n});\n\n_c = NewRecipeForm;\nexport default NewRecipeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewRecipeForm\");","map":{"version":3,"sources":["C:/Users/User/Documents/projects/fullstack-project/client/src/components/forms/NewRecipeForm.jsx"],"names":["useEffect","useState","Yup","Accordion","Card","Button","Form","Col","Row","Table","useForm","validate","getData","insertDataToDB","ingredientsOfRecipe","uploadRecipe","appentIngredient","getRecipeDetails","updateRecipe","useHistory","ErrorMessages","useFormik","Cookies","require","axios","NewRecipeForm","match","recipeId","mode","ingredients","setIngredients","image","setImage","units","setUnits","instructions","setInstructions","guide","setGuide","diets","setDiets","recipeIngredient","setRecipeIngredient","recipeGuide","setRecipeGuide","editMode","setEditMode","newIngredient","setNewIngredient","history","addIng","setAddIng","message","setMessage","categories","setCategories","formik","initialValues","name","source","sourceUrl","diet","category","prepTimeMin","description","ingredient","validationSchema","object","string","min","max","required","matches","onSubmit","values","data","FormData","userId","get","id","append","JSON","stringify","response","update","submit","deleteInstruction","index","splice","deleteGuide","checkThefilds","obj","Object","keys","length","prop","console","log","addToList","value","includes","check","filter","item","errors","alert","insertDataToForm","recipe","isPrivate","images","url","arr","x","push","categoryId","dietId","changeIngredient","e","target","changeGuide","addIngtoDB","ing","formRecipe","fetchDiets","fetchUnits","fetchCategories","fetchIngredient","map","select","cat","handleSubmit","getFieldProps","touched","files","handleChange","checked","i","quantity","measureUnit","unit","instruction"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,MAA1B,EAAkCC,IAAlC,EAAwCC,GAAxC,EAA6CC,GAA7C,EAAkDC,KAAlD,QAAgE,iBAAhE;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,OAAT,EAAkBC,cAAlB,EAAkCC,mBAAlC,EAAuDC,YAAvD,EAAqEC,gBAArE,EAAuFC,gBAAvF,EAAyGC,YAAzG,QAA6H,YAA7H;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,SAASC,SAAT,QAA0B,QAA1B;;;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;AAGA,SAASE,aAAT,CAAuB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAvB,EAAkD;AAAA;;AAAA;;AAChD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgC7B,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAC8B,KAAD,EAAQC,QAAR,IAAoB/B,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACgC,KAAD,EAAQC,QAAR,IAAoBjC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACkC,YAAD,EAAeC,eAAf,IAAkCnC,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACoC,KAAD,EAAQC,QAAR,IAAoBrC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACsC,KAAD,EAAQC,QAAR,IAAoBvC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACwC,gBAAD,EAAmBC,mBAAnB,IAA0CzC,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAAC0C,WAAD,EAAcC,cAAd,IAAgC3C,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAC4C,QAAD,EAAWC,WAAX,IAA0B7C,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAAC8C,aAAD,EAAgBC,gBAAhB,IAAoC/C,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAMgD,OAAO,GAAG9B,UAAU,EAA1B;AACA,QAAM,CAAC+B,MAAD,EAASC,SAAT,IAAsBlD,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACmD,OAAD,EAAUC,UAAV,IAAwBpD,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACqD,UAAD,EAAaC,aAAb,IAA8BtD,QAAQ,CAAC,EAAD,CAA5C,CAdgD,CAehD;;AAKA,QAAMuD,MAAM,GAAGnC,SAAS,CAAC;AACvBoC,IAAAA,aAAa,EAAE;AACbC,MAAAA,IAAI,EAAE,EADO;AAEbC,MAAAA,MAAM,EAAE,EAFK;AAGbC,MAAAA,SAAS,EAAE,EAHE;AAIbC,MAAAA,IAAI,EAAE,EAJO;AAKbC,MAAAA,QAAQ,EAAE,EALG;AAMbC,MAAAA,WAAW,EAAE,EANA;AAObC,MAAAA,WAAW,EAAE,EAPA;AAQbjC,MAAAA,KAAK,EAAE,EARM;AASbkC,MAAAA,UAAU,EAAE;AATC,KADQ;AAavBC,IAAAA,gBAAgB,EAAEhE,GAAG,CAACiE,MAAJ,CAAW;AAC3BT,MAAAA,IAAI,EAAExD,GAAG,CAACkE,MAAJ,GACHC,GADG,CACC,CADD,EAEHC,GAFG,CAEC,EAFD,EAEKC,QAFL,EADqB;AAI3B;AACAN,MAAAA,UAAU,EAAE/D,GAAG,CAACkE,MAAJ,GAAaE,GAAb,CAAiB,EAAjB,EAAqBD,GAArB,CAAyB,CAAzB,EAA4BG,OAA5B,CAAoC,OAApC,EAA6C,8BAA7C,CALe;AAM3B;AACA;AACAT,MAAAA,WAAW,EAAE7D,GAAG,CAACkE,MAAJ,EARc;AAS3BJ,MAAAA,WAAW,EAAE9D,GAAG,CAACkE,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,GAAxB,CATc;AAU3BX,MAAAA,MAAM,EAAEzD,GAAG,CAACkE,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoB,mBAApB,EAAyCC,GAAzC,CAA6C,EAA7C,EAAiD,gCAAjD,EAAmFC,QAAnF,CAA4F,UAA5F;AAVmB,KAAX,CAbK;AAyBvBE,IAAAA,QAAQ,EAAE,MAAOC,MAAP,IAAkB;AAC1B,YAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACApB,MAAAA,MAAM,CAACkB,MAAP,CAAcrC,KAAd,GAAsBA,KAAtB;AACAmB,MAAAA,MAAM,CAACkB,MAAP,CAAcG,MAAd,GAAuBvD,OAAO,CAACwD,GAAR,CAAY,MAAZ,CAAvB;AACAtB,MAAAA,MAAM,CAACkB,MAAP,CAAcvC,YAAd,GAA6BA,YAA7B;AAEA,UAAIR,QAAJ,EAAc6B,MAAM,CAACkB,MAAP,CAAcK,EAAd,GAAmBpD,QAAnB;AACdgD,MAAAA,IAAI,CAACK,MAAL,CAAY,OAAZ,EAAqBjD,KAArB;AACA4C,MAAAA,IAAI,CAACK,MAAL,CAAY,MAAZ,EAAoB1D,OAAO,CAACwD,GAAR,CAAY,MAAZ,CAApB;AACAH,MAAAA,IAAI,CAACK,MAAL,CAAY,QAAZ,EAAsBC,IAAI,CAACC,SAAL,CAAe1B,MAAM,CAACkB,MAAtB,CAAtB;;AACA,UAAI,CAAC/C,QAAL,EAAe;AACb,cAAMwD,QAAQ,GAAG,MAAMpE,YAAY,CAAC4D,IAAD,CAAnC;AACD,OAFD,MAEO;AACL,cAAMS,MAAM,GAAG,MAAMlE,YAAY,CAACyD,IAAD,CAAjC;AACAU,QAAAA,MAAM;AACP;AAEF;AA1CsB,GAAD,CAAxB;;AA6CA,QAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACnCpD,IAAAA,YAAY,CAACqD,MAAb,CAAoBD,KAApB,EAA2B,CAA3B;AACAnD,IAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,CAAD,CAAf;AACD,GAHD;;AAKA,QAAMsD,WAAW,GAAIF,KAAD,IAAW;AAC7BlD,IAAAA,KAAK,CAACmD,MAAN,CAAaD,KAAb,EAAoB,CAApB;AACAjD,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,CAAD,CAAR;AACD,GAHD;;AAIA,QAAMqD,aAAa,GAAIC,GAAD,IAAS;AAC7B,QAAIC,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiBG,MAAjB,KAA4B,CAA5B,IAAiCF,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiBG,MAAjB,GAA0B,CAA/D,EAAkE,OAAO,KAAP;;AAClE,SAAK,MAAMC,IAAX,IAAmBJ,GAAnB,EAAwB;AACtBK,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;AACA,UAAI,CAACJ,GAAG,CAACI,IAAD,CAAH,CAAUD,MAAf,EAAuB,OAAO,KAAP;AAExB;;AACD,WAAO,IAAP;AACD,GARD;;AAUA,QAAMI,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAIA,KAAK,KAAK,aAAd,EAA6B;AAE3BH,MAAAA,OAAO,CAACC,GAAR,CAAYzC,MAAM,CAACkB,MAAP,CAAcT,UAA1B,EAAsC9B,YAAY,CAACiE,QAAb,CAAsB5C,MAAM,CAACkB,MAAP,CAAcT,UAApC,CAAtC;AACA,YAAMoC,KAAK,GAAGlE,YAAY,CAACmE,MAAb,CAAoBC,IAAI,IAAIA,IAAI,CAACtC,UAAL,KAAoBT,MAAM,CAACkB,MAAP,CAAcT,UAA9D,CAAd;;AACA,UAAI,CAACT,MAAM,CAACgD,MAAP,CAAcvC,UAAnB,EAA+B;AAC7BxB,QAAAA,gBAAgB,CAACwB,UAAjB,GAA8BT,MAAM,CAACkB,MAAP,CAAcT,UAA5C;AACD;;AAED,UAAIoC,KAAK,CAACP,MAAN,KAAiB,CAArB,EAAwB;AACtB,YAAIJ,aAAa,CAACjD,gBAAD,CAAjB,EAAqC;AACnCL,UAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkB,EAAE,GAAGM;AAAL,WAAlB,CAAD,CAAf;AACAe,UAAAA,MAAM,CAACkB,MAAP,CAAcT,UAAd,GAA2B,EAA3B;AACD,SAHD,MAGO;AACLwC,UAAAA,KAAK,CAAC,yBAAD,CAAL;AACD;AACF,OAPD,MAQKA,KAAK,CAAE,wBAAuBjD,MAAM,CAACkB,MAAP,CAAcT,UAAW,yBAAlD,CAAL;AACN;;AACD,QAAIkC,KAAK,KAAK,OAAd,EAAuB7D,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWM,WAAX,CAAD,CAAR;AAExB,GArBD;;AAwBA,QAAM+D,gBAAgB,GAAIC,MAAD,IAAY;AAAA;;AACnCX,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA4CU,MAA5C,EADmC,CAEnC;AACA;AACA;AACA;AACA;AACA;AACA;;AACAnD,IAAAA,MAAM,CAACkB,MAAP,CAAchB,IAAd,GAAqBiD,MAAM,CAACjD,IAA5B;AACAF,IAAAA,MAAM,CAACkB,MAAP,CAAcf,MAAd,GAAuBgD,MAAM,CAAChD,MAA9B;AACAH,IAAAA,MAAM,CAACkB,MAAP,CAAcd,SAAd,GAA0B+C,MAAM,CAAC/C,SAAjC;AACAJ,IAAAA,MAAM,CAACkB,MAAP,CAAcV,WAAd,GAA4B2C,MAAM,CAAC3C,WAAnC;AACAR,IAAAA,MAAM,CAACkB,MAAP,CAAckC,SAAd,GAA0B,CAAC,CAACD,MAAM,CAACC,SAAnC;AACApD,IAAAA,MAAM,CAACkB,MAAP,CAAcX,WAAd,GAA4B4C,MAAM,CAAC5C,WAAnC,CAdmC,CAenC;;AACAiC,IAAAA,OAAO,CAACC,GAAR,CAAYU,MAAM,CAAC7C,QAAnB;AACA9B,IAAAA,QAAQ,oBAAC2E,MAAM,CAACE,MAAP,CAAc,CAAd,CAAD,oDAAC,gBAAkBC,GAAnB,CAAR;AACAd,IAAAA,OAAO,CAACC,GAAR,CAAYU,MAAM,CAAC9E,WAAnB;AACAS,IAAAA,QAAQ,CAACqE,MAAM,CAACxE,YAAR,CAAR;AACAC,IAAAA,eAAe,CAACuE,MAAM,CAAC9E,WAAR,CAAf;AACA,UAAMkF,GAAG,GAAG,EAAZ;;AACA,SAAK,IAAIC,CAAT,IAAcL,MAAM,CAACrD,UAArB,EAAiC;AAC/B0C,MAAAA,OAAO,CAACC,GAAR,CAAYe,CAAZ;AACAD,MAAAA,GAAG,CAACE,IAAJ,CAAUD,CAAC,CAACE,UAAF,IAAgBF,CAAC,CAACjC,EAA5B;AACD;;AACDvB,IAAAA,MAAM,CAACkB,MAAP,CAAcZ,QAAd,GAAyBiD,GAAzB;AACA,UAAMxE,KAAK,GAAG,EAAd;;AACA,SAAK,IAAIyE,CAAT,IAAcL,MAAM,CAACpE,KAArB,EAA4B;AAE1BA,MAAAA,KAAK,CAAC0E,IAAN,CAAYD,CAAC,CAACjC,EAAF,IAAQiC,CAAC,CAACG,MAAtB;AACD;;AACD3D,IAAAA,MAAM,CAACkB,MAAP,CAAcb,IAAd,GAAqBtB,KAArB;AACD,GAjCD;;AAmCA,iBAAe8C,MAAf,GAAwB;AACtB;AACA,UAAMV,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACApB,IAAAA,MAAM,CAACkB,MAAP,CAAcrC,KAAd,GAAsBA,KAAtB;AACAmB,IAAAA,MAAM,CAACkB,MAAP,CAAcvC,YAAd,GAA6BA,YAA7B;AAEA,QAAIR,QAAJ,EAAc6B,MAAM,CAACkB,MAAP,CAAcK,EAAd,GAAmBpD,QAAnB;AACdgD,IAAAA,IAAI,CAACK,MAAL,CAAY,OAAZ,EAAqBjD,KAArB;AACA4C,IAAAA,IAAI,CAACK,MAAL,CAAY,MAAZ,EAAoB1D,OAAO,CAACwD,GAAR,CAAY,MAAZ,CAApB;AACAH,IAAAA,IAAI,CAACK,MAAL,CAAY,QAAZ,EAAsBC,IAAI,CAACC,SAAL,CAAe1B,MAAM,CAACkB,MAAtB,CAAtB;;AACA,QAAI,CAAC/C,QAAL,EAAe;AACb,YAAMwD,QAAQ,GAAG,MAAMpE,YAAY,CAAC4D,IAAD,CAAnC;AACA,UAAIQ,QAAJ,EAAc9B,UAAU,CAAC,wBAAD,CAAV;AACf,KAHD,MAGO;AACL,YAAM+B,MAAM,GAAG,MAAMlE,YAAY,CAACyD,IAAD,CAAjC;AAEA,UAAIS,MAAJ,EAAY/B,UAAU,CAAC,SAAD,CAAV;AACb;AACF;;AACD,QAAM+D,gBAAgB,GAAIC,CAAD,IAAO;AAC9B,UAAM;AAAE3D,MAAAA,IAAF;AAAQyC,MAAAA;AAAR,QAAkBkB,CAAC,CAACC,MAA1B;AACA,QAAI5D,IAAI,KAAK,YAAb,EAA2B,OAFG,CAG9B;AAEA;AAEA;AACA;AACA;AAEA;AACA;;AAGAhB,IAAAA,mBAAmB,CAAC,EAAE,GAAGD,gBAAL;AAAuB,OAACiB,IAAD,GAAQyC;AAA/B,KAAD,CAAnB;AACD,GAhBD;;AAkBA,QAAMoB,WAAW,GAAIF,CAAD,IAAO;AACzB,UAAM;AAAE3D,MAAAA,IAAF;AAAQyC,MAAAA;AAAR,QAAkBkB,CAAC,CAACC,MAA1B;AACA1E,IAAAA,cAAc,CAAC,EAAE,GAAGD,WAAL;AAAkB,OAACe,IAAD,GAAQyC;AAA1B,KAAD,CAAd;AACD,GAHD;;AAMA,QAAMqB,UAAU,GAAG,YAAY;AAC7B,SAAK,IAAIC,GAAT,IAAgB5F,WAAhB,EAA6B;AAC3B,UAAI4F,GAAG,CAAC/D,IAAJ,KAAaX,aAAjB,EAAgC0D,KAAK,CAAC,eAAD,CAAL;AACjC;;AACD,UAAMtB,QAAQ,GAAG,MAAMnE,gBAAgB,CAAC+B,aAAD,CAAvC;AACAI,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAND;;AAQAnD,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAI2B,QAAJ,EAAc;AACZmB,MAAAA,WAAW,CAAC,IAAD,CAAX,CADY,CAEZ;;AACA,YAAM4E,UAAU,GAAG,MAAMzG,gBAAgB,CAACU,QAAD,CAAzC;AAEA+E,MAAAA,gBAAgB,CAACgB,UAAD,CAAhB;AACA1B,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuByB,UAAvB;AAED;;AACD,QAAI,CAACpG,OAAO,CAACwD,GAAR,CAAY,MAAZ,CAAL,EAA0B7B,OAAO,CAACgE,IAAR,CAAa,QAAb;AAC1B,UAAMU,UAAU,GAAG,MAAM/G,OAAO,CAAC,OAAD,CAAhC;AACAoF,IAAAA,OAAO,CAACC,GAAR,CAAY0B,UAAZ;AACA,UAAMC,UAAU,GAAG,MAAMhH,OAAO,CAAC,OAAD,CAAhC;AACA,UAAMiH,eAAe,GAAG,MAAMjH,OAAO,CAAC,YAAD,CAArC;AACA,UAAMkH,eAAe,GAAG,MAAMlH,OAAO,CAAC,aAAD,CAArC;AACA4B,IAAAA,QAAQ,CAACmF,UAAU,CAACI,GAAX,CAAexB,IAAI,IAAI;AAC9B,aAAO;AACLyB,QAAAA,MAAM,EAAExE,MAAM,CAACkB,MAAP,CAAcb,IAAd,CAAmBuC,QAAnB,CAA4BG,IAAI,CAACxB,EAAjC,CADH;AAELrB,QAAAA,IAAI,EAAE6C,IAAI,CAAC7C,IAFN;AAGLqB,QAAAA,EAAE,EAAEwB,IAAI,CAACxB,EAAL,IAAWwB,IAAI,CAAC,KAAD;AAHd,OAAP;AAKD,KANQ,CAAD,CAAR;AAOArE,IAAAA,QAAQ,CAAC0F,UAAD,CAAR;AACA9F,IAAAA,cAAc,CAACgG,eAAD,CAAd;AACAvE,IAAAA,aAAa,CAACsE,eAAe,CAACE,GAAhB,CAAoBE,GAAG,IAAI;AACvCjC,MAAAA,OAAO,CAACC,GAAR,CAAYzC,MAAM,CAACkB,MAAP,CAAcZ,QAA1B;AACA,aAAO;AACLkE,QAAAA,MAAM,EAAExE,MAAM,CAACkB,MAAP,CAAcZ,QAAd,CAAuBsC,QAAvB,CAAgC6B,GAAG,CAAClD,EAApC,CADH;AAELrB,QAAAA,IAAI,EAAEuE,GAAG,CAACvE,IAFL;AAGLqB,QAAAA,EAAE,EAAEkD,GAAG,CAAClD,EAAJ,IAAUkD,GAAG,CAAC,KAAD;AAHZ,OAAP;AAKD,KAPa,CAAD,CAAb;AASD,GAlCQ,EAkCN,EAlCM,CAAT;AAoCA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEzE,MAAM,CAAC0E,YAAvB;AAAqC,IAAA,OAAO,EAAC,qBAA7C;AAAmE,IAAA,SAAS,EAAC,WAA7E;AAAA,eACG9E,OAAO,CAAC0C,MAAR,gBAAiB;AAAA,gBAAI1C;AAAJ;AAAA;AAAA;AAAA;AAAA,YAAjB,GAAoC,IADvC,eAEE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA,kBAA6BP,QAAQ,GAAG,eAAH,GAAqB;AAA1D;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA,gCACE,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,MAAnB;AAA0B,YAAA,IAAI,EAAC,MAA/B;AAAsC,YAAA,KAAK,EAAEW,MAAM,CAACkB,MAApD;AAAA,eAA+DlB,MAAM,CAAC2E,aAAP,CAAqB,MAArB;AAA/D;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGG3E,MAAM,CAAC4E,OAAP,CAAe1E,IAAf,IAAuBF,MAAM,CAACgD,MAAP,CAAc9C,IAArC,gBAA4C;AAAO,YAAA,SAAS,EAAC,aAAjB;AAAA,uBAAgCF,MAAM,CAACgD,MAAP,CAAc9C,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA5C,GAA2G,EAH9G;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,GAAD;AAAA,kCACE,QAAC,IAAD,CAAM,IAAN;AAAW,YAAA,KAAK,EAAC,OAAjB;AAAyB,YAAA,IAAI,EAAC,OAA9B;AAAsC,YAAA,MAAM,EAAC,kBAA7C;AAAgE,YAAA,YAAY,EAAEF,MAAM,CAACkB,MAArF;AACE,YAAA,QAAQ,EAAG2C,CAAD,IAAO;AACfrF,cAAAA,QAAQ,CAACqF,CAAC,CAACC,MAAF,CAASe,KAAT,CAAe,CAAf,CAAD,CAAR;AACA7E,cAAAA,MAAM,CAAC8E,YAAP,CAAoBjB,CAApB;AACD;AAJH;AAAA;AAAA;AAAA;AAAA,kBADF,EAOG7D,MAAM,CAAC4E,OAAP,CAAerG,KAAf,IAAwByB,MAAM,CAACgD,MAAP,CAAczE,KAAtC,gBAA8C;AAAO,YAAA,SAAS,EAAC,aAAjB;AAAA,uBAAgCyB,MAAM,CAACgD,MAAP,CAAczE,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA9C,GAA8G,EAPjH;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAkBE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACE,QAAC,GAAD;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,MAAnB;AAA0B,YAAA,WAAW,EAAC,eAAtC;AAAsD,YAAA,IAAI,EAAC,QAA3D;AAAoE,YAAA,KAAK,EAAEyB,MAAM,CAACkB,MAAlF;AAAA,eAA6FlB,MAAM,CAAC2E,aAAP,CAAqB,QAArB;AAA7F;AAAA;AAAA;AAAA;AAAA,kBAFF,EAIG3E,MAAM,CAAC4E,OAAP,CAAezE,MAAf,IAAyBH,MAAM,CAACgD,MAAP,CAAc7C,MAAvC,gBAAgD;AAAO,YAAA,SAAS,EAAC,aAAjB;AAAA,uBAAgCH,MAAM,CAACgD,MAAP,CAAc7C,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAhD,GAAiH,EAJpH;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,GAAD;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,MAAnB;AAA0B,YAAA,WAAW,EAAC,YAAtC;AAAmD,YAAA,IAAI,EAAC,WAAxD;AAAoE,YAAA,KAAK,EAAEH,MAAM,CAACkB,MAAlF;AAAA,eAA8FlB,MAAM,CAAC2E,aAAP,CAAqB,WAArB;AAA9F;AAAA;AAAA;AAAA;AAAA,kBAFF,EAIG3E,MAAM,CAAC4E,OAAP,CAAexE,SAAf,IAA4BJ,MAAM,CAACgD,MAAP,CAAc5C,SAA1C,gBAAsD;AAAO,YAAA,SAAS,EAAC,aAAjB;AAAA,uBAAgCJ,MAAM,CAACgD,MAAP,CAAc5C,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAtD,GAA0H,EAJ7H;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF,eAiCE,QAAC,SAAD;AAAW,QAAA,gBAAgB,EAAC,GAA5B;AAAA,gCACE,QAAC,IAAD;AAAA,kCACE,QAAC,IAAD,CAAM,MAAN;AAAA,mCACE,QAAC,SAAD,CAAW,MAAX;AAAkB,cAAA,EAAE,EAAEvD,MAAtB;AAA8B,cAAA,OAAO,EAAC,MAAtC;AAA6C,cAAA,QAAQ,EAAC,GAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAME,QAAC,SAAD,CAAW,QAAX;AAAoB,YAAA,QAAQ,EAAC,GAA7B;AAAA,mCACE;AAAA,sCACE,QAAC,GAAD;AAAA,wCACE,QAAC,GAAD;AAAA,0CACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE,QAAC,IAAD,CAAM,OAAN;AACE,oBAAA,EAAE,EAAC,UADL;AAEE,oBAAA,IAAI,EAAE,CAFR;AAGE,oBAAA,IAAI,EAAC,aAHP;AAIE,oBAAA,WAAW,EAAC,gCAJd;AAKE,oBAAA,KAAK,EAAEmD,MAAM,CAACkB,MALhB;AAAA,uBAMMlB,MAAM,CAAC2E,aAAP,CAAqB,aAArB;AANN;AAAA;AAAA;AAAA;AAAA,0BAJF,EAYG3E,MAAM,CAAC4E,OAAP,CAAepE,WAAf,IAA8BR,MAAM,CAACgD,MAAP,CAAcxC,WAA5C,gBAA0D;AAAO,oBAAA,SAAS,EAAC,aAAjB;AAAA,+BAAgCR,MAAM,CAACgD,MAAP,CAAcxC,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA1D,GAAgI,EAZnI;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAeE,QAAC,GAAD;AAAK,kBAAA,SAAS,EAAC,UAAf;AAAA,0CACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE,QAAC,IAAD,CAAM,OAAN;AACE,oBAAA,IAAI,EAAC,QADP;AAEE,oBAAA,GAAG,EAAE,CAFP;AAGE,oBAAA,WAAW,EAAC,iBAHd;AAIE,oBAAA,IAAI,EAAC,aAJP;AAKE,oBAAA,KAAK,EAAER,MAAM,CAACkB,MALhB;AAAA,uBAK4BlB,MAAM,CAAC2E,aAAP,CAAqB,aAArB;AAL5B;AAAA;AAAA;AAAA;AAAA,0BAJF,EAWG3E,MAAM,CAAC4E,OAAP,CAAerE,WAAf,IAA8BP,MAAM,CAACgD,MAAP,CAAczC,WAA5C,gBAA0D;AAAO,oBAAA,SAAS,EAAC,aAAjB;AAAA,+BAAgCP,MAAM,CAACgD,MAAP,CAAczC,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA1D,GAAgI,EAXnI;AAAA;AAAA;AAAA;AAAA;AAAA,wBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eA+BE,QAAC,GAAD;AAAA,uCACE,QAAC,GAAD;AAAK,kBAAA,SAAS,EAAC,sBAAf;AAAA,0CACE,QAAC,GAAD;AAAA,4CACE,QAAC,GAAD;AAAK,sBAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE,QAAC,GAAD;AAAA,iCACGxB,KAAK,CAACuD,MAAN,IACCvD,KAAK,CAACwF,GAAN,CAAWlE,IAAD,IAAU;AAClB,4CACE,QAAC,IAAD,CAAM,KAAN;AACE,0BAAA,IAAI,EAAC,UADP;AAEE,0BAAA,KAAK,EAAEA,IAAI,CAACH,IAFd;AAGE,0BAAA,IAAI,EAAC,MAHP;AAIE,0BAAA,OAAO,EAAEG,IAAI,CAACkB,EAAL,IAAWvB,MAAM,CAACkB,MAAP,CAAcb,IAAzB,IAAiCA,IAAI,CAACmE,MAJjD;AAKE,0BAAA,KAAK,EAAEnE,IAAI,CAACkB,EAAL,IAAWlB,IAAI,CAAC,KAAD,CALxB;AAME,0BAAA,QAAQ,EAAGwD,CAAD,IAAO;AACf,gCAAIkB,OAAO,GAAGlB,CAAC,CAACC,MAAF,CAASiB,OAAvB;AACA/F,4BAAAA,QAAQ,CAACD,KAAK,CAACwF,GAAN,CAAUxB,IAAI,IAAI;AACzB1C,8BAAAA,IAAI,CAACmE,MAAL,GAAcO,OAAd;AACA,qCAAOhC,IAAP;AACD,6BAHQ,CAAD,CAAR;AAIA/C,4BAAAA,MAAM,CAAC8E,YAAP,CAAoBjB,CAApB;AACD;AAbH;AAAA;AAAA;AAAA;AAAA,gCADF;AAgBD,uBAjBD,CAFJ,EAoBG7D,MAAM,CAAC4E,OAAP,CAAevE,IAAf,IAAuBL,MAAM,CAACgD,MAAP,CAAc3C,IAArC,gBAA4C;AAAO,wBAAA,SAAS,EAAC,aAAjB;AAAA,mCAAgCL,MAAM,CAACgD,MAAP,CAAc3C,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,8BAA5C,GAA2G,EApB9G;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eA0BE,QAAC,GAAD;AAAA,4CACE,QAAC,GAAD;AAAK,sBAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE,QAAC,GAAD;AAAA,iCACGP,UAAU,CAACwC,MAAX,IACCxC,UAAU,CAACyE,GAAX,CAAgBjE,QAAD,IAAc;AAC3B,4CACE,QAAC,IAAD,CAAM,KAAN;AACE,0BAAA,IAAI,EAAC,UADP;AAEE,0BAAA,KAAK,EAAEA,QAAQ,CAACJ,IAFlB;AAGE,0BAAA,IAAI,EAAC,UAHP;AAIE,0BAAA,OAAO,EAAEI,QAAQ,CAACkE,MAJpB;AAKE,0BAAA,KAAK,EAAElE,QAAQ,CAACiB,EAAT,IAAejB,QAAQ,CAAC,KAAD,CALhC;AAME,0BAAA,QAAQ,EAAGuD,CAAD,IAAO;AACf,gCAAIkB,OAAO,GAAGlB,CAAC,CAACC,MAAF,CAASiB,OAAvB;AACAhF,4BAAAA,aAAa,CAACD,UAAU,CAACyE,GAAX,CAAexB,IAAI,IAAI;AACnCzC,8BAAAA,QAAQ,CAACkE,MAAT,GAAkBO,OAAlB;AACA,qCAAOhC,IAAP;AACD,6BAHa,CAAD,CAAb;AAIA/C,4BAAAA,MAAM,CAAC8E,YAAP,CAAoBjB,CAApB;AACD;AAbH;AAAA;AAAA;AAAA;AAAA,gCADF;AAkBD,uBAnBD,CAFJ,EAsBG7D,MAAM,CAAC4E,OAAP,CAAetE,QAAf,IAA2BN,MAAM,CAACgD,MAAP,CAAc1C,QAAzC,gBAAoD;AAAO,wBAAA,SAAS,EAAC,aAAjB;AAAA,mCAAgCN,MAAM,CAACgD,MAAP,CAAc1C,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,8BAApD,GAAuH,EAtB1H;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,0BA1BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBA/BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAmGE,QAAC,IAAD;AAAA,kCACE,QAAC,IAAD,CAAM,MAAN;AAAA,mCACE,QAAC,SAAD,CAAW,MAAX;AAAkB,cAAA,EAAE,EAAEzD,MAAtB;AAA8B,cAAA,OAAO,EAAC,MAAtC;AAA6C,cAAA,QAAQ,EAAC,GAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAME,QAAC,SAAD,CAAW,QAAX;AAAoB,YAAA,QAAQ,EAAC,GAA7B;AAAA,mCACE;AAAA,yBACG8B,YAAY,CAAC2D,MAAb,GAAsB,CAAtB,IACC3D,YAAY,CAAC4F,GAAb,CAAiB,CAACxB,IAAD,EAAOiC,CAAP;AAAA;;AAAA,oCACf;AAAa,kBAAA,SAAS,EAAC,wBAAvB;AAAA,0CACE;AAAK,oBAAA,SAAS,EAAC,UAAf;AAAA,8BAA2BjC,IAAI,CAACkC;AAAhC;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAK,oBAAA,SAAS,EAAC,UAAf;AAAA,wCAA2BxG,KAAK,CAACsE,IAAI,CAACmC,WAAL,GAAmB,CAApB,CAAhC,2CAA2B,OAA6BhF;AAAxD;AAAA;AAAA;AAAA;AAAA,0BAFF,eAGE;AAAK,oBAAA,SAAS,EAAC,UAAf;AAAA,8BAA2B6C,IAAI,CAACtC,UAAL,IAAmBsC,IAAI,CAAC7C,IAAxB,qBAAgC7B,WAAW,CAAC0E,IAAI,CAACtC,UAAL,GAAkB,CAAnB,CAA3C,iDAAgC,aAAkCP,IAAlE;AAA3B;AAAA;AAAA;AAAA;AAAA,0BAHF,eAIE;AAAG,oBAAA,KAAK,EAAC,sBAAT;AAAgC,oBAAA,OAAO,EAAE,MAAM4B,iBAAiB,CAACkD,CAAD,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF;AAAA,mBAAUA,CAAV;AAAA;AAAA;AAAA;AAAA,wBADe;AAAA,eAAjB,CAFJ,eAWE,QAAC,GAAD;AAAK,gBAAA,SAAS,EAAC,cAAf;AAAA,wCACE,QAAC,GAAD;AAAK,kBAAA,SAAS,EAAC,UAAf;AAAA,0CACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,IAAI,EAAC,QAAnB;AAA4B,oBAAA,GAAG,EAAE,CAAjC;AAAoC,oBAAA,IAAI,EAAC,UAAzC;AAAoD,oBAAA,QAAQ,EAAGnB,CAAD,IAAO;AAAED,sBAAAA,gBAAgB,CAACC,CAAD,CAAhB;AAAqB;AAA5F;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAKE,QAAC,GAAD;AAAK,kBAAA,SAAS,EAAC,eAAf;AAAA,0CACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAQ,oBAAA,QAAQ,EAAGA,CAAD,IAAOD,gBAAgB,CAACC,CAAD,CAAzC;AAA8C,oBAAA,IAAI,EAAC,aAAnD;AAAiE,oBAAA,YAAY,aAAEpF,KAAK,CAAC,CAAD,CAAP,4CAAE,QAAU8C,EAAzF;AAAA,8BACG9C,KAAK,CAAC8F,GAAN,CAAU,CAACY,IAAD,EAAOH,CAAP,KAAa;AACtB,0CACE;AAAgB,wBAAA,KAAK,EAAEG,IAAI,CAAC5D,EAA5B;AAAgC,wBAAA,IAAI,EAAE4D,IAAI,CAACjF,IAA3C;AAAA,kCACGiF,IAAI,CAACjF;AADR,yBAAa8E,CAAb;AAAA;AAAA;AAAA;AAAA,8BADF;AAKD,qBANA;AADH;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF,eAiBE,QAAC,GAAD;AAAA,0CACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,IAAI,EAAC,MAAnB;AAA0B,oBAAA,IAAI,EAAC,YAA/B;AAA4C,oBAAA,KAAK,EAAEhF,MAAM,CAACkB,MAA1D;AAAA,uBAAqElB,MAAM,CAAC2E,aAAP,CAAqB,YAArB;AAArE;AAAA;AAAA;AAAA;AAAA,0BAFF,EAGG3E,MAAM,CAAC4E,OAAP,CAAenE,UAAf,IAA6BT,MAAM,CAACgD,MAAP,CAAcvC,UAA3C,gBAAwD;AAAO,oBAAA,SAAS,EAAC,aAAjB;AAAA,+BAAgCT,MAAM,CAACgD,MAAP,CAAcvC,UAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAxD,GAA6H,EAHhI;AAAA;AAAA;AAAA;AAAA;AAAA,wBAjBF,eAsBE,QAAC,GAAD;AAAA,yCACE,QAAC,MAAD;AACE,oBAAA,SAAS,EAAC,gBADZ;AAEE,oBAAA,OAAO,EAAGoD,CAAD,IAAOnB,SAAS,CAAC,aAAD,CAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXF;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnGF,eAsJE,QAAC,IAAD;AAAA,kCACE,QAAC,IAAD,CAAM,MAAN;AAAA,mCACE,QAAC,SAAD,CAAW,MAAX;AAAkB,cAAA,EAAE,EAAE7F,MAAtB;AAA8B,cAAA,OAAO,EAAC,MAAtC;AAA6C,cAAA,QAAQ,EAAC,GAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAME,QAAC,SAAD,CAAW,QAAX;AAAoB,YAAA,QAAQ,EAAC,GAA7B;AAAA,mCACE;AAAA,yBACGgC,KAAK,CAACyD,MAAN,GAAe,CAAf,IACCzD,KAAK,CAAC0F,GAAN,CAAU,CAACxB,IAAD,EAAOiC,CAAP,kBACR;AAAa,gBAAA,SAAS,EAAC,oBAAvB;AAAA,wCACE;AAAK,kBAAA,SAAS,EAAC,sBAAf;AAAA,4BAAuCjC,IAAI,CAACqC;AAA5C;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAQ,kBAAA,OAAO,EAAE,MAAMnD,WAAW,CAAC+C,CAAD,CAAlC;AACE,kBAAA,SAAS,EAAC,UADZ;AAAA,yCAEE;AAAG,oBAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA,iBAAUA,CAAV;AAAA;AAAA;AAAA;AAAA,sBADF,CAFJ,eAWE,QAAC,GAAD;AAAK,gBAAA,SAAS,EAAC,SAAf;AAAA,wCACE,QAAC,GAAD;AAAK,kBAAA,SAAS,EAAC,WAAf;AAAA,0CACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,EAAE,EAAC,OAAjB;AAAyB,oBAAA,IAAI,EAAC,aAA9B;AAA4C,oBAAA,QAAQ,EAAGnB,CAAD,IAAOE,WAAW,CAACF,CAAD;AAAxE;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAKE,QAAC,GAAD;AAAK,kBAAA,SAAS,EAAC,eAAf;AAAA,yCACE,QAAC,MAAD;AACE,oBAAA,SAAS,EAAC,cADZ;AAEE,oBAAA,OAAO,EAAE,MAAMnB,SAAS,CAAC,OAAD,CAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBALF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXF;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjCF,eA2NE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA,oBACGrD,QAAQ,GAAG,eAAH,GAAqB;AADhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA3NF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsOD;;GA5cQpB,a;UAWSN,U,EASDE,S;;;KApBRI,a;AA6cT,eAAeA,aAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport * as Yup from 'yup'\r\nimport { Accordion, Card, Button, Form, Col, Row, Table, } from \"react-bootstrap\";\r\nimport useForm from \"../utills/useForm\";\r\nimport validate from \"../utills/validateInfo\";\r\nimport { getData, insertDataToDB, ingredientsOfRecipe, uploadRecipe, appentIngredient, getRecipeDetails, updateRecipe } from \"../DAL/api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ErrorMessages from \"../utills/ErrorMessages\";\r\nimport { useFormik } from \"formik\";\r\nconst Cookies = require('js-cookie')\r\nconst axios = require('axios')\r\n\r\n\r\nfunction NewRecipeForm({ match, recipeId, mode }) {\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const [image, setImage] = useState(null)\r\n  const [units, setUnits] = useState([]);\r\n  const [instructions, setInstructions] = useState([]);\r\n  const [guide, setGuide] = useState([]);\r\n  const [diets, setDiets] = useState([]);\r\n  const [recipeIngredient, setRecipeIngredient] = useState({})\r\n  const [recipeGuide, setRecipeGuide] = useState({})\r\n  const [editMode, setEditMode] = useState(false)\r\n  const [newIngredient, setNewIngredient] = useState('')\r\n  const history = useHistory()\r\n  const [addIng, setAddIng] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n  const [categories, setCategories] = useState([]);\r\n  // const { handleSubmit, handleChange, values, errors } = useForm(submit, validate);\r\n\r\n\r\n\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      source: \"\",\r\n      sourceUrl: \"\",\r\n      diet: [],\r\n      category: [],\r\n      prepTimeMin: '',\r\n      description: '',\r\n      image: '',\r\n      ingredient: '',\r\n    },\r\n\r\n    validationSchema: Yup.object({\r\n      name: Yup.string()\r\n        .min(3)\r\n        .max(30).required(),\r\n      // image: Yup.string().required(\"required\"),\r\n      ingredient: Yup.string().max(20).min(3).matches(/[a-z]/, 'must be letters in lowercase'),\r\n      // diet: Yup.array().min(2, 'choose at least 2 types').required(),\r\n      // category: Yup.array().min(2, 'choose at least 2 types').required(),\r\n      prepTimeMin: Yup.string(),\r\n      description: Yup.string().min(3).max(150),\r\n      source: Yup.string().min(3, 'min 3 charachters').max(40, 'must be 20 charachters or less').required('required')\r\n    }),\r\n    onSubmit: async (values) => {\r\n      const data = new FormData();\r\n      formik.values.guide = guide;\r\n      formik.values.userId = Cookies.get('user')\r\n      formik.values.instructions = instructions\r\n\r\n      if (recipeId) formik.values.id = recipeId\r\n      data.append(\"image\", image)\r\n      data.append(\"user\", Cookies.get('user'))\r\n      data.append(\"recipe\", JSON.stringify(formik.values))\r\n      if (!recipeId) {\r\n        const response = await uploadRecipe(data)\r\n      } else {\r\n        const update = await updateRecipe(data)\r\n        submit()\r\n      }\r\n\r\n    },\r\n\r\n  })\r\n  const deleteInstruction = (index) => {\r\n    instructions.splice(index, 1);\r\n    setInstructions([...instructions]);\r\n  };\r\n\r\n  const deleteGuide = (index) => {\r\n    guide.splice(index, 1);\r\n    setGuide([...guide]);\r\n  };\r\n  const checkThefilds = (obj) => {\r\n    if (Object.keys(obj).length === 0 || Object.keys(obj).length < 3) return false\r\n    for (const prop in obj) {\r\n      console.log('prop', prop);\r\n      if (!obj[prop].length) return false\r\n\r\n    }\r\n    return true\r\n  }\r\n\r\n  const addToList = (value) => {\r\n    if (value === 'ingredients') {\r\n\r\n      console.log(formik.values.ingredient, instructions.includes(formik.values.ingredient));\r\n      const check = instructions.filter(item => item.ingredient === formik.values.ingredient)\r\n      if (!formik.errors.ingredient) {\r\n        recipeIngredient.ingredient = formik.values.ingredient\r\n      }\r\n\r\n      if (check.length === 0) {\r\n        if (checkThefilds(recipeIngredient)) {\r\n          setInstructions([...instructions, { ...recipeIngredient }])\r\n          formik.values.ingredient = ''\r\n        } else {\r\n          alert('please check the fields')\r\n        }\r\n      }\r\n      else alert(`you can't insert the ${formik.values.ingredient} twice into ingredients`)\r\n    }\r\n    if (value === 'guide') setGuide([...guide, recipeGuide])\r\n\r\n  }\r\n\r\n\r\n  const insertDataToForm = (recipe) => {\r\n    console.log('recipe from insert into table',recipe)\r\n    // formik.values.name = recipe.recipe.name\r\n    // formik.values.source = recipe.recipe.source\r\n    // formik.values.sourceUrl = recipe.recipe.sourceUrl\r\n    // formik.values.description = recipe.recipe.description\r\n    // formik.values.isPrivate = !!recipe.recipe.isPrivate\r\n    // formik.values.prepTimeMin = recipe.recipe.prepTimeMin\r\n    // formik.values.image = recipe.images[0]?.url\r\n    formik.values.name = recipe.name\r\n    formik.values.source = recipe.source\r\n    formik.values.sourceUrl = recipe.sourceUrl\r\n    formik.values.description = recipe.description\r\n    formik.values.isPrivate = !!recipe.isPrivate\r\n    formik.values.prepTimeMin = recipe.prepTimeMin\r\n    // formik.values.image = recipe.images[0]?.url\r\n    console.log(recipe.category);\r\n    setImage(recipe.images[0]?.url)\r\n    console.log(recipe.ingredients);\r\n    setGuide(recipe.instructions)\r\n    setInstructions(recipe.ingredients)\r\n    const arr = []\r\n    for (let x of recipe.categories) {\r\n      console.log(x);\r\n      arr.push((x.categoryId || x.id))\r\n    }\r\n    formik.values.category = arr\r\n    const diets = []\r\n    for (let x of recipe.diets) {\r\n\r\n      diets.push((x.id || x.dietId))\r\n    }\r\n    formik.values.diet = diets;\r\n  }\r\n\r\n  async function submit() {\r\n    // if (checkErrors(errors)) {\r\n    const data = new FormData();\r\n    formik.values.guide = guide;\r\n    formik.values.instructions = instructions\r\n\r\n    if (recipeId) formik.values.id = recipeId\r\n    data.append(\"image\", image)\r\n    data.append(\"user\", Cookies.get('user'))\r\n    data.append(\"recipe\", JSON.stringify(formik.values))\r\n    if (!recipeId) {\r\n      const response = await uploadRecipe(data)\r\n      if (response) setMessage('Successfully completed')\r\n    } else {\r\n      const update = await updateRecipe(data)\r\n\r\n      if (update) setMessage('updated')\r\n    }\r\n  }\r\n  const changeIngredient = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === 'ingredient') return\r\n    // console.log('ingredient', value);\r\n\r\n    // if (name === 'ingredient') {\r\n\r\n    //   for (let x of instructions) {\r\n    //     console.log(x.ingredient);\r\n    //     if (x.ingredient === value) alert('the ingredient already inserted')\r\n\r\n    //   }\r\n    // }\r\n\r\n\r\n    setRecipeIngredient({ ...recipeIngredient, [name]: value })\r\n  }\r\n\r\n  const changeGuide = (e) => {\r\n    const { name, value } = e.target;\r\n    setRecipeGuide({ ...recipeGuide, [name]: value })\r\n  }\r\n\r\n\r\n  const addIngtoDB = async () => {\r\n    for (let ing of ingredients) {\r\n      if (ing.name === newIngredient) alert('already exist')\r\n    }\r\n    const response = await appentIngredient(newIngredient);\r\n    setAddIng(false)\r\n  }\r\n\r\n  useEffect(async () => {\r\n    if (recipeId) {\r\n      setEditMode(true)\r\n      // const instruc = await ingredientsOfRecipe(recipeId)\r\n      const formRecipe = await getRecipeDetails(recipeId)\r\n\r\n      insertDataToForm(formRecipe)\r\n      console.log(\"instruc\", formRecipe);\r\n\r\n    }\r\n    if (!Cookies.get('user')) history.push('/login')\r\n    const fetchDiets = await getData('diets')\r\n    console.log(fetchDiets)\r\n    const fetchUnits = await getData('units')\r\n    const fetchCategories = await getData('categories')\r\n    const fetchIngredient = await getData('ingredients')\r\n    setDiets(fetchDiets.map(item => {\r\n      return {\r\n        select: formik.values.diet.includes(item.id),\r\n        name: item.name,\r\n        id: item.id || item[\"_id\"]\r\n      }\r\n    }));\r\n    setUnits(fetchUnits);\r\n    setIngredients(fetchIngredient);\r\n    setCategories(fetchCategories.map(cat => {\r\n      console.log(formik.values.category)\r\n      return {\r\n        select: formik.values.category.includes(cat.id),\r\n        name: cat.name,\r\n        id: cat.id || cat[\"_id\"]\r\n      }\r\n    }));\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <Form onSubmit={formik.handleSubmit} encType=\"multipart/form-data\" className='text-dark'>\r\n      {message.length ? <p>{message}</p> : null}\r\n      <div className=\"form-inner\">\r\n        <h1 className='text-center'>{editMode ? \"Update Recipe\" : \"Add Recipe\"}</h1>\r\n        <Row className=\"\">\r\n          <Col className=\"col-md-7\">\r\n            <Form.Label>Recipe name </Form.Label>\r\n            <Form.Control type=\"text\" name=\"name\" value={formik.values}{...formik.getFieldProps(\"name\")} />\r\n            {formik.touched.name && formik.errors.name ? <small className='text-danger'>{formik.errors.name} </small> : \"\"}\r\n          </Col>\r\n          <Col>\r\n            <Form.File label=\"Image\" name=\"image\" accept=\".jpg, .png,.jpeg\" DefaultValue={formik.values}\r\n              onChange={(e) => {\r\n                setImage(e.target.files[0])\r\n                formik.handleChange(e)\r\n              }}\r\n            />\r\n            {formik.touched.image && formik.errors.image ? <small className='text-danger'>{formik.errors.image} </small> : \"\"}\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"container-fluid\">\r\n          <Col>\r\n            <Form.Label> source</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"recipe source\" name=\"source\" value={formik.values}{...formik.getFieldProps(\"source\")}\r\n            />\r\n            {formik.touched.source && formik.errors.source ? <small className='text-danger'>{formik.errors.source} </small> : \"\"}\r\n\r\n          </Col>\r\n          <Col>\r\n            <Form.Label> link to source </Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\" if exists\" name=\"sourceUrl\" value={formik.values} {...formik.getFieldProps(\"sourceUrl\")}\r\n            />\r\n            {formik.touched.sourceUrl && formik.errors.sourceUrl ? <small className='text-danger'>{formik.errors.sourceUrl} </small> : \"\"}\r\n          </Col>\r\n        </Row>\r\n        <Accordion defaultActiveKey=\"0\">\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"3\">\r\n                General description\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"3\">\r\n              <div>\r\n                <Row>\r\n                  <Col>\r\n                    <Form.Label>\r\n                      description\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      rows={1}\r\n                      name=\"description\"\r\n                      placeholder='description as you can shortly'\r\n                      value={formik.values}\r\n                      {...formik.getFieldProps(\"description\")}\r\n                    />\r\n                    {formik.touched.description && formik.errors.description ? <small className='text-danger'>{formik.errors.description} </small> : \"\"}\r\n                  </Col>\r\n                  <Col className='col-sm-4'>\r\n                    <Form.Label>\r\n                      preparation time\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      min={3}\r\n                      placeholder='time in minutes'\r\n                      name=\"prepTimeMin\"\r\n                      value={formik.values} {...formik.getFieldProps(\"prepTimeMin\")}\r\n                    />\r\n                    {formik.touched.prepTimeMin && formik.errors.prepTimeMin ? <small className='text-danger'>{formik.errors.prepTimeMin} </small> : \"\"}\r\n\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Row className=\"container-fluid mx-2\">\r\n                    <Col>\r\n                      <Row className=\"mr-3\">Diet type: </Row>\r\n                      <Row>\r\n                        {diets.length &&\r\n                          diets.map((diet) => {\r\n                            return (\r\n                              <Form.Check\r\n                                type=\"checkbox\"\r\n                                label={diet.name}\r\n                                name='diet'\r\n                                checked={diet.id in formik.values.diet || diet.select}\r\n                                value={diet.id || diet[\"_id\"]}\r\n                                onChange={(e) => {\r\n                                  let checked = e.target.checked;\r\n                                  setDiets(diets.map(item => {\r\n                                    diet.select = checked\r\n                                    return item\r\n                                  }))\r\n                                  formik.handleChange(e);\r\n                                }} />\r\n                            );\r\n                          })}\r\n                        {formik.touched.diet && formik.errors.diet ? <small className='text-danger'>{formik.errors.diet} </small> : \"\"}\r\n                      </Row>\r\n                    </Col>\r\n                    <Col>\r\n                      <Row className=\"mr-3\">Category </Row>\r\n                      <Row>\r\n                        {categories.length &&\r\n                          categories.map((category) => {\r\n                            return (\r\n                              <Form.Check\r\n                                type=\"checkbox\"\r\n                                label={category.name}\r\n                                name='category'\r\n                                checked={category.select}\r\n                                value={category.id || category[\"_id\"]}\r\n                                onChange={(e) => {\r\n                                  let checked = e.target.checked;\r\n                                  setCategories(categories.map(item => {\r\n                                    category.select = checked\r\n                                    return item\r\n                                  }))\r\n                                  formik.handleChange(e);\r\n                                }}\r\n                              />\r\n\r\n                            );\r\n                          })}\r\n                        {formik.touched.category && formik.errors.category ? <small className='text-danger'>{formik.errors.category} </small> : \"\"}\r\n                      </Row>\r\n\r\n                    </Col>\r\n                  </Row>\r\n                </Row>\r\n              </div>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                Ingredients\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"0\">\r\n              <>\r\n                {instructions.length > 0 &&\r\n                  instructions.map((item, i) => (\r\n                    <div key={i} className='d-flex ingredints mb-1'>\r\n                      <div className='col-sm-2'>{item.quantity}</div>\r\n                      <div className='col-sm-4'>{units[item.measureUnit - 1]?.name}</div>\r\n                      <div className='col-sm-4'>{item.ingredient || item.name || ingredients[item.ingredient - 1]?.name}</div>\r\n                      <i class=\"fas fa-trash text-sm\" onClick={() => deleteInstruction(i)}> </i>\r\n                    </div>\r\n                  ))}\r\n\r\n                <Row className=\"small-5 mt-4\">\r\n                  <Col className=\"col-sm-2\">\r\n                    <Form.Label>Amount</Form.Label>\r\n                    <Form.Control type=\"number\" min={1} name='quantity' onChange={(e) => { changeIngredient(e) }} />\r\n                  </Col>\r\n                  <Col className=\"col-md-4 mb-3\">\r\n                    <Form.Label>Measurement unit </Form.Label>\r\n                    <select onChange={(e) => changeIngredient(e)} name='measureUnit' defaultValue={units[0]?.id}>\r\n                      {units.map((unit, i) => {\r\n                        return (\r\n                          <option key={i} value={unit.id} name={unit.name}>\r\n                            {unit.name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </select>\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Label>Ingredient</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"ingredient\" value={formik.values}{...formik.getFieldProps(\"ingredient\")} />\r\n                    {formik.touched.ingredient && formik.errors.ingredient ? <small className='text-danger'>{formik.errors.ingredient} </small> : \"\"}\r\n                  </Col>\r\n                  <Col >\r\n                    <Button\r\n                      className=\"md-3  save-btn\"\r\n                      onClick={(e) => addToList('ingredients')}>\r\n                      Save\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                Preparation steps\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"1\">\r\n              <>\r\n                {guide.length > 0 &&\r\n                  guide.map((item, i) => (\r\n                    <div key={i} className='d-flex instruction'>\r\n                      <div className='text-left col-sm-10 '>{item.instruction}</div>\r\n                      <button onClick={() => deleteGuide(i)}\r\n                        className='col-sm-2'>\r\n                        <i class=\"fas fa-trash text-sm \"></i>\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n                <Row className=\"d-flex \">\r\n                  <Col className=\"col-md-10\">\r\n                    <Form.Label>instruction</Form.Label>\r\n                    <Form.Control as=\"input\" name='instruction' onChange={(e) => changeGuide(e)} />\r\n                  </Col>\r\n                  <Col className=\"col-md-2 mb-0\">\r\n                    <Button\r\n                      className=\" flex-grow-0\"\r\n                      onClick={() => addToList('guide')}\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n        </Accordion>\r\n        <Row className=\"text-left\">\r\n          <Button type=\"submit\"  >\r\n            {editMode ? \"Update Recipe\" : \"Add Recipe\"}\r\n          </Button>\r\n        </Row>\r\n      </div>\r\n    </Form >\r\n  );\r\n}\r\nexport default NewRecipeForm;\r\n"]},"metadata":{},"sourceType":"module"}