{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\projects\\\\fullstack-project\\\\src\\\\components\\\\context\\\\RecipesContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport { getRecipes } from \"../DAL/api\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RecipesContext = /*#__PURE__*/createContext();\n\nconst RecipesContextProvider = props => {\n  _s();\n\n  const [recipes, setRecipes] = useState([1, 2, 3, 5]);\n  useEffect(async () => {\n    const fetchedRecipes = await getRecipes();\n    setRecipes(fetchedRecipes);\n  }, []); //   useEffect(() => {\n  //     localStorage.setItem(\"employees\", JSON.stringify(employees));\n  //   });\n\n  const sortedRecipes = recipes.sort((a, b) => a.name < b.name ? -1 : 1);\n\n  const addRecipe = recipe => {\n    setRecipes([...recipes, { ...recipe,\n      recipeId: Math.floor(Math.random() * 121)\n    }]);\n  };\n\n  const deleteRecipe = id => {\n    setRecipes(recipes.filter(recipe => recipe.recipeId !== id));\n  };\n\n  const editRecipe = updatedRecipe => {\n    let newArray = recipes.map(recipe => recipe.recipeId === updatedRecipe.recipeId ? updatedRecipe : recipe);\n    setRecipes(newArray);\n  };\n\n  return /*#__PURE__*/_jsxDEV(RecipesContext.Provider, {\n    value: {\n      sortedRecipes,\n      addRecipe,\n      deleteRecipe,\n      editRecipe\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RecipesContextProvider, \"wsWNuR/79xyaM+T1rUh/jWM0kEs=\");\n\n_c = RecipesContextProvider;\nexport default RecipesContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipesContextProvider\");","map":{"version":3,"sources":["C:/Users/User/Documents/projects/fullstack-project/src/components/context/RecipesContext.js"],"names":["createContext","useEffect","useState","getRecipes","v4","uuidv4","RecipesContext","RecipesContextProvider","props","recipes","setRecipes","fetchedRecipes","sortedRecipes","sort","a","b","name","addRecipe","recipe","recipeId","Math","floor","random","deleteRecipe","id","filter","editRecipe","updatedRecipe","newArray","map","children"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;AAEA,OAAO,MAAMC,cAAc,gBAAGN,aAAa,EAApC;;AAEP,MAAMO,sBAAsB,GAAIC,KAAD,IAAW;AAAA;;AACxC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMU,cAAc,GAAG,MAAMR,UAAU,EAAvC;AACAO,IAAAA,UAAU,CAACC,cAAD,CAAV;AACD,GAHQ,EAGN,EAHM,CAAT,CAHwC,CAQxC;AACA;AACA;;AAEA,QAAMC,aAAa,GAAGH,OAAO,CAACI,IAAR,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAX,GAAkB,CAAC,CAAnB,GAAuB,CAA/C,CAAtB;;AAEA,QAAMC,SAAS,GAAIC,MAAD,IAAY;AAC5BR,IAAAA,UAAU,CAAC,CACT,GAAGD,OADM,EAET,EAAE,GAAGS,MAAL;AAAaC,MAAAA,QAAQ,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B;AAAvB,KAFS,CAAD,CAAV;AAID,GALD;;AAOA,QAAMC,YAAY,GAAIC,EAAD,IAAQ;AAC3Bd,IAAAA,UAAU,CAACD,OAAO,CAACgB,MAAR,CAAgBP,MAAD,IAAYA,MAAM,CAACC,QAAP,KAAoBK,EAA/C,CAAD,CAAV;AACD,GAFD;;AAIA,QAAME,UAAU,GAAIC,aAAD,IAAmB;AACpC,QAAIC,QAAQ,GAAGnB,OAAO,CAACoB,GAAR,CAAaX,MAAD,IACzBA,MAAM,CAACC,QAAP,KAAoBQ,aAAa,CAACR,QAAlC,GAA6CQ,aAA7C,GAA6DT,MADhD,CAAf;AAGAR,IAAAA,UAAU,CAACkB,QAAD,CAAV;AACD,GALD;;AAOA,sBACE,QAAC,cAAD,CAAgB,QAAhB;AACE,IAAA,KAAK,EAAE;AACLhB,MAAAA,aADK;AAELK,MAAAA,SAFK;AAGLM,MAAAA,YAHK;AAILG,MAAAA;AAJK,KADT;AAAA,cAQGlB,KAAK,CAACsB;AART;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA5CD;;GAAMvB,sB;;KAAAA,sB;AA8CN,eAAeA,sBAAf","sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\nimport { getRecipes } from \"../DAL/api\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport const RecipesContext = createContext();\r\n\r\nconst RecipesContextProvider = (props) => {\r\n  const [recipes, setRecipes] = useState([1, 2, 3, 5]);\r\n\r\n  useEffect(async () => {\r\n    const fetchedRecipes = await getRecipes();\r\n    setRecipes(fetchedRecipes);\r\n  }, []);\r\n\r\n  //   useEffect(() => {\r\n  //     localStorage.setItem(\"employees\", JSON.stringify(employees));\r\n  //   });\r\n\r\n  const sortedRecipes = recipes.sort((a, b) => (a.name < b.name ? -1 : 1));\r\n\r\n  const addRecipe = (recipe) => {\r\n    setRecipes([\r\n      ...recipes,\r\n      { ...recipe, recipeId: Math.floor(Math.random() * 121) },\r\n    ]);\r\n  };\r\n\r\n  const deleteRecipe = (id) => {\r\n    setRecipes(recipes.filter((recipe) => recipe.recipeId !== id));\r\n  };\r\n\r\n  const editRecipe = (updatedRecipe) => {\r\n    let newArray = recipes.map((recipe) =>\r\n      recipe.recipeId === updatedRecipe.recipeId ? updatedRecipe : recipe\r\n    );\r\n    setRecipes(newArray);\r\n  };\r\n\r\n  return (\r\n    <RecipesContext.Provider\r\n      value={{\r\n        sortedRecipes,\r\n        addRecipe,\r\n        deleteRecipe,\r\n        editRecipe,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </RecipesContext.Provider>\r\n  );\r\n};\r\n\r\nexport default RecipesContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}