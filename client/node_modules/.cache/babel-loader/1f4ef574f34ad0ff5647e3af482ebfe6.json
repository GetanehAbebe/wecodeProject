{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\projects\\\\fullstack-project\\\\client\\\\src\\\\components\\\\Pages\\\\Gallery.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Posts from \"../sections/ShowAllRecipes\";\nimport Pagination from \"../utills/Pagination\";\nimport { getImages, getRecipes } from \"../DAL/api\";\nimport ShowAllrecipes from \"../sections/ShowAllRecipes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [recipes, setRecipes] = useState([]);\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [recipesPerPage, setRecipesPerPage] = useState(5);\n  useEffect(() => {\n    try {\n      const fetchRecipes = async () => {\n        setLoading(true);\n        const fetchImages = await getImages();\n        const res = await fetch(\"http://localhost:3300/users/list\");\n        setTimeout(() => {\n          setImages(fetchImages);\n          setRecipes(res);\n          setLoading(false);\n        }, 1500);\n      };\n    } catch (error) {\n      console.log(error);\n    }\n  }, [recipesPerPage]); // Get current posts\n\n  const indexOfLastPost = currentPage * recipesPerPage;\n  const indexOfFirstPost = indexOfLastPost - recipesPerPage;\n  const currentPosts = recipes.slice(indexOfFirstPost, indexOfLastPost); // Change page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container=fluid mt-5 m-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-primary mb-3\",\n      children: \"My Blog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setRecipesPerPage(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"\\u05DB\\u05DE\\u05D5\\u05EA \\u05DC\\u05D4\\u05E6\\u05D2\\u05D4 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: 5,\n        children: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: 10,\n        children: \"10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: 20,\n        children: \"20\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: 50,\n        children: \"50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: 100,\n        children: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ShowAllrecipes, {\n      recipes: currentPosts,\n      loading: loading,\n      images: images\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      postsPerPage: recipesPerPage,\n      totalPosts: recipes.length,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"m33RTW36pkh1i+nDAM2JZBH42WY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/User/Documents/projects/fullstack-project/client/src/components/Pages/Gallery.js"],"names":["React","useState","useEffect","Posts","Pagination","getImages","getRecipes","ShowAllrecipes","App","recipes","setRecipes","images","setImages","loading","setLoading","currentPage","setCurrentPage","recipesPerPage","setRecipesPerPage","fetchRecipes","fetchImages","res","fetch","setTimeout","error","console","log","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","e","target","value","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Posts from \"../sections/ShowAllRecipes\";\r\nimport Pagination from \"../utills/Pagination\";\r\nimport { getImages, getRecipes } from \"../DAL/api\";\r\nimport ShowAllrecipes from \"../sections/ShowAllRecipes\";\r\n\r\nconst App = () => {\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [images, setImages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [recipesPerPage, setRecipesPerPage] = useState(5);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      const fetchRecipes = async () => {\r\n        setLoading(true);\r\n\r\n        const fetchImages = await getImages();\r\n        const res = await fetch(\"http://localhost:3300/users/list\");\r\n        setTimeout(() => {\r\n          setImages(fetchImages);\r\n          setRecipes(res);\r\n          setLoading(false);\r\n        }, 1500);\r\n      };\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n   \r\n  }, [recipesPerPage]);\r\n\r\n  // Get current posts\r\n  const indexOfLastPost = currentPage * recipesPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - recipesPerPage;\r\n  const currentPosts = recipes.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  // Change page\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <div className=\"container=fluid mt-5 m-auto\">\r\n      <h1 className=\"text-primary mb-3\">My Blog</h1>\r\n      <select onChange={(e) => setRecipesPerPage(e.target.value)}>\r\n        <option>כמות להצגה </option>\r\n        <option value={5}>5</option>\r\n        <option value={10}>10</option>\r\n        <option value={20}>20</option>\r\n        <option value={50}>50</option>\r\n        <option value={100}>100</option>\r\n      </select>\r\n      <ShowAllrecipes\r\n        recipes={currentPosts}\r\n        loading={loading}\r\n        images={images}\r\n      />\r\n      <Pagination\r\n        postsPerPage={recipesPerPage}\r\n        totalPosts={recipes.length}\r\n        paginate={paginate}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}