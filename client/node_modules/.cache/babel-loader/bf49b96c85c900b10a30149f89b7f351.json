{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\projects\\\\fullstack-project\\\\src\\\\components\\\\context\\\\RecipesContext.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport { getRecipes } from \"../DAL/api\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const recipeContext = /*#__PURE__*/createContext();\n\nconst RecipeContextProvider = props => {\n  _s();\n\n  const [recipes, setRecipes] = useState([]);\n  useEffect(async () => {\n    const fetchedRecipes = await getRecipes();\n    setRecipes(fetchedRecipes);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"employees\", JSON.stringify(employees));\n  });\n  const sortedRecipes = recipes.sort((a, b) => a.name < b.name ? -1 : 1);\n\n  const addRecipe = recipe => {\n    setRecipes([...recipes, { ...recipe,\n      recipeId: Math.floor(Math.random() * 121)\n    }]);\n  };\n\n  const deleteRecipe = id => {\n    setRecipes(recipes.filter(recipe => recipe.recipeId !== id));\n  };\n\n  const editRecipe = (id, updatedRecipe) => {\n    setRecipes(recipes.map(recipe => recipe.recipeId === id ? updatedRecipe : recipe));\n  };\n\n  return /*#__PURE__*/_jsxDEV(RecipeContext.Provider, {\n    value: {\n      sortedERe,\n      addRe,\n      deleteRe,\n      updateRe\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RecipeContextProvider, \"88fdi6Ek45IqIquAoI2cc6S7SzU=\");\n\n_c = RecipeContextProvider;\nexport default EmployeeContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeContextProvider\");","map":{"version":3,"sources":["C:/Users/User/Documents/projects/fullstack-project/src/components/context/RecipesContext.jsx"],"names":["createContext","useEffect","useState","getRecipes","v4","uuidv4","recipeContext","RecipeContextProvider","props","recipes","setRecipes","fetchedRecipes","localStorage","setItem","JSON","stringify","employees","sortedRecipes","sort","a","b","name","addRecipe","recipe","recipeId","Math","floor","random","deleteRecipe","id","filter","editRecipe","updatedRecipe","map","sortedERe","addRe","deleteRe","updateRe","children","EmployeeContextProvider"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;AAEA,OAAO,MAAMC,aAAa,gBAAGN,aAAa,EAAnC;;AAEP,MAAMO,qBAAqB,GAAIC,KAAD,IAAW;AAAA;;AACvC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMU,cAAc,GAAG,MAAMR,UAAU,EAAvC;AACAO,IAAAA,UAAU,CAACC,cAAD,CAAV;AACD,GAHQ,EAGN,EAHM,CAAT;AAKAV,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeC,SAAf,CAAlC;AACD,GAFQ,CAAT;AAIA,QAAMC,aAAa,GAAGR,OAAO,CAACS,IAAR,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAX,GAAkB,CAAC,CAAnB,GAAuB,CAA/C,CAAtB;;AAEA,QAAMC,SAAS,GAAIC,MAAD,IAAY;AAC5Bb,IAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAY,EAAC,GAAGc,MAAJ;AAAWC,MAAAA,QAAQ,EAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,GAAzB;AAApB,KAAZ,CAAD,CAAV;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAIC,EAAD,IAAQ;AAC3BnB,IAAAA,UAAU,CAACD,OAAO,CAACqB,MAAR,CAAgBP,MAAD,IAAYA,MAAM,CAACC,QAAP,KAAoBK,EAA/C,CAAD,CAAV;AACD,GAFD;;AAIA,QAAME,UAAU,GAAG,CAACF,EAAD,EAAKG,aAAL,KAAuB;AACxCtB,IAAAA,UAAU,CACRD,OAAO,CAACwB,GAAR,CAAaV,MAAD,IACVA,MAAM,CAACC,QAAP,KAAoBK,EAApB,GAAyBG,aAAzB,GAAyCT,MAD3C,CADQ,CAAV;AAKD,GAND;;AAQA,sBACE,QAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AAAEW,MAAAA,SAAF;AAAaC,MAAAA,KAAb;AAAoBC,MAAAA,QAApB;AAA8BC,MAAAA;AAA9B,KADT;AAAA,cAGG7B,KAAK,CAAC8B;AAHT;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CArCD;;GAAM/B,qB;;KAAAA,qB;AAuCN,eAAegC,uBAAf","sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\nimport { getRecipes } from \"../DAL/api\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport const recipeContext = createContext();\r\n\r\nconst RecipeContextProvider = (props) => {\r\n  const [recipes, setRecipes] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    const fetchedRecipes = await getRecipes();\r\n    setRecipes(fetchedRecipes);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"employees\", JSON.stringify(employees));\r\n  });\r\n\r\n  const sortedRecipes = recipes.sort((a, b) => (a.name < b.name ? -1 : 1));\r\n\r\n  const addRecipe = (recipe) => {\r\n    setRecipes([...recipes,{...recipe,recipeId:Math.floor(Math.random()*121)}]);\r\n  };\r\n\r\n  const deleteRecipe = (id) => {\r\n    setRecipes(recipes.filter((recipe) => recipe.recipeId !== id));\r\n  };\r\n\r\n  const editRecipe = (id, updatedRecipe) => {\r\n    setRecipes(\r\n      recipes.map((recipe) =>\r\n        recipe.recipeId === id ? updatedRecipe : recipe\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <RecipeContext.Provider\r\n      value={{ sortedERe, addRe, deleteRe, updateRe }}\r\n    >\r\n      {props.children}\r\n    </RecipeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default EmployeeContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}