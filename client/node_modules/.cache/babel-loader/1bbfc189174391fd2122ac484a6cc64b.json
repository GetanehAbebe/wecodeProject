{"ast":null,"code":"\"use strict\";\n\nconst fetch = require(\"node-fetch\");\n\nconst axios = require('axios');\n\nconst getData = async (table, id) => {\n  const response = await axios.get(`http://localhost:3200/${table}${!!id ? '/' + id : ''}`);\n  return response.data;\n};\n\nconst getRecipes = async () => {\n  const recipes = await axios.get('http://localhost:3200/recipes');\n  return recipes.data;\n};\n\nconst getCategories = async () => {\n  const categories = await axios.get('http://localhost:3200/categories');\n  return categories.data;\n};\n\nconst getDiets = async () => {\n  const diets = await axios.get('http://localhost:3200/diets');\n  return diets.data;\n};\n\nconst getUnits = async () => {\n  const units = await axios.get('http://localhost:3200/units');\n  return units.data;\n};\n\nconst getIngredients = async () => {\n  const ingredients = await axios.get('http://localhost:3200/ingredients');\n  return ingredients.data;\n};\n\nconst getImages = () => {// return Promise.resolve(images);\n};\n\nconst getUserRecipes = async userId => {\n  console.log(userId);\n  const usersRecipe = await axios.get(`http://localhost:3200/users/recipes/${userId}`);\n  return usersRecipe.data;\n};\n\nconst updateRecipe = async recipeInfo => {\n  const recipes = await getRecipes();\n  recipes.find(item => item.id === recipeInfo.id ? item = { ...recipeInfo\n  } : null);\n};\n\nconst addRecipe = async recipe => {\n  const recipes = await getRecipes();\n  recipes.push(recipe);\n};\n\nconst addUser = async user => {\n  const users = await getData('users');\n  users.push(user);\n};\n\nconst login = async (email, password) => {\n  const res = await axios.post('http://localhost:3200/users/login', {\n    email: email,\n    password: password\n  });\n  return res.data;\n};\n\nconst insertDataToDB = (placeToInsert, values) => {\n  axios.post(`http://localhost:3200/${placeToInsert}`, {\n    values\n  }).then(() => console.log('success'));\n};\n\nconst getRecipeIngredients = async recipeId => {\n  console.log(recipeId);\n  const response = await axios.get(`http://localhost:3200/ingredients/${recipeId}`);\n  return response.data;\n};\n\nconst getRecipeDetails = async id => {\n  console.log('recipe', id);\n  const response = await axios.post(`http://localhost:3200/recipes/getRecipe`, {\n    id\n  });\n  return response.data;\n};\n\nconst getImage = async recipeId => {\n  console.log('recipe', recipeId);\n  const response = await axios.get(`http://localhost:3200/images/${recipeId}`);\n  return response.data;\n};\n\nconst orderBy = async (type, asc = 'asc', pageNumber, size = 20) => {\n  const response = await axios.get(`http://localhost:3200/recipes/?orderBy=${type}&&order=${asc}&&limit=${pageNumber}&&size=${size}`);\n  return response.data;\n};\n\nconst sendPutReq = (email, password, id) => {\n  axios.put(`http://localhost:3200/users`, {\n    email,\n    password,\n    id\n  });\n};\n\nconst getSpecificUser = async id => {\n  const response = await axios.post(`http://localhost:3200/users/user`, {\n    id\n  });\n  return response.data;\n};\n\nconst ingredientsOfRecipe = async id => {\n  const response = await axios.post(`http://localhost:3200/recipes/ingredient`, {\n    id\n  });\n  return response.data;\n};\n\nconst diet = async id => {\n  const response = await axios.post(`http://localhost:3200/recipes/diet`, {\n    id\n  });\n  return response.data;\n};\n\nconst category = async id => {\n  const response = await axios.post(`http://localhost:3200/recipes/category`, {\n    id\n  });\n  return response.data;\n};\n\nconst incrementView = async id => {\n  const response = await axios.post(`http://localhost:3200/recipes/increment`, {\n    id\n  });\n  return response.data;\n};\n\nconst uploadRecipe = async (data, recipe) => {\n  const response = await axios.post(`http://localhost:3200/recipes/upload`, data);\n  return response.data;\n};\n\nconst mostPopular = async () => {\n  const response = await axios.post(`http://localhost:3200/recipes/popular`);\n  return response.data;\n};\n\nconst myRecipes = async id => {\n  const response = await axios.post(`http://localhost:3200/myrecipes`);\n  return response.data;\n};\n\nmodule.exports = {\n  getImages,\n  getRecipes,\n  login,\n  getIngredients,\n  getUnits,\n  getDiets,\n  getCategories,\n  getData,\n  insertDataToDB,\n  getRecipeIngredients,\n  getRecipeDetails,\n  getImage,\n  getUserRecipes,\n  orderBy,\n  getSpecificUser,\n  sendPutReq,\n  ingredientsOfRecipe,\n  category,\n  diet,\n  incrementView,\n  mostPopular,\n  uploadRecipe\n};","map":{"version":3,"sources":["C:/Users/User/Documents/projects/fullstack-project/client/src/components/DAL/api.js"],"names":["fetch","require","axios","getData","table","id","response","get","data","getRecipes","recipes","getCategories","categories","getDiets","diets","getUnits","units","getIngredients","ingredients","getImages","getUserRecipes","userId","console","log","usersRecipe","updateRecipe","recipeInfo","find","item","addRecipe","recipe","push","addUser","user","users","login","email","password","res","post","insertDataToDB","placeToInsert","values","then","getRecipeIngredients","recipeId","getRecipeDetails","getImage","orderBy","type","asc","pageNumber","size","sendPutReq","put","getSpecificUser","ingredientsOfRecipe","diet","category","incrementView","uploadRecipe","mostPopular","myRecipes","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\r\nconst fetch = require(\"node-fetch\");\r\nconst axios = require('axios')\r\n\r\nconst getData = async (table, id) => {\r\n  const response = await axios.get(`http://localhost:3200/${table}${!!id ? ('/' + id) : ''}`)\r\n  return response.data\r\n};\r\n\r\nconst getRecipes = async () => {\r\n  const recipes = await axios.get('http://localhost:3200/recipes')\r\n  return recipes.data\r\n};\r\n\r\nconst getCategories = async () => {\r\n  const categories = await axios.get('http://localhost:3200/categories')\r\n  return categories.data\r\n\r\n};\r\n\r\nconst getDiets = async () => {\r\n  const diets = await axios.get('http://localhost:3200/diets')\r\n  return diets.data\r\n};\r\n\r\nconst getUnits = async () => {\r\n  const units = await axios.get('http://localhost:3200/units')\r\n  return units.data\r\n};\r\n\r\nconst getIngredients = async () => {\r\n  const ingredients = await axios.get('http://localhost:3200/ingredients')\r\n  return ingredients.data\r\n};\r\nconst getImages = () => {\r\n  // return Promise.resolve(images);\r\n};\r\nconst getUserRecipes = async (userId) => {\r\n  console.log(userId);\r\n  const usersRecipe = await axios.get(`http://localhost:3200/users/recipes/${userId}`)\r\n  return usersRecipe.data\r\n\r\n}\r\nconst updateRecipe = async (recipeInfo) => {\r\n  const recipes = await getRecipes();\r\n  recipes.find((item) =>\r\n    item.id === recipeInfo.id ? (item = { ...recipeInfo }) : null\r\n  );\r\n};\r\n\r\nconst addRecipe = async (recipe) => {\r\n  const recipes = await getRecipes();\r\n  recipes.push(recipe);\r\n};\r\n\r\nconst addUser = async (user) => {\r\n  const users = await getData('users');\r\n  users.push(user);\r\n};\r\n\r\nconst login = async (email, password) => {\r\n  const res = await axios.post('http://localhost:3200/users/login', {\r\n    email: email,\r\n    password: password\r\n\r\n  })\r\n  return res.data\r\n\r\n};\r\nconst insertDataToDB = (placeToInsert, values) => {\r\n  axios.post(`http://localhost:3200/${placeToInsert}`, {\r\n    values\r\n  }).then(() => console.log('success'))\r\n}\r\nconst getRecipeIngredients = async (recipeId) => {\r\n  console.log(recipeId);\r\n  const response = await axios.get(`http://localhost:3200/ingredients/${recipeId}`)\r\n  return response.data\r\n}\r\n\r\nconst getRecipeDetails = async (id) => {\r\n  console.log('recipe', id);\r\n  const response = await axios.post(`http://localhost:3200/recipes/getRecipe`, { id })\r\n  return response.data\r\n}\r\nconst getImage = async (recipeId) => {\r\n  console.log('recipe', recipeId);\r\n  const response = await axios.get(`http://localhost:3200/images/${recipeId}`)\r\n  return response.data\r\n}\r\n\r\n\r\nconst orderBy = async (type, asc = 'asc', pageNumber, size = 20) => {\r\n  const response = await axios.get(`http://localhost:3200/recipes/?orderBy=${type}&&order=${asc}&&limit=${pageNumber}&&size=${size}`)\r\n  return response.data\r\n}\r\n\r\nconst sendPutReq = (email, password, id) => {\r\n  axios.put(`http://localhost:3200/users`, { email, password, id })\r\n}\r\n\r\nconst getSpecificUser = async (id) => {\r\n  const response = await axios.post(`http://localhost:3200/users/user`, { id })\r\n  return response.data\r\n}\r\nconst ingredientsOfRecipe = async (id) => {\r\n  const response = await axios.post(`http://localhost:3200/recipes/ingredient`, { id })\r\n  return response.data\r\n}\r\nconst diet = async (id) => {\r\n  const response = await axios.post(`http://localhost:3200/recipes/diet`, { id })\r\n  return response.data\r\n}\r\nconst category = async (id) => {\r\n  const response = await axios.post(`http://localhost:3200/recipes/category`, { id })\r\n  return response.data\r\n}\r\nconst incrementView = async (id) => {\r\n  const response = await axios.post(`http://localhost:3200/recipes/increment`, { id })\r\n  return response.data\r\n}\r\n\r\nconst uploadRecipe = async (data, recipe) => {\r\n  const response = await axios.post(`http://localhost:3200/recipes/upload`, data)\r\n  return response.data\r\n}\r\nconst mostPopular = async () => {\r\n  const response = await axios.post(`http://localhost:3200/recipes/popular`)\r\n  return response.data\r\n}\r\n\r\nconst myRecipes=async (id)=>{\r\n  const response = await axios.post(`http://localhost:3200/myrecipes`,)\r\n  return response.data\r\n}\r\nmodule.exports = {\r\n  getImages,\r\n  getRecipes,\r\n  login,\r\n  getIngredients,\r\n  getUnits,\r\n  getDiets,\r\n  getCategories,\r\n  getData,\r\n  insertDataToDB,\r\n  getRecipeIngredients,\r\n  getRecipeDetails,\r\n  getImage,\r\n  getUserRecipes,\r\n  orderBy,\r\n  getSpecificUser,\r\n  sendPutReq,\r\n  ingredientsOfRecipe,\r\n  category,\r\n  diet,\r\n  incrementView,\r\n  mostPopular,\r\n  uploadRecipe\r\n};\r\n"]},"metadata":{},"sourceType":"module"}