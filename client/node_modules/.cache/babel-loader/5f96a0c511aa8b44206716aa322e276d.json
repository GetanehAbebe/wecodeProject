{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\projects\\\\fullstack-project\\\\client\\\\src\\\\components\\\\sections\\\\ShowAllRecipes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Spinner } from \"react-bootstrap\";\nimport CardItem from \"./CardItem\";\nimport { Form, Row, Col } from \"react-bootstrap\";\nimport { getData } from \"../DAL/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ShowAllRecipes = props => {\n  _s();\n\n  const {\n    recipes,\n    images,\n    loading,\n    onAdd\n  } = props;\n  console.log(recipes);\n  const [order, setOrder] = useState(\"color\");\n  const [newImages, setNewImages] = useState([]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Loading\", /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n\n  function getObj(array, filter) {\n    const image = array.find(item => item.recipeId == filter);\n    if (image) return image.imgUrl;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \" d-flex flex-wrap justify-content-center  \",\n      children: recipes.map(recipe => /*#__PURE__*/_jsxDEV(CardItem, {\n        path: `/products/${recipe.recipeId}`,\n        src: getData('images') //src=\n        ,\n        text: recipe.name,\n        views: recipe.views,\n        label: recipe.name,\n        onAdd: onAdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ShowAllRecipes, \"ZAElC+BBhM+z/aGCSwf+6xN6Atw=\");\n\n_c = ShowAllRecipes;\nexport default ShowAllRecipes;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowAllRecipes\");","map":{"version":3,"sources":["C:/Users/User/Documents/projects/fullstack-project/client/src/components/sections/ShowAllRecipes.js"],"names":["React","useState","useEffect","Link","Spinner","CardItem","Form","Row","Col","getData","ShowAllRecipes","props","recipes","images","loading","onAdd","console","log","order","setOrder","newImages","setNewImages","getObj","array","filter","image","find","item","recipeId","imgUrl","map","recipe","name","views"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,QAA+B,iBAA/B;AACA,SAASC,OAAT,QAAwB,YAAxB;;;;AACA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,MAAX;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA;AAA5B,MAAsCJ,KAA5C;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AAEA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,OAAD,CAAlC;AACA,QAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,EAAD,CAA1C;;AAGA,MAAIa,OAAJ,EAAa;AACX,wBACE;AAAA,yCAEE,QAAC,OAAD;AAAS,QAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AACD,WAASQ,MAAT,CAAgBC,KAAhB,EAAuBC,MAAvB,EAA+B;AAC7B,UAAMC,KAAK,GAAGF,KAAK,CAACG,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAACC,QAAL,IAAiBJ,MAAtC,CAAd;AACA,QAAIC,KAAJ,EAAW,OAAOA,KAAK,CAACI,MAAb;AACZ;;AACD,sBACE;AAAA,2BACE;AAAI,MAAA,SAAS,EAAC,4CAAd;AAAA,gBACGjB,OAAO,CAACkB,GAAR,CAAaC,MAAD,iBACX,QAAC,QAAD;AACE,QAAA,IAAI,EAAG,aAAYA,MAAM,CAACH,QAAS,EADrC;AAEE,QAAA,GAAG,EAAEnB,OAAO,CAAC,QAAD,CAFd,CAIE;AAJF;AAKE,QAAA,IAAI,EAAEsB,MAAM,CAACC,IALf;AAME,QAAA,KAAK,EAAED,MAAM,CAACE,KANhB;AAOE,QAAA,KAAK,EAAEF,MAAM,CAACC,IAPhB;AAQE,QAAA,KAAK,EAAEjB;AART;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAkBD,CAtCD;;GAAML,c;;KAAAA,c;AAwCN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nimport CardItem from \"./CardItem\";\r\nimport { Form, Row, Col } from \"react-bootstrap\";\r\nimport { getData } from \"../DAL/api\";\r\nconst ShowAllRecipes = (props) => {\r\n  const { recipes, images, loading, onAdd } = props\r\n  console.log(recipes);\r\n\r\n  const [order, setOrder] = useState(\"color\");\r\n  const [newImages, setNewImages] = useState([]);\r\n\r\n\r\n  if (loading) {\r\n    return (\r\n      <h2>\r\n        Loading\r\n        <Spinner animation=\"border\" />\r\n      </h2>\r\n    );\r\n  }\r\n  function getObj(array, filter) {\r\n    const image = array.find((item) => item.recipeId == filter)\r\n    if (image) return image.imgUrl\r\n  }\r\n  return (\r\n    <>\r\n      <ul className=\" d-flex flex-wrap justify-content-center  \">\r\n        {recipes.map((recipe) => (\r\n          <CardItem\r\n            path={`/products/${recipe.recipeId}`}\r\n            src={getData('images',)\r\n            }\r\n            //src=\r\n            text={recipe.name}\r\n            views={recipe.views}\r\n            label={recipe.name}\r\n            onAdd={onAdd}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShowAllRecipes;\r\n"]},"metadata":{},"sourceType":"module"}