{"ast":null,"code":"export default function validateInfo(values) {\n  let errors = {};\n  errors.firstName = [];\n  errors.lastName = [];\n  errors.email = [];\n  errors.adress = [];\n  errors.password = [];\n  errors.password2 = [];\n  errors.isPrivate = [];\n  errors.image = [];\n  errors.category = [];\n  errors.diet = [];\n\n  if (!values.firstName || !values.firstName.trim()) {\n    errors.username.push(\"please enter your firstname\");\n  }\n\n  if (values.firstName && values.firstName.length < 3) {\n    errors.username.push(\"firstname must be at least 3 characters long\");\n  }\n\n  if (!values.lastName || !values.lastName.trim()) {\n    errors.username.push(\"please enter your lastname\");\n  }\n\n  if (values.lastName && values.lastName.length < 3) {\n    errors.username.push('lastname must be at least 3 characters long');\n  }\n\n  if (!values.email) {\n    errors.email.push(\"Please enter your email\");\n  } else if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(values.email)) {\n    errors.email.push(\"The email you entered is invalid\");\n  }\n\n  if (!values.password) {\n    errors.password.push(\"please enter your password\");\n  } else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/.test(values.password)) {\n    errors.password.push(\"The password doesn't match the requirements\");\n  }\n\n  if (values.password != values.password2) {\n    console.log(values.password2);\n    errors.password2.push(\"Passwords are not identical\");\n  }\n\n  if (!values.isPrivate) {\n    errors.isPrivate.push(\"please choose\");\n  }\n\n  if (!values.image) {\n    errors.image.push(\"please choose image\");\n  } // if (values.category.length < 2) {\n  //   errors.category.push('please choose  at least 2 types')\n  // }\n  // if (values.diet.length < 2) {\n  //   errors.diet.push('please choose  at least 2 types')\n  // }\n\n\n  return errors;\n}","map":{"version":3,"sources":["C:/Users/User/Documents/projects/fullstack-project/client/src/components/utills/validateInfo.js"],"names":["validateInfo","values","errors","firstName","lastName","email","adress","password","password2","isPrivate","image","category","diet","trim","username","push","length","test","console","log"],"mappings":"AAAA,eAAe,SAASA,YAAT,CAAsBC,MAAtB,EAA8B;AAC3C,MAAIC,MAAM,GAAG,EAAb;AACAA,EAAAA,MAAM,CAACC,SAAP,GAAmB,EAAnB;AACAD,EAAAA,MAAM,CAACE,QAAP,GAAkB,EAAlB;AACAF,EAAAA,MAAM,CAACG,KAAP,GAAe,EAAf;AACAH,EAAAA,MAAM,CAACI,MAAP,GAAgB,EAAhB;AACAJ,EAAAA,MAAM,CAACK,QAAP,GAAkB,EAAlB;AACAL,EAAAA,MAAM,CAACM,SAAP,GAAmB,EAAnB;AACAN,EAAAA,MAAM,CAACO,SAAP,GAAmB,EAAnB;AACAP,EAAAA,MAAM,CAACQ,KAAP,GAAe,EAAf;AACAR,EAAAA,MAAM,CAACS,QAAP,GAAkB,EAAlB;AACAT,EAAAA,MAAM,CAACU,IAAP,GAAc,EAAd;;AAEA,MAAI,CAACX,MAAM,CAACE,SAAR,IAAqB,CAACF,MAAM,CAACE,SAAP,CAAiBU,IAAjB,EAA1B,EAAmD;AACjDX,IAAAA,MAAM,CAACY,QAAP,CAAgBC,IAAhB,CAAqB,6BAArB;AACD;;AACD,MAAId,MAAM,CAACE,SAAP,IAAoBF,MAAM,CAACE,SAAP,CAAiBa,MAAjB,GAA0B,CAAlD,EAAqD;AACnDd,IAAAA,MAAM,CAACY,QAAP,CAAgBC,IAAhB,CAAqB,8CAArB;AACD;;AACD,MAAI,CAACd,MAAM,CAACG,QAAR,IAAoB,CAACH,MAAM,CAACG,QAAP,CAAgBS,IAAhB,EAAzB,EAAiD;AAC/CX,IAAAA,MAAM,CAACY,QAAP,CAAgBC,IAAhB,CAAqB,4BAArB;AACD;;AACD,MAAId,MAAM,CAACG,QAAP,IAAmBH,MAAM,CAACG,QAAP,CAAgBY,MAAhB,GAAyB,CAAhD,EAAmD;AACjDd,IAAAA,MAAM,CAACY,QAAP,CAAgBC,IAAhB,CAAqB,6CAArB;AACD;;AACD,MAAI,CAACd,MAAM,CAACI,KAAZ,EAAmB;AACjBH,IAAAA,MAAM,CAACG,KAAP,CAAaU,IAAb,CAAkB,yBAAlB;AACD,GAFD,MAEO,IACL,CAAC,gDAAgDE,IAAhD,CAAqDhB,MAAM,CAACI,KAA5D,CADI,EAEL;AACAH,IAAAA,MAAM,CAACG,KAAP,CAAaU,IAAb,CAAkB,kCAAlB;AACD;;AACD,MAAI,CAACd,MAAM,CAACM,QAAZ,EAAsB;AACpBL,IAAAA,MAAM,CAACK,QAAP,CAAgBQ,IAAhB,CAAqB,4BAArB;AACD,GAFD,MAEO,IACL,CAAC,iDAAiDE,IAAjD,CAAsDhB,MAAM,CAACM,QAA7D,CADI,EAEL;AACAL,IAAAA,MAAM,CAACK,QAAP,CAAgBQ,IAAhB,CAAqB,6CAArB;AACD;;AAED,MAAId,MAAM,CAACM,QAAP,IAAmBN,MAAM,CAACO,SAA9B,EAAyC;AACvCU,IAAAA,OAAO,CAACC,GAAR,CAAYlB,MAAM,CAACO,SAAnB;AACAN,IAAAA,MAAM,CAACM,SAAP,CAAiBO,IAAjB,CAAsB,6BAAtB;AACD;;AAED,MAAI,CAACd,MAAM,CAACQ,SAAZ,EAAuB;AACrBP,IAAAA,MAAM,CAACO,SAAP,CAAiBM,IAAjB,CAAsB,eAAtB;AACD;;AACD,MAAI,CAACd,MAAM,CAACS,KAAZ,EAAmB;AACjBR,IAAAA,MAAM,CAACQ,KAAP,CAAaK,IAAb,CAAkB,qBAAlB;AACD,GAlD0C,CAoD3C;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAAOb,MAAP;AACD","sourcesContent":["export default function validateInfo(values) {\r\n  let errors = {};\r\n  errors.firstName = [];\r\n  errors.lastName = [];\r\n  errors.email = [];\r\n  errors.adress = [];\r\n  errors.password = [];\r\n  errors.password2 = [];\r\n  errors.isPrivate = [];\r\n  errors.image = []\r\n  errors.category = []\r\n  errors.diet = []\r\n\r\n  if (!values.firstName || !values.firstName.trim()) {\r\n    errors.username.push(\"please enter your firstname\");\r\n  }\r\n  if (values.firstName && values.firstName.length < 3) {\r\n    errors.username.push(\"firstname must be at least 3 characters long\");\r\n  }\r\n  if (!values.lastName || !values.lastName.trim()) {\r\n    errors.username.push(\"please enter your lastname\");\r\n  }\r\n  if (values.lastName && values.lastName.length < 3) {\r\n    errors.username.push('lastname must be at least 3 characters long')\r\n  }\r\n  if (!values.email) {\r\n    errors.email.push(\"Please enter your email\");\r\n  } else if (\r\n    !/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(values.email)\r\n  ) {\r\n    errors.email.push(\"The email you entered is invalid\");\r\n  }\r\n  if (!values.password) {\r\n    errors.password.push(\"please enter your password\");\r\n  } else if (\r\n    !/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/.test(values.password)\r\n  ) {\r\n    errors.password.push(\"The password doesn't match the requirements\");\r\n  }\r\n\r\n  if (values.password != values.password2) {\r\n    console.log(values.password2);\r\n    errors.password2.push(\"Passwords are not identical\");\r\n  }\r\n\r\n  if (!values.isPrivate) {\r\n    errors.isPrivate.push(\"please choose\");\r\n  }\r\n  if (!values.image) {\r\n    errors.image.push(\"please choose image\");\r\n  }\r\n\r\n  // if (values.category.length < 2) {\r\n  //   errors.category.push('please choose  at least 2 types')\r\n  // }\r\n  // if (values.diet.length < 2) {\r\n  //   errors.diet.push('please choose  at least 2 types')\r\n  // }\r\n\r\n\r\n  return errors;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}