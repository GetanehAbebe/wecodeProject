{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\projects\\\\fullstack-project\\\\client\\\\src\\\\components\\\\forms\\\\RegisterForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./registerform.css\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Col, Button, Row } from \"react-bootstrap\";\nimport InputCreator from \"./InputCreator\";\nimport validate from \"../utills/validateInfo\";\nimport useForm from \"../utills/useForm\";\nimport ErrorMessages from \"../utills/ErrorMessages\";\nimport axios from 'axios';\nimport { getData, getDiets, insertDataToDB } from \"../DAL/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RegisterForm = ({\n  recipe,\n  editUser\n}) => {\n  _s();\n\n  const [editMode, setEditMode] = useState(false);\n  const [diets, setDiets] = useState([]);\n  useEffect(async () => {\n    if (recipe) setEditMode(true);\n    const fetchDiets = await getData('diets');\n    setDiets(fetchDiets);\n  }, []);\n  const {\n    handleSubmit,\n    handleChange,\n    values,\n    errors\n  } = useForm(submit, validate);\n\n  function objectIsEmpty(obj) {\n    for (var prop in obj) {\n      console.log(obj[prop]);\n      if (!!obj[prop]) return false;\n    }\n\n    return true;\n  }\n\n  function submit(e) {\n    console.log(objectIsEmpty(errors));\n\n    if (!objectIsEmpty(errors)) {\n      insertDataToDB('users', values);\n      Window.open('/');\n    }\n\n    if (editMode) {\n      editUser(values);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      dir: \"rtl\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-inner\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n          className: \"m-auto rtl\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-center\",\n            children: \"Registration page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(InputCreator, {\n            title: \"username\",\n            type: \"text\",\n            required: \"true\",\n            value: recipe ? values.name = recipe.name : values.name,\n            placeholder: \"username\",\n            sign: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }, this),\n            onChange: handleChange,\n            name: \"username\",\n            error: errors.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), errors.username && /*#__PURE__*/_jsxDEV(ErrorMessages, {\n            errors: errors.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGridPassword\",\n          children: [/*#__PURE__*/_jsxDEV(InputCreator, {\n            title: \"Email\",\n            type: \"email\",\n            required: \"true\",\n            value: values.email,\n            placeholder: \"Email\",\n            sign: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-mail-bulk\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }, this),\n            onChange: handleChange,\n            name: \"email\",\n            error: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(ErrorMessages, {\n            errors: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(InputCreator, {\n            title: \"password\",\n            type: \"password\",\n            required: \"true\",\n            value: values.password,\n            placeholder: \"password\",\n            sign: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-mail-bulk\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 21\n            }, this),\n            onChange: handleChange,\n            name: \"password\",\n            error: errors.password,\n            note: \"Minimum password requirements: at least a digit, \\r lowercase and uppercase letter in English. And no less than 8 characters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), errors.password && /*#__PURE__*/_jsxDEV(ErrorMessages, {\n            errors: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(InputCreator, {\n            title: \"confirm password\",\n            type: \"password\",\n            required: \"true\",\n            value: values.password2,\n            placeholder: \"\",\n            sign: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-mail-bulk\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 21\n            }, this),\n            onChange: handleChange,\n            name: \"password2\",\n            error: errors.password2,\n            note: \"The content of the field will be the same as the content typed for the password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), errors.password2 && /*#__PURE__*/_jsxDEV(ErrorMessages, {\n            errors: errors.password2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label text-left d-block\",\n                children: \"favorite Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              className: \"d-flex flex-row flex-wrap col-sm-10\",\n              children: [diets.length && diets.map(diet => {\n                return /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"checkbox\",\n                  label: diet.name,\n                  name: 'diet',\n                  value: diet.id,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 23\n                }, this);\n              }), errors.diet && /*#__PURE__*/_jsxDEV(ErrorMessages, {\n                errors: errors.diet\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          id: \"submit\",\n          onClick: handleSubmit,\n          children: editMode ? \"update\" : \"sign-up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"have an acount?login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(RegisterForm, \"l4LusN5m5JZDRObbRO2PW2dxjfA=\", false, function () {\n  return [useForm];\n});\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["C:/Users/User/Documents/projects/fullstack-project/client/src/components/forms/RegisterForm.jsx"],"names":["React","useEffect","useState","Link","Form","Col","Button","Row","InputCreator","validate","useForm","ErrorMessages","axios","getData","getDiets","insertDataToDB","RegisterForm","recipe","editUser","editMode","setEditMode","diets","setDiets","fetchDiets","handleSubmit","handleChange","values","errors","submit","objectIsEmpty","obj","prop","console","log","e","Window","open","name","username","email","password","password2","length","map","diet","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./registerform.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Col, Button, Row } from \"react-bootstrap\";\r\nimport InputCreator from \"./InputCreator\";\r\nimport validate from \"../utills/validateInfo\";\r\nimport useForm from \"../utills/useForm\";\r\nimport ErrorMessages from \"../utills/ErrorMessages\";\r\nimport axios from 'axios'\r\nimport { getData, getDiets, insertDataToDB } from \"../DAL/api\";\r\n\r\nconst RegisterForm = ({ recipe, editUser }) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [diets, setDiets] = useState([]);\r\n\r\n\r\n  useEffect(async () => {\r\n    if (recipe) setEditMode(true);\r\n    const fetchDiets = await getData('diets')\r\n    setDiets(fetchDiets);\r\n  }, []);\r\n\r\n  const { handleSubmit, handleChange, values, errors } = useForm(\r\n    submit,\r\n    validate\r\n  );\r\n  function objectIsEmpty(obj) {\r\n    for (var prop in obj) {\r\n      console.log(obj[prop]);\r\n      if (!!obj[prop])\r\n\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  function submit(e) {\r\n    console.log(objectIsEmpty(errors));\r\n    if (!objectIsEmpty(errors)) {\r\n      insertDataToDB('users', values);\r\n     Window.open('/')\r\n    }\r\n    if (editMode) {\r\n      editUser(values);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form dir=\"rtl\" onSubmit={handleSubmit}>\r\n        <div className=\"form-inner\">\r\n          <Form.Row className=\"m-auto rtl\">\r\n            <h1 className=\"text-center\">Registration page</h1>\r\n          </Form.Row>\r\n          <hr />\r\n          <Form.Group>\r\n            <InputCreator\r\n              title=\"username\"\r\n              type=\"text\"\r\n              required=\"true\"\r\n              value={recipe ? (values.name = recipe.name) : values.name}\r\n              placeholder=\"username\"\r\n              sign={<i class=\"fas fa-user\"></i>}\r\n              onChange={handleChange}\r\n              name=\"username\"\r\n              error={errors.username}\r\n            />\r\n            {errors.username && <ErrorMessages errors={errors.username} />}\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGridPassword\">\r\n            <InputCreator\r\n              title=\"Email\"\r\n              type=\"email\"\r\n              required=\"true\"\r\n              value={values.email}\r\n              placeholder=\"Email\"\r\n              sign={<i class=\"fas fa-mail-bulk\"></i>}\r\n              onChange={handleChange}\r\n              name=\"email\"\r\n              error={errors.email}\r\n            />\r\n            {errors.email && <ErrorMessages errors={errors.email} />}\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <InputCreator\r\n              title=\"password\"\r\n              type=\"password\"\r\n              required=\"true\"\r\n              value={values.password}\r\n              placeholder=\"password\"\r\n              sign={<i class=\"fas fa-mail-bulk\"></i>}\r\n              onChange={handleChange}\r\n              name=\"password\"\r\n              error={errors.password}\r\n              note=\"Minimum password requirements: at least a digit, \r\n              lowercase and uppercase letter in English. And no less than 8 characters\"\r\n            />\r\n            {errors.password && <ErrorMessages errors={errors.password} />}\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <InputCreator\r\n              title=\"confirm password\"\r\n              type=\"password\"\r\n              required=\"true\"\r\n              value={values.password2}\r\n              placeholder=\"\"\r\n              sign={<i class=\"fas fa-mail-bulk\"></i>}\r\n              onChange={handleChange}\r\n              name=\"password2\"\r\n              error={errors.password2}\r\n              note=\"The content of the field will be the same as the content typed for the password\"\r\n            />\r\n            {errors.password2 && <ErrorMessages errors={errors.password2} />}\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Row>\r\n              <Col>\r\n                <label className='form-label text-left d-block'>favorite Category</label>\r\n              </Col>\r\n              <Col className=\"d-flex flex-row flex-wrap col-sm-10\">\r\n                {diets.length &&\r\n                  diets.map((diet) => {\r\n                    return (\r\n                      <Form.Check\r\n                        type=\"checkbox\"\r\n                        label={diet.name}\r\n                        name={'diet'}\r\n                        value={diet.id}\r\n                        onChange={handleChange}\r\n                      />\r\n                    );\r\n                  })}\r\n                {errors.diet && <ErrorMessages errors={errors.diet} />}\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n          {\r\n            <Button type=\"submit\" id=\"submit\" onClick={handleSubmit}>\r\n              {editMode ? \"update\" : \"sign-up\"}\r\n            </Button>\r\n          }\r\n          <Link to=\"/login\">have an acount?login</Link>\r\n        </div>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n"]},"metadata":{},"sourceType":"module"}