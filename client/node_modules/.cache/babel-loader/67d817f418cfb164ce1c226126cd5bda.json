{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useForm = (callback, validate) => {\n  _s();\n\n  const [values, setValues] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\"\n  });\n  const [errors, setErrors] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\"\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (values[name]) {\n      setValues({ ...values,\n        [name]: \"\"\n      });\n    } else {\n      setValues({ ...values,\n        [name]: value\n      });\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    for (const key in errors) {\n      if (!!errors[key].length) return;\n    }\n\n    isSubmitting && callback();\n  }, [errors]);\n  console.log(values);\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors\n  };\n};\n\n_s(useForm, \"Z8Jw4rWKeJQzK29W2Dh/k/vvOGE=\");\n\nexport default useForm;","map":{"version":3,"sources":["C:/Users/User/Documents/projects/fullstack-project/src/form/useForm.js"],"names":["useState","useEffect","useForm","callback","validate","values","setValues","username","email","password","password2","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","e","name","value","target","handleSubmit","preventDefault","key","length","console","log"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AACA,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAAA;;AACtC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC;AACnCO,IAAAA,QAAQ,EAAE,EADyB;AAEnCC,IAAAA,KAAK,EAAE,EAF4B;AAGnCC,IAAAA,QAAQ,EAAE,EAHyB;AAInCC,IAAAA,SAAS,EAAE;AAJwB,GAAD,CAApC;AAMA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC;AACnCO,IAAAA,QAAQ,EAAE,EADyB;AAEnCC,IAAAA,KAAK,EAAE,EAF4B;AAGnCC,IAAAA,QAAQ,EAAE,EAHyB;AAInCC,IAAAA,SAAS,EAAE;AAJwB,GAAD,CAApC;AAOA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMe,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;;AACA,QAAId,MAAM,CAACY,IAAD,CAAV,EAAkB;AAChBX,MAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAa,SAACY,IAAD,GAAQ;AAArB,OAAD,CAAT;AACD,KAFD,MAEO;AACLX,MAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAa,SAACY,IAAD,GAAQC;AAArB,OAAD,CAAT;AACD;AACF,GAPD;;AASA,QAAME,YAAY,GAAIJ,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACK,cAAF;AACAT,IAAAA,SAAS,CAACR,QAAQ,CAACC,MAAD,CAAT,CAAT;AAEAS,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GALD;;AAOAb,EAAAA,SAAS,CAAC,MAAM;AACd,SAAK,MAAMqB,GAAX,IAAkBX,MAAlB,EAA0B;AACxB,UAAI,CAAC,CAACA,MAAM,CAACW,GAAD,CAAN,CAAYC,MAAlB,EAA0B;AAC3B;;AACDV,IAAAA,YAAY,IAAIV,QAAQ,EAAxB;AACD,GALQ,EAKN,CAACQ,MAAD,CALM,CAAT;AAMAa,EAAAA,OAAO,CAACC,GAAR,CAAYpB,MAAZ;AACA,SAAO;AAAEU,IAAAA,YAAF;AAAgBK,IAAAA,YAAhB;AAA8Bf,IAAAA,MAA9B;AAAsCM,IAAAA;AAAtC,GAAP;AACD,CAxCD;;GAAMT,O;;AA0CN,eAAeA,OAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nconst useForm = (callback, validate) => {\r\n  const [values, setValues] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (values[name]) {\r\n      setValues({ ...values, [name]: \"\" });\r\n    } else {\r\n      setValues({ ...values, [name]: value });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(validate(values));\r\n\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    for (const key in errors) {\r\n      if (!!errors[key].length) return;\r\n    }\r\n    isSubmitting && callback();\r\n  }, [errors]);\r\n  console.log(values);\r\n  return { handleChange, handleSubmit, values, errors };\r\n};\r\n\r\nexport default useForm;\r\n"]},"metadata":{},"sourceType":"module"}