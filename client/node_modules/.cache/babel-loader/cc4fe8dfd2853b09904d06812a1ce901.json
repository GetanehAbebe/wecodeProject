{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\projects\\\\fullstack-project\\\\client\\\\src\\\\components\\\\forms\\\\RegisterForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./registerform.css\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Form, Col, Button, Row } from \"react-bootstrap\";\nimport InputCreator from \"./InputCreator\";\nimport validate from \"../utills/validateInfo\";\nimport useForm from \"../utills/useForm\";\nimport ErrorMessages from \"../utills/ErrorMessages\";\nimport { getData, insertDataToDB } from \"../DAL/api\";\nimport * as Yup from 'yup';\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RegisterForm = ({\n  recipe,\n  editUser\n}) => {\n  _s();\n\n  const [editMode, setEditMode] = useState(false);\n  const [diets, setDiets] = useState([]);\n  const [meesages, setMessages] = useState('');\n  const history = useHistory();\n  useEffect(async () => {\n    if (recipe) setEditMode(true);\n    const fetchDiets = await getData('diets');\n    console.log(fetchDiets);\n    setDiets(fetchDiets);\n  }, []);\n  const formik = useFormik({\n    initialValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      diet: [],\n      confirmPassword: '',\n      description: '',\n      image: ''\n    },\n    validationSchema: Yup.object({\n      firstName: Yup.string().max(15, 'Must be 15 characters or less').required('Required'),\n      lastName: Yup.string().max(20, 'Must be 20 characters or less').required('Required'),\n      email: Yup.string().email('Email is invalid').required('Email is required'),\n      password: Yup.string().min(6, 'Password must be at least 6 charaters').required('Password is required'),\n      confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Password must match').required('Confirm password is required'),\n      diet: Yup.array().required('required').min(2, 'must check 2 types')\n    }),\n    onSubmit: async values => {\n      const data = new FormData();\n\n      if (!'get') {\n        const response = await update(data);\n      } else {\n        const update = await updateRecipe(data);\n      }\n\n      submit();\n    }\n  });\n\n  async function submit(e) {\n    // console.log(objectIsEmpty(errors));\n    // if (!objectIsEmpty(errors)) {\n    const res = await insertDataToDB('users', values);\n    console.log(res); // console.log(res);\n    // history.push('/login')\n\n    console.log(res);\n    setMessages(res);\n\n    if (editMode) {\n      editUser(values);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      dir: \"rtl\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-inner\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n          className: \"m-auto rtl\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-center\",\n            children: \"Registration page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(InputCreator, {\n            title: \"First name\",\n            type: \"text\",\n            required: \"true\",\n            value: formik.values,\n            placeholder: \"First Name\",\n            sign: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }, this),\n            onChange: formik.handleChange,\n            name: \"firstName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), formik.touched.firstName && formik.errors.firstName ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-danger\",\n            children: [formik.errors.firstName, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 68\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(InputCreator, {\n            title: \"Last name\",\n            type: \"text\",\n            required: \"true\",\n            value: formik.values.lastName,\n            placeholder: \"last Name\",\n            sign: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 21\n            }, this),\n            onChange: formik.handleChange,\n            name: \"lastName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), formik.touched.lastName && formik.errors.lastName ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-danger\",\n            children: [formik.errors.lastName, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 66\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGridPassword\",\n          children: [/*#__PURE__*/_jsxDEV(InputCreator, {\n            title: \"Email\",\n            type: \"email\",\n            required: \"true\",\n            onChange: formik.handleChange,\n            placeholder: \"Email\",\n            sign: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-mail-bulk\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 21\n            }, this),\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-danger\",\n            children: [formik.errors.email, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 60\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(InputCreator, {\n            title: \"Password\",\n            type: \"password\",\n            required: \"true\",\n            value: formik.values,\n            placeholder: \"password\",\n            sign: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-mail-bulk\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 21\n            }, this),\n            onChange: formik.handleChange,\n            name: \"password\",\n            note: \"Minimum password requirements: at least a digit, \\r lowercase and uppercase letter in English. And no less than 8 characters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), formik.touched.password && formik.errors.password ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-danger\",\n            children: [formik.errors.password, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 66\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(InputCreator, {\n            title: \"Confirm password\",\n            type: \"password\",\n            required: \"true\",\n            value: formik.values,\n            placeholder: \"\",\n            sign: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-mail-bulk\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 21\n            }, this),\n            onChange: formik.handleChange,\n            name: \"confirmPassword\",\n            note: \"The content of the field will be the same as the content typed for the password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), formik.touched.confirmPassword && formik.errors.confirmPassword ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-danger\",\n            children: [formik.errors.confirmPassword, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 80\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label text-left d-block\",\n                children: \"Favorite diet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              className: \"d-flex flex-row flex-wrap col-sm-10\",\n              children: [diets.length && diets.map(diet => {\n                return /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"checkbox\",\n                  label: diet.name,\n                  name: 'diet',\n                  value: diet.id,\n                  onChange: formik.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 23\n                }, this);\n              }), formik.touched.diet && formik.errors.diet ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-danger\",\n                children: [formik.errors.diet, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 62\n              }, this) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          id: \"submit\",\n          children: editMode ? \"update\" : \"sign-up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"have an acount?login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(RegisterForm, \"UaJ5sqoQF14UYh4XfH+KvfagKqs=\", false, function () {\n  return [useHistory, useFormik];\n});\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["C:/Users/User/Documents/projects/fullstack-project/client/src/components/forms/RegisterForm.jsx"],"names":["React","useEffect","useState","Link","useHistory","Form","Col","Button","Row","InputCreator","validate","useForm","ErrorMessages","getData","insertDataToDB","Yup","useFormik","RegisterForm","recipe","editUser","editMode","setEditMode","diets","setDiets","meesages","setMessages","history","fetchDiets","console","log","formik","initialValues","firstName","lastName","email","password","diet","confirmPassword","description","image","validationSchema","object","string","max","required","min","oneOf","ref","array","onSubmit","values","data","FormData","response","update","updateRecipe","submit","e","res","handleSubmit","handleChange","touched","errors","length","map","name","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./registerform.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Form, Col, Button, Row } from \"react-bootstrap\";\r\nimport InputCreator from \"./InputCreator\";\r\nimport validate from \"../utills/validateInfo\";\r\nimport useForm from \"../utills/useForm\";\r\nimport ErrorMessages from \"../utills/ErrorMessages\";\r\nimport { getData, insertDataToDB } from \"../DAL/api\";\r\nimport * as Yup from 'yup'\r\nimport { useFormik } from \"formik\";\r\nconst RegisterForm = ({ recipe, editUser }) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [diets, setDiets] = useState([]);\r\n  const [meesages, setMessages] = useState('')\r\n  const history = useHistory()\r\n  useEffect(async () => {\r\n    if (recipe) setEditMode(true);\r\n    const fetchDiets = await getData('diets')\r\n    console.log(fetchDiets);\r\n    setDiets(fetchDiets);\r\n  }, []);\r\n\r\n\r\n\r\n\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      diet: [],\r\n      confirmPassword: '',\r\n      description: '',\r\n      image: ''\r\n    },\r\n\r\n    validationSchema: Yup.object({\r\n      firstName: Yup.string()\r\n        .max(15, 'Must be 15 characters or less')\r\n        .required('Required'),\r\n      lastName: Yup.string()\r\n        .max(20, 'Must be 20 characters or less')\r\n        .required('Required'),\r\n      email: Yup.string()\r\n        .email('Email is invalid')\r\n        .required('Email is required'),\r\n      password: Yup.string()\r\n        .min(6, 'Password must be at least 6 charaters')\r\n        .required('Password is required'),\r\n      confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], 'Password must match')\r\n        .required('Confirm password is required'),\r\n      diet: Yup.array().required('required')\r\n        .min(2, 'must check 2 types')\r\n    })\r\n    ,\r\n    onSubmit: async (values) => {\r\n      const data = new FormData();\r\n\r\n      \r\n      if (!'get') {\r\n        const response = await update(data)\r\n      } else {\r\n        const update = await updateRecipe(data)\r\n      }\r\n      submit()\r\n    },\r\n\r\n  })\r\n\r\n\r\n  async function submit(e) {\r\n    // console.log(objectIsEmpty(errors));\r\n    // if (!objectIsEmpty(errors)) {\r\n    const res = await insertDataToDB('users', values)\r\n    console.log(res);\r\n    // console.log(res);\r\n    // history.push('/login')\r\n    console.log(res);\r\n    setMessages(res)\r\n    if (editMode) {\r\n      editUser(values);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form dir=\"rtl\" onSubmit={handleSubmit}>\r\n        <div className=\"form-inner\">\r\n          <Form.Row className=\"m-auto rtl\">\r\n            <h1 className=\"text-center\">Registration page</h1>\r\n          </Form.Row>\r\n          <hr />\r\n          <Form.Group>\r\n            <InputCreator\r\n              title=\"First name\"\r\n              type=\"text\"\r\n              required=\"true\"\r\n              value={formik.values}\r\n              placeholder=\"First Name\"\r\n              sign={<i class=\"fas fa-user\"></i>}\r\n              onChange={formik.handleChange}\r\n              name=\"firstName\"\r\n            />\r\n            {formik.touched.firstName && formik.errors.firstName ? <p className='text-danger'>{formik.errors.firstName} </p> : \"\"}\r\n\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <InputCreator\r\n              title=\"Last name\"\r\n              type=\"text\"\r\n              required=\"true\"\r\n              value={formik.values.lastName}\r\n              placeholder=\"last Name\"\r\n              sign={<i class=\"fas fa-user\"></i>}\r\n              onChange={formik.handleChange}\r\n              name=\"lastName\"\r\n            />\r\n            {formik.touched.lastName && formik.errors.lastName ? <p className='text-danger'>{formik.errors.lastName} </p> : \"\"}\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGridPassword\">\r\n            <InputCreator\r\n              title=\"Email\"\r\n              type=\"email\"\r\n              required=\"true\"\r\n              onChange={formik.handleChange}\r\n              placeholder=\"Email\"\r\n              sign={<i class=\"fas fa-mail-bulk\"></i>}\r\n              name=\"email\"\r\n            />\r\n            {formik.touched.email && formik.errors.email ? <p className='text-danger'>{formik.errors.email} </p> : \"\"}\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <InputCreator\r\n              title=\"Password\"\r\n              type=\"password\"\r\n              required=\"true\"\r\n              value={formik.values}\r\n              placeholder=\"password\"\r\n              sign={<i class=\"fas fa-mail-bulk\"></i>}\r\n              onChange={formik.handleChange}\r\n              name=\"password\"\r\n              note=\"Minimum password requirements: at least a digit, \r\n              lowercase and uppercase letter in English. And no less than 8 characters\"\r\n            />\r\n            {formik.touched.password && formik.errors.password ? <p className='text-danger'>{formik.errors.password} </p> : \"\"}\r\n\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <InputCreator\r\n              title=\"Confirm password\"\r\n              type=\"password\"\r\n              required=\"true\"\r\n              value={formik.values}\r\n              placeholder=\"\"\r\n              sign={<i class=\"fas fa-mail-bulk\"></i>}\r\n              onChange={formik.handleChange}\r\n              name=\"confirmPassword\"\r\n\r\n              note=\"The content of the field will be the same as the content typed for the password\"\r\n            />\r\n            {formik.touched.confirmPassword && formik.errors.confirmPassword ? <p className='text-danger'>{formik.errors.confirmPassword} </p> : \"\"}\r\n\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Row>\r\n              <Col>\r\n                <label className='form-label text-left d-block'>Favorite diet</label>\r\n              </Col>\r\n              <Col className=\"d-flex flex-row flex-wrap col-sm-10\">\r\n                {diets.length &&\r\n                  diets.map((diet) => {\r\n                    return (\r\n                      <Form.Check\r\n                        type=\"checkbox\"\r\n                        label={diet.name}\r\n                        name={'diet'}\r\n                        value={diet.id}\r\n                        onChange={formik.handleChange}\r\n                      />\r\n                    );\r\n                  })}\r\n                {formik.touched.diet && formik.errors.diet ? <p className='text-danger'>{formik.errors.diet} </p> : \"\"}\r\n\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n          {\r\n            <Button type=\"submit\" id=\"submit\" >\r\n              {editMode ? \"update\" : \"sign-up\"}\r\n            </Button>\r\n          }\r\n          <Link to=\"/login\">have an acount?login</Link>\r\n        </div>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n"]},"metadata":{},"sourceType":"module"}