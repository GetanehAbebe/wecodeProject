{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useForm = (callback, validate) => {\n  _s();\n\n  const [values, setValues] = useState({\n    username: \"\",\n    email: \"\",\n    adress: \"\",\n    gender: \"\",\n    password: '',\n    password2: '',\n    course: \"\"\n  });\n  const [errors, setErrors] = useState({\n    username: \"\",\n    email: \"\",\n    adress: \"\",\n    password: '',\n    password2: '',\n    gender: \"\",\n    course: \"\"\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values));\n    console.log(\"sdfsdfsd\", errors[key]);\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    for (const key in errors) {\n      if (!!errors[key].length) return;\n    }\n\n    isSubmitting && callback();\n  }, [errors]);\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors\n  };\n};\n\n_s(useForm, \"vByePE6qg0t72Nor6k4ilYpPdrE=\");\n\nexport default useForm;","map":{"version":3,"sources":["C:/Users/User/Documents/projects/fullstack-project/src/form/useForm.js"],"names":["useState","useEffect","useForm","callback","validate","values","setValues","username","email","adress","gender","password","password2","course","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","e","name","value","target","handleSubmit","preventDefault","console","log","key","length"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AACA,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAAA;;AACtC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC;AACnCO,IAAAA,QAAQ,EAAE,EADyB;AAEnCC,IAAAA,KAAK,EAAE,EAF4B;AAGnCC,IAAAA,MAAM,EAAE,EAH2B;AAInCC,IAAAA,MAAM,EAAE,EAJ2B;AAKnCC,IAAAA,QAAQ,EAAC,EAL0B;AAMnCC,IAAAA,SAAS,EAAC,EANyB;AAOnCC,IAAAA,MAAM,EAAE;AAP2B,GAAD,CAApC;AASA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC;AACnCO,IAAAA,QAAQ,EAAE,EADyB;AAEnCC,IAAAA,KAAK,EAAE,EAF4B;AAGnCC,IAAAA,MAAM,EAAE,EAH2B;AAInCE,IAAAA,QAAQ,EAAC,EAJ0B;AAKnCC,IAAAA,SAAS,EAAC,EALyB;AAMnCF,IAAAA,MAAM,EAAE,EAN2B;AAOnCG,IAAAA,MAAM,EAAE;AAP2B,GAAD,CAApC;AAUA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMkB,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAhB,IAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAa,OAACe,IAAD,GAAQC;AAArB,KAAD,CAAT;AACD,GAHD;;AAKA,QAAME,YAAY,GAAIJ,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACK,cAAF;AACAT,IAAAA,SAAS,CAACX,QAAQ,CAACC,MAAD,CAAT,CAAT;AACAoB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBZ,MAAM,CAACa,GAAD,CAA9B;AACAV,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GALD;;AAOAhB,EAAAA,SAAS,CAAC,MAAM;AACd,SAAK,MAAM0B,GAAX,IAAkBb,MAAlB,EAA0B;AACnB,UAAI,CAAC,CAACA,MAAM,CAACa,GAAD,CAAN,CAAYC,MAAlB,EAA0B;AAChC;;AACDZ,IAAAA,YAAY,IAAIb,QAAQ,EAAxB;AACD,GALQ,EAKN,CAACW,MAAD,CALM,CAAT;AAOA,SAAO;AAAEI,IAAAA,YAAF;AAAgBK,IAAAA,YAAhB;AAA8BlB,IAAAA,MAA9B;AAAsCS,IAAAA;AAAtC,GAAP;AACD,CA1CD;;GAAMZ,O;;AA4CN,eAAeA,OAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nconst useForm = (callback, validate) => {\r\n  const [values, setValues] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    adress: \"\",\r\n    gender: \"\",\r\n    password:'',\r\n    password2:'',\r\n    course: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    adress: \"\",\r\n    password:'',\r\n    password2:'',\r\n    gender: \"\",\r\n    course: \"\",\r\n  });\r\n\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(validate(values));\r\n    console.log(\"sdfsdfsd\", errors[key]);\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    for (const key in errors) {\r\n           if (!!errors[key].length) return;\r\n    }\r\n    isSubmitting && callback();\r\n  }, [errors]);\r\n\r\n  return { handleChange, handleSubmit, values, errors };\r\n};\r\n\r\nexport default useForm;\r\n"]},"metadata":{},"sourceType":"module"}