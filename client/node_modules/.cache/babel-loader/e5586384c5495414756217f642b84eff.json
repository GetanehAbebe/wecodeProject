{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\projects\\\\fullstack-project\\\\client\\\\src\\\\components\\\\Pages\\\\MyRecipes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Posts from \"../sections/ShowAllRecipes\";\nimport Pagination from \"../utills/Pagination\";\nimport './Gallery.css';\nimport ShowAllrecipes from \"../sections/ShowAllRecipes\";\nimport { getData } from \"../DAL/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyRecipes = props => {\n  _s();\n\n  const [recipes, setRecipes] = useState([]);\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [recipesPerPage, setRecipesPerPage] = useState(5);\n  useEffect(async () => {\n    const fetchRecipe = await getData('recipes');\n    console.log(fetchRecipe);\n    setRecipes(fetchRecipe);\n  }, []); // Get current posts\n\n  const indexOfLastPost = currentPage * recipesPerPage;\n  const indexOfFirstPost = indexOfLastPost - recipesPerPage;\n  const currentPosts = recipes.slice(indexOfFirstPost, indexOfLastPost); // // Change page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [recipes.length && /*#__PURE__*/_jsxDEV(ShowAllrecipes, {\n      recipes: currentPosts,\n      loading: loading,\n      onAdd: onAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 35\n    }, this), recipes.length && /*#__PURE__*/_jsxDEV(Pagination, {\n      postsPerPage: recipesPerPage,\n      totalPosts: recipes.length,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MyRecipes, \"m33RTW36pkh1i+nDAM2JZBH42WY=\");\n\n_c = MyRecipes;\nexport default MyRecipes;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyRecipes\");","map":{"version":3,"sources":["C:/Users/User/Documents/projects/fullstack-project/client/src/components/Pages/MyRecipes.js"],"names":["React","useState","useEffect","Posts","Pagination","ShowAllrecipes","getData","MyRecipes","props","recipes","setRecipes","images","setImages","loading","setLoading","currentPage","setCurrentPage","recipesPerPage","setRecipesPerPage","fetchRecipe","console","log","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","length","onAdd"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAO,eAAP;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,SAASC,OAAT,QAAwB,YAAxB;;;;AAGA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACgB,cAAD,EAAiBC,iBAAjB,IAAsCjB,QAAQ,CAAC,CAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,YAAY;AAClB,UAAMiB,WAAW,GAAG,MAAMb,OAAO,CAAC,SAAD,CAAjC;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACAT,IAAAA,UAAU,CAACS,WAAD,CAAV;AACH,GAJQ,EAIN,EAJM,CAAT,CAPyB,CAazB;;AACA,QAAMG,eAAe,GAAGP,WAAW,GAAGE,cAAtC;AACA,QAAMM,gBAAgB,GAAGD,eAAe,GAAGL,cAA3C;AACA,QAAMO,YAAY,GAAGf,OAAO,CAACgB,KAAR,CAAcF,gBAAd,EAAgCD,eAAhC,CAArB,CAhByB,CAkBzB;;AACA,QAAMI,QAAQ,GAAIC,UAAD,IAAgBX,cAAc,CAACW,UAAD,CAA/C;;AAEA,sBACI;AAAA,eAEQlB,OAAO,CAACmB,MAAR,iBAAkB,QAAC,cAAD;AACd,MAAA,OAAO,EAAEJ,YADK;AAEd,MAAA,OAAO,EAAEX,OAFK;AAGd,MAAA,KAAK,EAAEgB;AAHO;AAAA;AAAA;AAAA;AAAA,YAF1B,EASQpB,OAAO,CAACmB,MAAR,iBAAkB,QAAC,UAAD;AACd,MAAA,YAAY,EAAEX,cADA;AAEd,MAAA,UAAU,EAAER,OAAO,CAACmB,MAFN;AAGd,MAAA,QAAQ,EAAEF;AAHI;AAAA;AAAA;AAAA;AAAA,YAT1B;AAAA,kBADJ;AAmBH,CAxCD;;GAAMnB,S;;KAAAA,S;AA0CN,eAAeA,SAAf","sourcesContent":["\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Posts from \"../sections/ShowAllRecipes\";\r\nimport Pagination from \"../utills/Pagination\";\r\nimport './Gallery.css'\r\nimport ShowAllrecipes from \"../sections/ShowAllRecipes\";\r\nimport { getData } from \"../DAL/api\";\r\n\r\n\r\nconst MyRecipes = (props) => {\r\n    const [recipes, setRecipes] = useState([]);\r\n    const [images, setImages] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [recipesPerPage, setRecipesPerPage] = useState(5);\r\n\r\n    useEffect(async () => {\r\n        const fetchRecipe = await getData('recipes')\r\n        console.log(fetchRecipe);\r\n        setRecipes(fetchRecipe);\r\n    }, []);\r\n\r\n    // Get current posts\r\n    const indexOfLastPost = currentPage * recipesPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - recipesPerPage;\r\n    const currentPosts = recipes.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    // // Change page\r\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                recipes.length && <ShowAllrecipes\r\n                    recipes={currentPosts}\r\n                    loading={loading}\r\n                    onAdd={onAdd}\r\n                />\r\n            }\r\n            {\r\n                recipes.length && <Pagination\r\n                    postsPerPage={recipesPerPage}\r\n                    totalPosts={recipes.length}\r\n                    paginate={paginate}\r\n                />\r\n            }\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default MyRecipes;"]},"metadata":{},"sourceType":"module"}