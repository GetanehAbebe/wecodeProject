{"ast":null,"code":"var _s2 = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useForm = (callback, validate) => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [values, setValues] = useState({\n    diet: [],\n    category: []\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    _s();\n\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (e.target.name == 'diet') {\n      if (values.diet.includes(value)) {\n        const newDiet = values.diet.filter(item => item !== value);\n        const diet = newDiet;\n        values.diet = diet;\n        const newVal = values;\n        setValues(newVal);\n      } else {\n        values.diet.push(value);\n        const diet = [...values.diet];\n        setValues({ ...values,\n          diet\n        });\n      }\n    } else if (e.target.name == 'category') {\n      if (values.category.includes(value)) {\n        const newDiet = values.category.filter(item => item !== value);\n        const category = newDiet;\n        values.category = category;\n        const newVal = values;\n        setValues(newVal);\n      } else {\n        values.diet.push(value);\n        const category = [...values.category];\n        setValues({ ...values,\n          category\n        });\n      }\n    } else if (e.target.type == \"checkbox\" && values[name]) {\n      delete values[name];\n      setValues({ ...values\n      });\n    } else {\n      setValues({ ...values,\n        [name]: value\n      });\n    }\n\n    ;\n    console.log('redular->', values);\n\n    const handleSubmit = e => {\n      e.preventDefault();\n      setErrors(validate(values));\n      setIsSubmitting(true);\n    };\n\n    useEffect(() => {\n      for (const key in errors) {\n        if (!!errors[key].length) return;\n      }\n\n      isSubmitting && callback();\n    }, [errors]);\n    return {\n      handleChange,\n      handleSubmit,\n      values,\n      errors\n    };\n  };\n\n  _s(handleChange, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n};\n\n_s2(useForm, \"4Q/6g0FgSbL7kZWwpegYxVFGdf4=\");\n\nexport default useForm;","map":{"version":3,"sources":["C:/Users/User/Documents/projects/fullstack-project/client/src/components/utills/useForm.js"],"names":["useState","useEffect","useForm","callback","validate","values","setValues","diet","category","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","e","name","value","target","includes","newDiet","filter","item","newVal","push","type","console","log","handleSubmit","preventDefault","key","length"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nconst useForm = (callback, validate) => {\r\n  const [values, setValues] = useState({ diet: [], category: [] });\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (e.target.name == 'diet') {\r\n      if (values.diet.includes(value)) {\r\n        const newDiet = values.diet.filter(item => item !== value);\r\n        const diet = newDiet;\r\n        values.diet = diet\r\n        const newVal = values\r\n        setValues(newVal)\r\n      } else {\r\n        values.diet.push(value)\r\n        const diet = [...values.diet]\r\n        setValues({ ...values, diet })\r\n      }\r\n    } else if (e.target.name == 'category') {\r\n      if (values.category.includes(value)) {\r\n        const newDiet = values.category.filter(item => item !== value);\r\n        const category = newDiet;\r\n        values.category = category\r\n        const newVal = values\r\n        setValues(newVal)\r\n      } else {\r\n        values.diet.push(value)\r\n        const category = [...values.category]\r\n        setValues({ ...values, category })\r\n      }\r\n\r\n    } else if (e.target.type == \"checkbox\" && values[name]) {\r\n      delete values[name];\r\n      setValues({ ...values });\r\n    } else {\r\n      setValues({ ...values, [name]: value });\r\n    };\r\n\r\n    console.log('redular->', values);\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      setErrors(validate(values));\r\n      setIsSubmitting(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n      for (const key in errors) {\r\n        if (!!errors[key].length) return;\r\n      }\r\n      isSubmitting && callback();\r\n    }, [errors]);\r\n    return { handleChange, handleSubmit, values, errors };\r\n  }\r\n};\r\n\r\nexport default useForm;\r\n"]},"metadata":{},"sourceType":"module"}