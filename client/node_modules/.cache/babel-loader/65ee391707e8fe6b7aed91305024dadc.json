{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useForm = (callback, validate) => {\n  _s();\n\n  // const [values, setValues] = useState({ diet: [], category: [], image: [] });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (e.target.name == 'diet') {\n      if (values.diet.includes(value)) {\n        const newDiet = values.diet.filter(item => item !== value);\n        const diet = newDiet;\n        values.diet = diet;\n        const newVal = values;\n        setValues(newVal);\n      } else {\n        values.diet.push(value);\n        const diet = [...values.diet];\n        setValues({ ...values,\n          diet\n        });\n      }\n    } else if (e.target.name === 'image') {\n      setValues({ ...values,\n        image: e.target.files\n      });\n    } else if (e.target.name == 'category') {\n      if (values.category.includes(value)) {\n        const newCat = values.category.filter(item => item !== value);\n        const category = newCat;\n        values.category = category;\n        const newVal = values;\n        setValues(newVal);\n      } else {\n        values.category.push(value);\n        const category = [...values.category];\n        setValues({ ...values,\n          category\n        });\n      }\n    } else {\n      setValues({ ...values,\n        [name]: value\n      });\n    }\n  };\n\n  console.log('redular->', values);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values));\n    console.log(values);\n  };\n\n  useEffect(() => {\n    for (const key in errors) {\n      if (!!errors[key].length) return;\n    }\n\n    isSubmitting && callback();\n  }, [errors]);\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors\n  };\n};\n\n_s(useForm, \"eZzcIJ3oSfMomja58F1YtmLxmx4=\");\n\nexport default useForm;","map":{"version":3,"sources":["C:/Users/User/Documents/projects/fullstack-project/client/src/components/utills/useForm.js"],"names":["useState","useEffect","useForm","callback","validate","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","e","name","value","target","values","diet","includes","newDiet","filter","item","newVal","setValues","push","image","files","category","newCat","console","log","handleSubmit","preventDefault","key","length"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nconst useForm = (callback, validate) => {\r\n  // const [values, setValues] = useState({ diet: [], category: [], image: [] });\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (e.target.name == 'diet') {\r\n      if (values.diet.includes(value)) {\r\n        const newDiet = values.diet.filter(item => item !== value);\r\n        const diet = newDiet;\r\n        values.diet = diet\r\n        const newVal = values\r\n        setValues(newVal)\r\n      } else {\r\n        values.diet.push(value)\r\n        const diet = [...values.diet]\r\n        setValues({ ...values, diet })\r\n      }\r\n    } else if (e.target.name === 'image') {\r\n      setValues({ ...values, image: e.target.files })\r\n    } else if (e.target.name == 'category') {\r\n      if (values.category.includes(value)) {\r\n        const newCat = values.category.filter(item => item !== value);\r\n        const category = newCat;\r\n        values.category = category\r\n        const newVal = values\r\n        setValues(newVal)\r\n      } else {\r\n        values.category.push(value)\r\n        const category = [...values.category]\r\n        setValues({ ...values, category })\r\n      }\r\n\r\n    } else {\r\n      setValues({ ...values, [name]: value });\r\n    }\r\n  };\r\n  console.log('redular->', values);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(validate(values));\r\n    console.log(values)\r\n\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    for (const key in errors) {\r\n      if (!!errors[key].length) return;\r\n    }\r\n\r\n    isSubmitting && callback();\r\n  }, [errors]);\r\n  return { handleChange, handleSubmit, values, errors };\r\n};\r\n\r\nexport default useForm;\r\n"]},"metadata":{},"sourceType":"module"}