{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\projects\\\\fullstack-project\\\\client\\\\src\\\\components\\\\forms\\\\NewRecipeForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport * as Yup from 'yup';\nimport { Accordion, Card, Button, Form, Col, Row, Table } from \"react-bootstrap\";\nimport useForm from \"../utills/useForm\";\nimport validate from \"../utills/validateInfo\";\nimport { getData, insertDataToDB, ingredientsOfRecipe, uploadRecipe, appentIngredient, getRecipeDetails, updateRecipe } from \"../DAL/api\";\nimport { useHistory } from \"react-router-dom\";\nimport ErrorMessages from \"../utills/ErrorMessages\";\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cookies = require('js-cookie');\n\nconst axios = require('axios');\n\nfunction NewRecipeForm({\n  match,\n  recipeId,\n  mode\n}) {\n  _s();\n\n  const [ingredients, setIngredients] = useState([]);\n  const [image, setImage] = useState(null);\n  const [units, setUnits] = useState([]);\n  const [instructions, setInstructions] = useState([]);\n  const [guide, setGuide] = useState([]);\n  const [diets, setDiets] = useState([]);\n  const [recipeIngredient, setRecipeIngredient] = useState({});\n  const [recipeGuide, setRecipeGuide] = useState({});\n  const [editMode, setEditMode] = useState(false);\n  const [newIngredient, setNewIngredient] = useState('');\n  const history = useHistory();\n  const [addIng, setAddIng] = useState(false);\n  const [categories, setCategories] = useState([]); // const { handleSubmit, handleChange, values, errors } = useForm(submit, validate);\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      isPrivate: \"\",\n      source: \"\",\n      sourceUrl: \"\",\n      diet: [],\n      category: [],\n      prepTimeMin: '',\n      description: '',\n      image: ''\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().min(3, '').max(15),\n      isPrivate: Yup.string().min(1),\n      // image: Yup.string().required(\"required\"),\n      diet: Yup.array().min(2, 'choose at least 2 types'),\n      category: Yup.array().min(2, 'choose at least 2 types'),\n      prepTimeMin: Yup.string(),\n      description: Yup.string().min(3).max(30).required('3'),\n      source: Yup.string().min(3, 'min 3 charachters').max(40, 'must be 20 charachters or less').required('required')\n    }),\n    onSubmit: async values => {\n      const data = new FormData();\n      formik.values.guide = guide;\n      formik.values.userId = 95;\n      formik.values.instructions = instructions;\n      if (recipeId) formik.values.id = recipeId;\n      data.append(\"image\", image);\n      data.append(\"user\", Cookies.get('user'));\n      data.append(\"recipe\", JSON.stringify(formik.values));\n\n      if (!recipeId) {\n        const response = await uploadRecipe(data);\n      } else {\n        const update = await updateRecipe(data);\n      }\n\n      submit();\n    }\n  });\n\n  const deleteInstruction = index => {\n    instructions.splice(index, 1);\n    setInstructions([...instructions]);\n  };\n\n  const deleteGuide = index => {\n    guide.splice(index, 1);\n    setGuide([...guide]);\n  };\n\n  const checkThefilds = obj => {\n    if (Object.keys(obj).length === 0 || Object.keys(obj).length < 3) return false;\n\n    for (const prop in obj) {\n      if (!obj[prop]) return false;\n    }\n\n    return true;\n  };\n\n  const addToList = value => {\n    if (value === 'ingredients') {\n      if (checkThefilds(recipeIngredient)) {\n        setInstructions([...instructions, recipeIngredient]);\n      } else {\n        alert('please check the fields');\n      }\n    }\n\n    if (value === 'guide') setGuide([...guide, recipeGuide]);else return;\n  };\n\n  const insertDataToForm = recipe => {\n    var _recipe$images$;\n\n    formik.values.name = recipe.recipe.name;\n    formik.values.source = recipe.recipe.source;\n    formik.values.sourceUrl = recipe.recipe.sourceUrl;\n    formik.values.description = recipe.recipe.description;\n    formik.values.isPrivate = !!recipe.recipe.isPrivate;\n    formik.values.prepTimeMin = recipe.recipe.prepTimeMin;\n    console.log(recipe.category);\n    setImage((_recipe$images$ = recipe.images[0]) === null || _recipe$images$ === void 0 ? void 0 : _recipe$images$.url);\n    console.log(recipe.ingredients);\n    setGuide(recipe.instructions);\n    const arr = [];\n\n    for (let x of recipe.category) {\n      console.log(x);\n      arr.push(+x.categoryId);\n    }\n\n    formik.values.category = arr;\n    const diets = [];\n\n    for (let x of recipe.diet) {\n      diets.push(+x.dietId);\n    }\n\n    formik.values.diet = diets;\n  };\n\n  async function submit() {\n    // if (checkErrors(errors)) {\n    const data = new FormData();\n    formik.values.guide = guide;\n    formik.values.instructions = instructions;\n    if (recipeId) formik.values.id = recipeId;\n    data.append(\"image\", image);\n    data.append(\"user\", Cookies.get('user'));\n    data.append(\"recipe\", JSON.stringify(formik.values));\n\n    if (!recipeId) {\n      const response = await uploadRecipe(data);\n    } else {\n      const update = await updateRecipe(data);\n    }\n  }\n\n  const changeIngredient = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setRecipeIngredient({ ...recipeIngredient,\n      [name]: value\n    });\n  };\n\n  const changeGuide = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setRecipeGuide({ ...recipeGuide,\n      [name]: value\n    });\n  };\n\n  const addIngtoDB = async () => {\n    for (let ing of ingredients) {\n      if (ing.name === newIngredient) alert('already exist');\n    }\n\n    const response = await appentIngredient(newIngredient);\n    setAddIng(false);\n  };\n\n  useEffect(async () => {\n    if (recipeId) {\n      setEditMode(true);\n      const instruc = await ingredientsOfRecipe(recipeId);\n      const formRecipe = await getRecipeDetails(recipeId);\n      insertDataToForm(formRecipe);\n      console.log(\"instruc\", formRecipe);\n      setInstructions(instruc);\n    }\n\n    if (!Cookies.get('user')) history.push('/login');\n    const fetchIngredient = await getData('ingredients');\n    const fetchDiets = await getData('diets');\n    const fetchUnits = await getData('units');\n    const fetchCategories = await getData('categories');\n    setDiets(fetchDiets.map(item => {\n      return {\n        select: formik.values.diet.includes(item.id),\n        name: item.name,\n        id: item.id\n      };\n    }));\n    setUnits(fetchUnits);\n    setIngredients(fetchIngredient);\n    setCategories(fetchCategories.map(cat => {\n      console.log(cat);\n      return {\n        select: formik.values.category.includes(cat.id),\n        name: cat.name,\n        id: cat.id\n      };\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: formik.handleSubmit,\n    encType: \"multipart/form-data\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"Adding new recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          className: \"col-md-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"name \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"name\",\n            value: formik.values,\n            ...formik.getFieldProps(\"name\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), formik.touched.name && formik.errors.name ? /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-danger\",\n            children: [formik.errors.name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 58\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"col-md-3 mr-4\",\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Form.Label, {\n              as: \"Row\",\n              column: true,\n              sm: 10,\n              children: \"view permition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            sm: 10,\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"radio\",\n              label: \"public\",\n              name: \"isPrivate\",\n              value: \"1\",\n              onChange: formik.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"radio\",\n              label: \"private\",\n              name: \"isPrivate\",\n              value: \"0\",\n              onChange: formik.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), formik.touched.isPrivate && formik.errors.isPrivate ? /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-danger\",\n              children: [formik.errors.isPrivate, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 70\n            }, this) : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Form.File, {\n            label: \"main pic\",\n            name: \"image\",\n            multiple: true,\n            DefaultValue: formik.values,\n            onChange: e => setImage(e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), formik.touched.image && formik.errors.image ? /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-danger\",\n            children: [formik.errors.image, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 60\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"container-fluid\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" source\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"recipe source\",\n            name: \"source\",\n            value: formik.values,\n            ...formik.getFieldProps(\"source\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), formik.touched.source && formik.errors.source ? /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-danger\",\n            children: [formik.errors.source, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 62\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" link to source \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \" if exists\",\n            name: \"sourceUrl\",\n            value: formik.values,\n            ...formik.getFieldProps(\"sourceUrl\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), formik.touched.sourceUrl && formik.errors.sourceUrl ? /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-danger\",\n            children: [formik.errors.sourceUrl, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 68\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n        defaultActiveKey: \"0\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n              as: Button,\n              variant: \"link\",\n              eventKey: \"3\",\n              children: \"General description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n            eventKey: \"3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"textarea\",\n                    rows: 2,\n                    name: \"description\",\n                    placeholder: \"The description will appear below the title\",\n                    value: formik.values,\n                    ...formik.getFieldProps(\"description\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 21\n                  }, this), formik.touched.description && formik.errors.description ? /*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"text-danger\",\n                    children: [formik.errors.description, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 80\n                  }, this) : \"\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"col-sm-2\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"prepTime\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"number\",\n                    min: 3,\n                    placeholder: \"time in minutes\",\n                    name: \"prepTimeMin\",\n                    value: formik.values,\n                    ...formik.getFieldProps(\"prepTimeMin\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 21\n                  }, this), formik.touched.prepTimeMin && formik.errors.prepTimeMin ? /*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"text-danger\",\n                    children: [formik.errors.prepTimeMin, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 80\n                  }, this) : \"\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  className: \"container w-75 m-auto\",\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: [/*#__PURE__*/_jsxDEV(Row, {\n                      className: \"mr-3\",\n                      children: \"diet type: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 289,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Row, {\n                      children: [diets.length && diets.map(diet => {\n                        return /*#__PURE__*/_jsxDEV(Form.Check, {\n                          type: \"checkbox\",\n                          label: diet.name,\n                          name: \"diet\",\n                          checked: diet.select,\n                          value: diet.id,\n                          onChange: e => {\n                            let checked = e.target.checked;\n                            setDiets(diets.map(item => {\n                              diet.select = checked;\n                              return item;\n                            }));\n                            formik.handleChange(e);\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 294,\n                          columnNumber: 31\n                        }, this);\n                      }), formik.touched.diet && formik.errors.diet ? /*#__PURE__*/_jsxDEV(\"small\", {\n                        className: \"text-danger\",\n                        children: [formik.errors.diet, \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 310,\n                        columnNumber: 70\n                      }, this) : \"\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: [/*#__PURE__*/_jsxDEV(Row, {\n                      className: \"mr-3\",\n                      children: \"category \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 314,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Row, {\n                      children: [categories.length && categories.map(category => {\n                        return /*#__PURE__*/_jsxDEV(Form.Check, {\n                          type: \"checkbox\",\n                          label: category.name,\n                          name: \"category\",\n                          checked: category.select,\n                          value: category.id,\n                          onChange: e => {\n                            let checked = e.target.checked;\n                            setCategories(categories.map(item => {\n                              category.select = checked;\n                              return item;\n                            }));\n                            formik.handleChange(e);\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 319,\n                          columnNumber: 31\n                        }, this);\n                      }), formik.touched.category && formik.errors.category ? /*#__PURE__*/_jsxDEV(\"small\", {\n                        className: \"text-danger\",\n                        children: [formik.errors.category, \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 337,\n                        columnNumber: 78\n                      }, this) : \"\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 315,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n              as: Button,\n              variant: \"link\",\n              eventKey: \"0\",\n              children: \"Ingredients\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n            eventKey: \"0\",\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [instructions.length > 0 && instructions.map((item, i) => {\n                var _units, _ingredients;\n\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex ingredints mb-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-sm-1\",\n                    children: item.quantity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-sm-3\",\n                    children: (_units = units[item.measureUnit - 1]) === null || _units === void 0 ? void 0 : _units.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-sm-3\",\n                    children: (_ingredients = ingredients[item.ingredient - 1]) === null || _ingredients === void 0 ? void 0 : _ingredients.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-sm-4\",\n                    children: item.note\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 361,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fas fa-trash text-sm\",\n                    onClick: () => deleteInstruction(i),\n                    children: \" \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 362,\n                    columnNumber: 23\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 21\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"small-5 mt-4\",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  className: \"col-sm-2\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"quantity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"number\",\n                    min: 1,\n                    name: \"quantity\",\n                    onChange: e => {\n                      changeIngredient(e);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"col-md-4\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"measurement unit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    onChange: e => changeIngredient(e),\n                    name: \"measureUnit\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"---choose \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 374,\n                      columnNumber: 23\n                    }, this), units.map((unit, i) => {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: unit.id,\n                        name: unit.name,\n                        children: unit.name\n                      }, i, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 377,\n                        columnNumber: 27\n                      }, this);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 373,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Ingredients\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    onChange: e => changeIngredient(e),\n                    name: \"ingredient\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"---choose \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 387,\n                      columnNumber: 23\n                    }, this), ingredients.length > 0 && ingredients.map((ingredient, i) => {\n                      return /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: ingredient.id,\n                          name: ingredient.name,\n                          children: ingredient.name\n                        }, i, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 391,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 386,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"md-6 mt-3\",\n                    onClick: e => addToList('ingredients'),\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 401,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => setAddIng(true),\n                    children: \" add new Ingredint\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 410,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 19\n                }, this), addIng && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"new-ing\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Ingredint name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 413,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    defailtValue: newIngredient,\n                    name: \"newingredient\",\n                    onChange: e => setNewIngredient(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 414,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => addIngtoDB(),\n                    children: \"add\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 417,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 30\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n              as: Button,\n              variant: \"link\",\n              eventKey: \"1\",\n              children: \"Preparation steps\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n            eventKey: \"1\",\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [guide.length > 0 && guide.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-sm-5\",\n                  children: item.number\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-sm-5\",\n                  children: item.instruction\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => deleteGuide(i),\n                  className: \"col-sm-1\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fas fa-trash text-sm \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 438,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 23\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"d-flex small-5\",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  className: \"col-md-10\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"instruction\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 444,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"input\",\n                    name: \"instruction\",\n                    onChange: e => changeGuide(e)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 445,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"col-md-2 m-auto\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"m-2 flex-grow-0\",\n                    onClick: () => addToList('guide'),\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 448,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"text-left\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: editMode ? \"Edit Recipe\" : \"Add Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewRecipeForm, \"TOP/1XSlfVA9WtS5uewh+maYgtU=\", false, function () {\n  return [useHistory, useFormik];\n});\n\n_c = NewRecipeForm;\nexport default NewRecipeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewRecipeForm\");","map":{"version":3,"sources":["C:/Users/User/Documents/projects/fullstack-project/client/src/components/forms/NewRecipeForm.jsx"],"names":["useEffect","useState","Yup","Accordion","Card","Button","Form","Col","Row","Table","useForm","validate","getData","insertDataToDB","ingredientsOfRecipe","uploadRecipe","appentIngredient","getRecipeDetails","updateRecipe","useHistory","ErrorMessages","useFormik","Cookies","require","axios","NewRecipeForm","match","recipeId","mode","ingredients","setIngredients","image","setImage","units","setUnits","instructions","setInstructions","guide","setGuide","diets","setDiets","recipeIngredient","setRecipeIngredient","recipeGuide","setRecipeGuide","editMode","setEditMode","newIngredient","setNewIngredient","history","addIng","setAddIng","categories","setCategories","formik","initialValues","name","isPrivate","source","sourceUrl","diet","category","prepTimeMin","description","validationSchema","object","string","min","max","array","required","onSubmit","values","data","FormData","userId","id","append","get","JSON","stringify","response","update","submit","deleteInstruction","index","splice","deleteGuide","checkThefilds","obj","Object","keys","length","prop","addToList","value","alert","insertDataToForm","recipe","console","log","images","url","arr","x","push","categoryId","dietId","changeIngredient","e","target","changeGuide","addIngtoDB","ing","instruc","formRecipe","fetchIngredient","fetchDiets","fetchUnits","fetchCategories","map","item","select","includes","cat","handleSubmit","getFieldProps","touched","errors","handleChange","files","checked","i","quantity","measureUnit","ingredient","note","unit","number","instruction"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport * as Yup from 'yup'\r\nimport { Accordion, Card, Button, Form, Col, Row, Table, } from \"react-bootstrap\";\r\nimport useForm from \"../utills/useForm\";\r\nimport validate from \"../utills/validateInfo\";\r\nimport { getData, insertDataToDB, ingredientsOfRecipe, uploadRecipe, appentIngredient, getRecipeDetails, updateRecipe } from \"../DAL/api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ErrorMessages from \"../utills/ErrorMessages\";\r\nimport { useFormik } from \"formik\";\r\nconst Cookies = require('js-cookie')\r\nconst axios = require('axios')\r\n\r\n\r\nfunction NewRecipeForm({ match, recipeId, mode }) {\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const [image, setImage] = useState(null)\r\n  const [units, setUnits] = useState([]);\r\n  const [instructions, setInstructions] = useState([]);\r\n  const [guide, setGuide] = useState([]);\r\n  const [diets, setDiets] = useState([]);\r\n  const [recipeIngredient, setRecipeIngredient] = useState({})\r\n  const [recipeGuide, setRecipeGuide] = useState({})\r\n  const [editMode, setEditMode] = useState(false)\r\n  const [newIngredient, setNewIngredient] = useState('')\r\n  const history = useHistory()\r\n  const [addIng, setAddIng] = useState(false)\r\n  const [categories, setCategories] = useState([]);\r\n  // const { handleSubmit, handleChange, values, errors } = useForm(submit, validate);\r\n\r\n\r\n\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      isPrivate: \"\",\r\n      source: \"\",\r\n      sourceUrl: \"\",\r\n      diet: [],\r\n      category: [],\r\n      prepTimeMin: '',\r\n      description: '',\r\n      image: ''\r\n    },\r\n\r\n    validationSchema: Yup.object({\r\n      name: Yup.string()\r\n        .min(3, '')\r\n        .max(15),\r\n      isPrivate: Yup.string().min(1),\r\n      // image: Yup.string().required(\"required\"),\r\n      diet: Yup.array().min(2, 'choose at least 2 types'),\r\n      category: Yup.array().min(2, 'choose at least 2 types'),\r\n      prepTimeMin: Yup.string(),\r\n      description: Yup.string().min(3).max(30).required('3'),\r\n      source: Yup.string().min(3, 'min 3 charachters').max(40, 'must be 20 charachters or less').required('required')\r\n    }),\r\n    onSubmit: async (values) => {\r\n      const data = new FormData();\r\n      formik.values.guide = guide;\r\n      formik.values.userId = 95;\r\n      formik.values.instructions = instructions\r\n      if (recipeId) formik.values.id = recipeId\r\n      data.append(\"image\", image)\r\n      data.append(\"user\", Cookies.get('user'))\r\n      data.append(\"recipe\", JSON.stringify(formik.values))\r\n      if (!recipeId) {\r\n        const response = await uploadRecipe(data)\r\n      } else {\r\n        const update = await updateRecipe(data)\r\n      }\r\n      submit()\r\n    },\r\n\r\n  })\r\n  const deleteInstruction = (index) => {\r\n    instructions.splice(index, 1);\r\n    setInstructions([...instructions]);\r\n  };\r\n\r\n  const deleteGuide = (index) => {\r\n    guide.splice(index, 1);\r\n    setGuide([...guide]);\r\n  };\r\n  const checkThefilds = (obj) => {\r\n    if (Object.keys(obj).length === 0 || Object.keys(obj).length < 3) return false\r\n    for (const prop in obj) {\r\n      if (!obj[prop]) return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  const addToList = (value) => {\r\n    if (value === 'ingredients') {\r\n      if (checkThefilds(recipeIngredient)) {\r\n        setInstructions([...instructions, recipeIngredient])\r\n      } else {\r\n        alert('please check the fields')\r\n      }\r\n    }\r\n    if (value === 'guide') setGuide([...guide, recipeGuide])\r\n    else return\r\n  }\r\n\r\n\r\n  const insertDataToForm = (recipe) => {\r\n    formik.values.name = recipe.recipe.name\r\n    formik.values.source = recipe.recipe.source\r\n    formik.values.sourceUrl = recipe.recipe.sourceUrl\r\n    formik.values.description = recipe.recipe.description\r\n    formik.values.isPrivate = !!recipe.recipe.isPrivate\r\n    formik.values.prepTimeMin = recipe.recipe.prepTimeMin\r\n    console.log(recipe.category);\r\n    setImage(recipe.images[0]?.url)\r\n    console.log(recipe.ingredients);\r\n    setGuide(recipe.instructions)\r\n    const arr = []\r\n    for (let x of recipe.category) {\r\n      console.log(x);\r\n      arr.push(+(x.categoryId))\r\n    }\r\n    formik.values.category = arr\r\n    const diets = []\r\n    for (let x of recipe.diet) {\r\n\r\n      diets.push(+(x.dietId))\r\n    }\r\n    formik.values.diet = diets;\r\n  }\r\n\r\n  async function submit() {\r\n    // if (checkErrors(errors)) {\r\n    const data = new FormData();\r\n    formik.values.guide = guide;\r\n    formik.values.instructions = instructions\r\n    if (recipeId) formik.values.id = recipeId\r\n    data.append(\"image\", image)\r\n    data.append(\"user\", Cookies.get('user'))\r\n    data.append(\"recipe\", JSON.stringify(formik.values))\r\n    if (!recipeId) {\r\n      const response = await uploadRecipe(data)\r\n    } else {\r\n      const update = await updateRecipe(data)\r\n    }\r\n  }\r\n  const changeIngredient = (e) => {\r\n    const { name, value } = e.target;\r\n       setRecipeIngredient({ ...recipeIngredient, [name]: value })\r\n  }\r\n\r\n  const changeGuide = (e) => {\r\n    const { name, value } = e.target;\r\n    setRecipeGuide({ ...recipeGuide, [name]: value })\r\n  }\r\n  \r\n\r\n  const addIngtoDB = async () => {\r\n    for (let ing of ingredients) {\r\n      if (ing.name === newIngredient) alert('already exist')\r\n    }\r\n    const response = await appentIngredient(newIngredient);\r\n    setAddIng(false)\r\n  }\r\n\r\n  useEffect(async () => {\r\n    if (recipeId) {\r\n      setEditMode(true)\r\n      const instruc = await ingredientsOfRecipe(recipeId)\r\n      const formRecipe = await getRecipeDetails(recipeId)\r\n      insertDataToForm(formRecipe)\r\n      console.log(\"instruc\", formRecipe);\r\n      setInstructions(instruc)\r\n    }\r\n    if (!Cookies.get('user')) history.push('/login')\r\n    const fetchIngredient = await getData('ingredients')\r\n    const fetchDiets = await getData('diets')\r\n    const fetchUnits = await getData('units')\r\n    const fetchCategories = await getData('categories')\r\n    setDiets(fetchDiets.map(item => {\r\n      return {\r\n        select: formik.values.diet.includes(item.id),\r\n        name: item.name,\r\n        id: item.id\r\n      }\r\n    }));\r\n    setUnits(fetchUnits);\r\n    setIngredients(fetchIngredient);\r\n    setCategories(fetchCategories.map(cat => {\r\n      console.log(cat);\r\n      return {\r\n        select: formik.values.category.includes(cat.id),\r\n        name: cat.name,\r\n        id: cat.id\r\n      }\r\n    }));\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <Form onSubmit={formik.handleSubmit} encType=\"multipart/form-data\" >\r\n      <div className=\"form-inner\">\r\n        <h1 className='text-center'>Adding new recipe</h1>\r\n        <Row className=\"container\">\r\n          <Col className=\"col-md-3\">\r\n            <Form.Label>name </Form.Label>\r\n            <Form.Control type=\"text\" name=\"name\" value={formik.values}{...formik.getFieldProps(\"name\")} />\r\n            {formik.touched.name && formik.errors.name ? <small className='text-danger'>{formik.errors.name} </small> : \"\"}\r\n          </Col>\r\n          <Col className=\"col-md-3 mr-4\">\r\n            <Row>\r\n              <Form.Label as=\"Row\" column sm={10}>\r\n                view permition\r\n              </Form.Label>\r\n            </Row>\r\n            <Row sm={10}>\r\n              <Form.Check type=\"radio\" label=\"public\" name=\"isPrivate\"\r\n                value=\"1\" onChange={formik.handleChange}\r\n              />\r\n              <Form.Check type=\"radio\" label=\"private\" name=\"isPrivate\"\r\n                value=\"0\" onChange={formik.handleChange}\r\n              />\r\n              {formik.touched.isPrivate && formik.errors.isPrivate ? <small className='text-danger'>{formik.errors.isPrivate} </small> : \"\"}\r\n            </Row>\r\n          </Col>\r\n          <Col>\r\n            <Form.File label=\"main pic\" name=\"image\" multiple DefaultValue={formik.values}\r\n              onChange={(e) => setImage(e.target.files[0])}\r\n            />\r\n            {formik.touched.image && formik.errors.image ? <small className='text-danger'>{formik.errors.image} </small> : \"\"}\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"container-fluid\">\r\n          <Col>\r\n            <Form.Label> source</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"recipe source\" name=\"source\" value={formik.values}{...formik.getFieldProps(\"source\")}\r\n            />\r\n            {formik.touched.source && formik.errors.source ? <small className='text-danger'>{formik.errors.source} </small> : \"\"}\r\n\r\n          </Col>\r\n          <Col>\r\n            <Form.Label> link to source </Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\" if exists\" name=\"sourceUrl\" value={formik.values} {...formik.getFieldProps(\"sourceUrl\")}\r\n            />\r\n            {formik.touched.sourceUrl && formik.errors.sourceUrl ? <small className='text-danger'>{formik.errors.sourceUrl} </small> : \"\"}\r\n          </Col>\r\n        </Row>\r\n        <Accordion defaultActiveKey=\"0\">\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"3\">\r\n                General description\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"3\">\r\n              <div>\r\n                <Row>\r\n                  <Col>\r\n                    <Form.Label>\r\n                      description\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      rows={2}\r\n                      name=\"description\"\r\n                      placeholder='The description will appear below the title'\r\n                      value={formik.values}\r\n                      {...formik.getFieldProps(\"description\")}\r\n                    />\r\n                    {formik.touched.description && formik.errors.description ? <small className='text-danger'>{formik.errors.description} </small> : \"\"}\r\n                  </Col>\r\n                  <Col className='col-sm-2'>\r\n                    <Form.Label>\r\n                      prepTime\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      min={3}\r\n                      placeholder='time in minutes'\r\n                      name=\"prepTimeMin\"\r\n                      value={formik.values} {...formik.getFieldProps(\"prepTimeMin\")}\r\n                    />\r\n                    {formik.touched.prepTimeMin && formik.errors.prepTimeMin ? <small className='text-danger'>{formik.errors.prepTimeMin} </small> : \"\"}\r\n\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Row className=\"container w-75 m-auto\">\r\n                    <Col>\r\n                      <Row className=\"mr-3\">diet type: </Row>\r\n                      <Row>\r\n                        {diets.length &&\r\n                          diets.map((diet) => {\r\n                            return (\r\n                              <Form.Check\r\n                                type=\"checkbox\"\r\n                                label={diet.name}\r\n                                name='diet'\r\n                                checked={diet.select}\r\n                                value={diet.id}\r\n                                onChange={(e) => {\r\n                                  let checked = e.target.checked;\r\n                                  setDiets(diets.map(item => {\r\n                                    diet.select = checked\r\n                                    return item\r\n                                  }))\r\n                                  formik.handleChange(e);\r\n                                }} />\r\n                            );\r\n                          })}\r\n                        {formik.touched.diet && formik.errors.diet ? <small className='text-danger'>{formik.errors.diet} </small> : \"\"}\r\n                      </Row>\r\n                    </Col>\r\n                    <Col>\r\n                      <Row className=\"mr-3\">category </Row>\r\n                      <Row>\r\n                        {categories.length &&\r\n                          categories.map((category) => {\r\n                            return (\r\n                              <Form.Check\r\n                                type=\"checkbox\"\r\n                                label={category.name}\r\n                                name='category'\r\n                                checked={category.select}\r\n                                value={category.id}\r\n                                onChange={(e) => {\r\n                                  let checked = e.target.checked;\r\n                                  setCategories(categories.map(item => {\r\n                                    category.select = checked\r\n                                    return item\r\n                                  }))\r\n                                  formik.handleChange(e);\r\n                                }}\r\n                              />\r\n\r\n                            );\r\n                          })}\r\n                        {formik.touched.category && formik.errors.category ? <small className='text-danger'>{formik.errors.category} </small> : \"\"}\r\n                      </Row>\r\n\r\n                    </Col>\r\n                  </Row>\r\n                </Row>\r\n              </div>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                Ingredients\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"0\">\r\n              <>\r\n                {instructions.length > 0 &&\r\n\r\n                  instructions.map((item, i) => (\r\n                    <div key={i} className='d-flex ingredints mb-1'>\r\n                      <div className='col-sm-1'>{item.quantity}</div>\r\n                      <div className='col-sm-3'>{units[item.measureUnit - 1]?.name}</div>\r\n                      <div className='col-sm-3'>{ingredients[item.ingredient - 1]?.name}</div>\r\n                      <div className='col-sm-4'>{item.note}</div>\r\n                      <i class=\"fas fa-trash text-sm\" onClick={() => deleteInstruction(i)}> </i>\r\n                    </div>\r\n                  ))}\r\n\r\n                <Row className=\"small-5 mt-4\">\r\n                  <Col className=\"col-sm-2\">\r\n                    <Form.Label>quantity</Form.Label>\r\n                    <Form.Control type=\"number\" min={1} name='quantity' onChange={(e) => { changeIngredient(e) }} />\r\n                  </Col>\r\n                  <Col className=\"col-md-4\">\r\n                    <Form.Label>measurement unit</Form.Label>\r\n                    <select onChange={(e) => changeIngredient(e)} name='measureUnit'>\r\n                      <option>---choose </option>\r\n                      {units.map((unit, i) => {\r\n                        return (\r\n                          <option key={i} value={unit.id} name={unit.name}>\r\n                            {unit.name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </select>\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Label>Ingredients</Form.Label>\r\n                    <select onChange={(e) => changeIngredient(e)} name='ingredient'>\r\n                      <option>---choose </option>\r\n                      {ingredients.length > 0 && ingredients.map((ingredient, i) => {\r\n                        return (\r\n                          <>\r\n                            <option key={i} value={ingredient.id} name={ingredient.name}>\r\n                              {ingredient.name}\r\n                            </option>\r\n                          </>\r\n                        );\r\n                      })}\r\n                    </select>\r\n\r\n                  </Col>\r\n                  <Col >\r\n                    <Button\r\n                      className=\"md-6 mt-3\"\r\n                      onClick={(e) => addToList('ingredients')}>\r\n                      Save\r\n                    </Button>\r\n                  </Col>\r\n\r\n                  <Row >\r\n\r\n                    <Button onClick={() => setAddIng(true)}> add new Ingredint</Button>\r\n                  </Row>\r\n                  {addIng && <div className='new-ing'>\r\n                    <Form.Label>Ingredint name</Form.Label>\r\n                    <Form.Control type=\"text\"\r\n                      defailtValue={newIngredient}\r\n                      name=\"newingredient\" onChange={(e) => setNewIngredient(e.target.value)} />\r\n                    <Button onClick={() => addIngtoDB()}>add</Button>\r\n                  </div>}\r\n                </Row>\r\n              </>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                Preparation steps\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"1\">\r\n              <>\r\n                {guide.length > 0 &&\r\n                  guide.map((item, i) => (\r\n                    <div key={i} className='d-flex'>\r\n                      <div className='col-sm-5'>{item.number}</div>\r\n                      <div className='col-sm-5'>{item.instruction}</div>\r\n                      <button onClick={() => deleteGuide(i)}\r\n                        className='col-sm-1'>\r\n                        <i class=\"fas fa-trash text-sm \"></i>\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n                <Row className=\"d-flex small-5\">\r\n                  <Col className=\"col-md-10\">\r\n                    <Form.Label>instruction</Form.Label>\r\n                    <Form.Control as=\"input\" name='instruction' onChange={(e) => changeGuide(e)} />\r\n                  </Col>\r\n                  <Col className=\"col-md-2 m-auto\">\r\n                    <Button\r\n                      className=\"m-2 flex-grow-0\"\r\n                      onClick={() => addToList('guide')}\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n        </Accordion>\r\n        <Row className=\"text-left\">\r\n          <Button type=\"submit\"  >\r\n            {editMode ? \"Edit Recipe\" : \"Add Recipe\"}\r\n          </Button>\r\n        </Row>\r\n      </div>\r\n    </Form >\r\n  );\r\n}\r\nexport default NewRecipeForm;\r\n"]},"metadata":{},"sourceType":"module"}