{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\projects\\\\fullstack-project\\\\client\\\\src\\\\components\\\\forms\\\\NewRecipeForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Accordion, Card, Button, Form, Col, Row, Table } from \"react-bootstrap\";\nimport useForm from \"../utills/useForm\";\nimport validate from \"../utills/validateInfo\";\nimport { getData, insertDataToDB } from \"../DAL/api\";\nimport ErrorMessages from \"../utills/ErrorMessages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cookies = require('js-cookie');\n\nconst axios = require('axios');\n\nfunction NewRecipeForm(props) {\n  _s();\n\n  const [ingredients, setIngredients] = useState([]);\n  const [image, setImage] = useState(null);\n  const [units, setUnits] = useState([]);\n  const [instructions, setInstructions] = useState([]);\n  const [guide, setGuide] = useState([]);\n  const [diets, setDiets] = useState([]);\n  const [recipeIngredient, setRecipeIngredient] = useState({});\n  const [recipeGuide, setRecipeGuide] = useState({});\n  const [editMode, setEditMode] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const {\n    handleSubmit,\n    handleChange,\n    values,\n    errors\n  } = useForm(submit, validate);\n\n  const deleteInstruction = index => {\n    instructions.splice(index, 1);\n    setInstructions([...instructions]);\n  };\n\n  const deleteGuide = index => {\n    guide.splice(index, 1);\n    setGuide([...guide]);\n  };\n\n  const checkThefilds = obj => {\n    if (Object.keys(obj).length === 0 || Object.keys(obj).length < 3) return false;\n\n    for (const prop in obj) {\n      if (!obj[prop]) return false;\n    }\n\n    return true;\n  };\n\n  const addToList = value => {\n    if (value === 'ingredients') {\n      if (checkThefilds(recipeIngredient)) {\n        setInstructions([...instructions, recipeIngredient]);\n      } else {\n        alert('please check the fields');\n      }\n    }\n\n    if (value === 'guide') setGuide([...guide, recipeGuide]);else return;\n  };\n\n  const checkErrors = obj => {\n    console.log(obj);\n\n    for (let prop in obj) {\n      if (obj[prop].length > 0) return false;\n    }\n\n    return true;\n  };\n\n  async function submit() {\n    if (checkErrors(errors)) {\n      values.userId = Cookies.get(\"user\");\n      const data = new FormData();\n      data.append(\"image\", image);\n      data.append(\"user\", Cookies.get('user'));\n      console.log(123);\n      const response = await axios.post('http://localhost:3200/recipes/add', {\n        values,\n        guide,\n        instructions\n      });\n      data.append('recipeId', response.data.id);\n      console.log(response.data.id);\n      if (response.data.id) await axios.post('http://localhost:3200/recipes/upload', data);\n    }\n  }\n\n  const changeIngredient = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setRecipeIngredient({ ...recipeIngredient,\n      [name]: value\n    });\n  };\n\n  const changeGuide = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setRecipeGuide({ ...recipeGuide,\n      [name]: value\n    });\n  };\n\n  useEffect(async () => {\n    const fetchIngredient = await getData('ingredients');\n    setIngredients(fetchIngredient);\n    const fetchDiets = await getData('diets');\n    setDiets(fetchDiets);\n    const fetchUnits = await getData('units');\n    const fetchCategories = await getData('categories');\n    const fetchInstructions = await getData('instructions');\n    console.log(fetchInstructions);\n    setUnits(fetchUnits);\n    setCategories(fetchCategories);\n    const getInstructions = await getData('instructions', 7);\n    setGuide(getInstructions);\n    const getImage = await getData('images', 35);\n    setImage(getImage.url);\n    console.log(getImage);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    encType: \"multipart/form-data\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Adding new recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          className: \"col-md-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"name \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"name\",\n            value: values.name,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), errors.name && /*#__PURE__*/_jsxDEV(ErrorMessages, {\n            errors: errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"col-md-3 mr-4\",\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Form.Label, {\n              as: \"Row\",\n              column: true,\n              sm: 10,\n              children: \"view permition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            sm: 10,\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"radio\",\n              label: \"public\",\n              defaultValue: false,\n              name: \"isPrivate\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"radio\",\n              value: true,\n              label: \"private\",\n              name: \"isPrivate\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), errors.isPrivate && /*#__PURE__*/_jsxDEV(ErrorMessages, {\n              errors: errors.isPrivate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 36\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.File, {\n            label: \"main pic\",\n            name: \"image\",\n            multiple: true,\n            DefaultValue: image,\n            onChange: e => setImage(e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"container-fluid\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \" source\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), errors.source && /*#__PURE__*/_jsxDEV(ErrorMessages, {\n          errors: errors.source\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"recipe source\",\n          name: \"source\",\n          value: values.source,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \" link to source \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \" if exists\",\n          name: \"sourceUrl\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n        defaultActiveKey: \"0\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n              as: Button,\n              variant: \"link\",\n              eventKey: \"3\",\n              children: \"General description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n            eventKey: \"3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3 container-fluid\",\n                controlId: \"exampleForm.ControlTextarea1\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"The description will appear below the title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"textarea\",\n                  rows: 2,\n                  name: \"description\",\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"container w-75 m-auto\",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: [/*#__PURE__*/_jsxDEV(Row, {\n                    className: \"mr-3\",\n                    children: \"diet type:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    children: [diets.length && diets.map(diet => {\n                      return /*#__PURE__*/_jsxDEV(Form.Check, {\n                        type: \"checkbox\",\n                        label: diet.name,\n                        name: \"diet\",\n                        value: diet.id,\n                        onChange: handleChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 192,\n                        columnNumber: 29\n                      }, this);\n                    }), errors.diet && /*#__PURE__*/_jsxDEV(ErrorMessages, {\n                      errors: errors.diet\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 39\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [/*#__PURE__*/_jsxDEV(Row, {\n                    className: \"mr-3\",\n                    children: \"Suitable for category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    children: [categories.length && categories.map(category => {\n                      return /*#__PURE__*/_jsxDEV(Form.Check, {\n                        type: \"checkbox\",\n                        label: category.name,\n                        name: \"category\",\n                        value: category.id,\n                        onChange: handleChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 209,\n                        columnNumber: 29\n                      }, this);\n                    }), errors.category && /*#__PURE__*/_jsxDEV(ErrorMessages, {\n                      errors: errors.category\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 43\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n              as: Button,\n              variant: \"link\",\n              eventKey: \"0\",\n              children: \"Ingredients\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n            eventKey: \"0\",\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [instructions.length > 0 && instructions.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-sm-1\",\n                  children: item.quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-sm-3\",\n                  children: units[item.measureUnit - 1].name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-sm-3\",\n                  children: ingredients[item.ingredient - 1].name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-sm-4\",\n                  children: item.note\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fas fa-trash text-sm\",\n                  onClick: () => deleteInstruction(i),\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 23\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"p-5\",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  className: \"col-sm-2\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"quantity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"number\",\n                    min: 1,\n                    name: \"quantity\",\n                    onChange: e => {\n                      changeIngredient(e);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"col-md-4\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"measurement unit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    onChange: e => changeIngredient(e),\n                    name: \"measureUnit\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"---choose \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 23\n                    }, this), units.map((unit, i) => {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: unit.id,\n                        name: unit.name,\n                        children: unit.name\n                      }, i, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 256,\n                        columnNumber: 27\n                      }, this);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Ingredients\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    onChange: e => changeIngredient(e),\n                    name: \"ingredient\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"---choose \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 23\n                    }, this), ingredients.length > 0 && ingredients.map((ingredient, i) => {\n                      return /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: ingredient.id,\n                          name: ingredient.name,\n                          children: ingredient.name\n                        }, i, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 271,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"col-md-2\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"notes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"input\",\n                    name: \"note\",\n                    onChange: e => {\n                      changeIngredient(e);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      className: \"md-6 mt-3\",\n                      onClick: e => addToList('ingredients'),\n                      children: \"Save\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 285,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: () => setInstructions([]),\n                      className: \"md-6 mt-3 ml-3\",\n                      children: \"Clear\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n              as: Button,\n              variant: \"link\",\n              eventKey: \"1\",\n              children: \"Preparation steps\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n            eventKey: \"1\",\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [guide.length > 0 && guide.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-sm-5\",\n                  children: item.number\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-sm-5\",\n                  children: item.instruction\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => deleteGuide(i),\n                  className: \"col-sm-1\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fas fa-trash text-sm \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 23\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"d-flex p-5\",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  className: \"col-md-2\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"#\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"input\",\n                    name: \"number\",\n                    onChange: e => changeGuide(e)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"col-md-4\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"instruction\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"input\",\n                    name: \"instruction\",\n                    onChange: e => changeGuide(e)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"col-md-2\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"m-2 flex-grow-0\",\n                    onClick: () => addToList('guide'),\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"text-left\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: \"m-3\",\n          children: \"Add Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewRecipeForm, \"urs25W7F1LfSaEe3FWIa+pMEM34=\", false, function () {\n  return [useForm];\n});\n\n_c = NewRecipeForm;\nexport default NewRecipeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewRecipeForm\");","map":{"version":3,"sources":["C:/Users/User/Documents/projects/fullstack-project/client/src/components/forms/NewRecipeForm.jsx"],"names":["useEffect","useState","Accordion","Card","Button","Form","Col","Row","Table","useForm","validate","getData","insertDataToDB","ErrorMessages","Cookies","require","axios","NewRecipeForm","props","ingredients","setIngredients","image","setImage","units","setUnits","instructions","setInstructions","guide","setGuide","diets","setDiets","recipeIngredient","setRecipeIngredient","recipeGuide","setRecipeGuide","editMode","setEditMode","categories","setCategories","handleSubmit","handleChange","values","errors","submit","deleteInstruction","index","splice","deleteGuide","checkThefilds","obj","Object","keys","length","prop","addToList","value","alert","checkErrors","console","log","userId","get","data","FormData","append","response","post","id","changeIngredient","e","name","target","changeGuide","fetchIngredient","fetchDiets","fetchUnits","fetchCategories","fetchInstructions","getInstructions","getImage","url","isPrivate","files","source","map","diet","category","item","i","quantity","measureUnit","ingredient","note","unit","number","instruction"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Accordion, Card, Button, Form, Col, Row, Table, } from \"react-bootstrap\";\r\nimport useForm from \"../utills/useForm\";\r\nimport validate from \"../utills/validateInfo\";\r\nimport { getData, insertDataToDB } from \"../DAL/api\";\r\nimport ErrorMessages from \"../utills/ErrorMessages\";\r\nconst Cookies = require('js-cookie')\r\nconst axios = require('axios')\r\nfunction NewRecipeForm(props) {\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const [image, setImage] = useState(null)\r\n  const [units, setUnits] = useState([]);\r\n  const [instructions, setInstructions] = useState([]);\r\n  const [guide, setGuide] = useState([]);\r\n  const [diets, setDiets] = useState([]);\r\n  const [recipeIngredient, setRecipeIngredient] = useState({})\r\n  const [recipeGuide, setRecipeGuide] = useState({})\r\n  const [editMode, setEditMode] = useState(false)\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const { handleSubmit, handleChange, values, errors } = useForm(submit, validate);\r\n\r\n  const deleteInstruction = (index) => {\r\n    instructions.splice(index, 1);\r\n    setInstructions([...instructions]);\r\n  };\r\n\r\n  const deleteGuide = (index) => {\r\n    guide.splice(index, 1);\r\n    setGuide([...guide]);\r\n  };\r\n  const checkThefilds = (obj) => {\r\n    if (Object.keys(obj).length === 0 || Object.keys(obj).length < 3) return false\r\n    for (const prop in obj) {\r\n      if (!obj[prop]) return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  const addToList = (value) => {\r\n    if (value === 'ingredients') {\r\n      if (checkThefilds(recipeIngredient)) {\r\n        setInstructions([...instructions, recipeIngredient])\r\n      } else {\r\n        alert('please check the fields')\r\n      }\r\n    }\r\n    if (value === 'guide') setGuide([...guide, recipeGuide])\r\n    else return\r\n  }\r\n  const checkErrors = (obj) => {\r\n    console.log(obj);\r\n    for (let prop in obj) {\r\n      if (obj[prop].length > 0) return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  async function submit() {\r\n    if (checkErrors(errors)) {\r\n      values.userId = Cookies.get(\"user\")\r\n      const data = new FormData();\r\n      data.append(\"image\", image)\r\n      data.append(\"user\", Cookies.get('user'))\r\n      console.log(123);\r\n      const response = await axios.post('http://localhost:3200/recipes/add', { values, guide, instructions })\r\n      data.append('recipeId', response.data.id)\r\n      console.log(response.data.id);\r\n      if (response.data.id) await axios.post('http://localhost:3200/recipes/upload', data)\r\n    }\r\n  }\r\n  const changeIngredient = (e) => {\r\n    const { name, value } = e.target;\r\n    setRecipeIngredient({ ...recipeIngredient, [name]: value })\r\n  }\r\n\r\n  const changeGuide = (e) => {\r\n    const { name, value } = e.target;\r\n    setRecipeGuide({ ...recipeGuide, [name]: value })\r\n  }\r\n\r\n  useEffect(async () => {\r\n    const fetchIngredient = await getData('ingredients')\r\n    setIngredients(fetchIngredient);\r\n    const fetchDiets = await getData('diets')\r\n    setDiets(fetchDiets);\r\n    const fetchUnits = await getData('units')\r\n    const fetchCategories = await getData('categories')\r\n    const fetchInstructions = await getData('instructions')\r\n    console.log(fetchInstructions);\r\n    setUnits(fetchUnits);\r\n    setCategories(fetchCategories);\r\n    const getInstructions = await getData('instructions', 7)\r\n    setGuide(getInstructions)\r\n    const getImage = await getData('images', 35)\r\n      setImage(getImage.url)\r\n      console.log(getImage);\r\n  }, []);\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit} encType=\"multipart/form-data\" >\r\n      <div className=\"form-inner\">\r\n        <h1>Adding new recipe</h1>\r\n        <Row className=\"container\">\r\n          <Col className=\"col-md-3\">\r\n            <Form.Label>name </Form.Label>\r\n            <Form.Control type=\"text\" name=\"name\" value={values.name} onChange={handleChange} />\r\n            {errors.name && <ErrorMessages errors={errors.name} />}\r\n          </Col>\r\n          <Col className=\"col-md-3 mr-4\">\r\n            <Row>\r\n              <Form.Label as=\"Row\" column sm={10}>\r\n                view permition\r\n              </Form.Label>\r\n            </Row>\r\n            <Row sm={10}>\r\n              <Form.Check\r\n                type=\"radio\"\r\n                label=\"public\"\r\n                defaultValue={false}\r\n                name=\"isPrivate\"\r\n                onChange={handleChange}\r\n              />\r\n              <Form.Check\r\n                type=\"radio\"\r\n                value={true}\r\n                label=\"private\"\r\n                name=\"isPrivate\"\r\n                onChange={handleChange}\r\n              />\r\n              {errors.isPrivate && <ErrorMessages errors={errors.isPrivate} />}\r\n            </Row>\r\n          </Col>\r\n          <Col>\r\n            <Form.File\r\n              label=\"main pic\"\r\n              name=\"image\"\r\n              multiple\r\n              DefaultValue={image}\r\n              onChange={(e) => setImage(e.target.files[0])}\r\n            />\r\n            {/* {errors.image && <ErrorMessages errors={errors.image} />} */}\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"container-fluid\">\r\n          <Form.Label> source</Form.Label>\r\n          {errors.source && <ErrorMessages errors={errors.source} />}\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"recipe source\"\r\n            name=\"source\"\r\n            value={values.source}\r\n            onChange={handleChange}\r\n          />\r\n          <Form.Label> link to source </Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\" if exists\"\r\n            name=\"sourceUrl\"\r\n            onChange={handleChange}\r\n          />\r\n        </Row>\r\n        <Accordion defaultActiveKey=\"0\">\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"3\">\r\n                General description\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"3\">\r\n              <div>\r\n                <Form.Group\r\n                  className=\"mb-3 container-fluid\"\r\n                  controlId=\"exampleForm.ControlTextarea1\">\r\n                  <Form.Label>\r\n                    The description will appear below the title\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows={2}\r\n                    name=\"description\"\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <Row className=\"container w-75 m-auto\">\r\n                  <Col>\r\n                    <Row className=\"mr-3\">diet type:</Row>\r\n                    <Row>\r\n                      {diets.length &&\r\n                        diets.map((diet) => {\r\n                          return (\r\n                            <Form.Check\r\n                              type=\"checkbox\"\r\n                              label={diet.name}\r\n                              name='diet'\r\n                              value={diet.id}\r\n                              onChange={handleChange} />\r\n                          );\r\n                        })}\r\n                      {errors.diet && <ErrorMessages errors={errors.diet} />}\r\n                    </Row>\r\n                  </Col>\r\n                  <Col>\r\n                    <Row className=\"mr-3\">Suitable for category</Row>\r\n                    <Row>\r\n                      {categories.length &&\r\n                        categories.map((category) => {\r\n                          return (\r\n                            <Form.Check\r\n                              type=\"checkbox\"\r\n                              label={category.name}\r\n                              name='category'\r\n                              value={category.id}\r\n                              onChange={handleChange}\r\n                            />\r\n                          );\r\n                        })}\r\n                      {errors.category && <ErrorMessages errors={errors.category} />}\r\n                    </Row>\r\n\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                Ingredients\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"0\">\r\n              <>\r\n                {instructions.length > 0 &&\r\n                  instructions.map((item, i) => (\r\n                    <div key={i} className='d-flex'>\r\n                      <div className='col-sm-1'>{item.quantity}</div>\r\n                      <div className='col-sm-3'>{units[item.measureUnit - 1].name}</div>\r\n                      <div className='col-sm-3'>{ingredients[item.ingredient - 1].name}</div>\r\n                      <div className='col-sm-4'>{item.note}</div>\r\n                      <i class=\"fas fa-trash text-sm\" onClick={() => deleteInstruction(i)}> </i>\r\n                    </div>\r\n                  ))}\r\n\r\n                <Row className=\"p-5\">\r\n                  <Col className=\"col-sm-2\">\r\n                    <Form.Label>quantity</Form.Label>\r\n                    <Form.Control type=\"number\" min={1} name='quantity' onChange={(e) => { changeIngredient(e) }} />\r\n                  </Col>\r\n                  <Col className=\"col-md-4\">\r\n                    <Form.Label>measurement unit</Form.Label>\r\n                    <select onChange={(e) => changeIngredient(e)} name='measureUnit'>\r\n                      <option>---choose </option>\r\n                      {units.map((unit, i) => {\r\n                        return (\r\n                          <option key={i} value={unit.id} name={unit.name}>\r\n                            {unit.name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </select>\r\n                  </Col>\r\n\r\n                  <Col>\r\n                    <Form.Label>Ingredients</Form.Label>\r\n                    <select onChange={(e) => changeIngredient(e)} name='ingredient'>\r\n                      <option>---choose </option>\r\n                      {ingredients.length > 0 && ingredients.map((ingredient, i) => {\r\n                        return (\r\n                          <>\r\n                            <option key={i} value={ingredient.id} name={ingredient.name}>\r\n                              {ingredient.name}\r\n                            </option>\r\n                          </>\r\n                        );\r\n                      })}\r\n                    </select>\r\n                  </Col>\r\n                  <Col className=\"col-md-2\">\r\n                    <Form.Label>notes</Form.Label>\r\n                    <Form.Control as=\"input\" name='note' onChange={(e) => { changeIngredient(e) }} />\r\n                  </Col>\r\n                  <Row >\r\n                    <Col >\r\n                      <Button\r\n                        className=\"md-6 mt-3\"\r\n                        onClick={(e) => addToList('ingredients')}>\r\n                        Save\r\n                      </Button>\r\n                      <Button onClick={() => setInstructions([])}\r\n                        className=\"md-6 mt-3 ml-3\">Clear</Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Row>\r\n              </>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                Preparation steps\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"1\">\r\n              <>\r\n                {guide.length > 0 &&\r\n                  guide.map((item, i) => (\r\n                    <div key={i} className='d-flex'>\r\n                      <div className='col-sm-5'>{item.number}</div>\r\n                      <div className='col-sm-5'>{item.instruction}</div>\r\n                      <button onClick={() => deleteGuide(i)}\r\n                        className='col-sm-1'>\r\n                        <i class=\"fas fa-trash text-sm \"></i>\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n                <Row className=\"d-flex p-5\">\r\n                  <Col className=\"col-md-2\">\r\n                    <Form.Label>#</Form.Label>\r\n                    <Form.Control as=\"input\" name='number' onChange={(e) => changeGuide(e)} />\r\n                  </Col>\r\n                  <Col className=\"col-md-4\">\r\n                    <Form.Label>instruction</Form.Label>\r\n                    <Form.Control as=\"input\" name='instruction' onChange={(e) => changeGuide(e)} />\r\n                  </Col>\r\n                  <Col className=\"col-md-2\">\r\n                    <Button\r\n                      className=\"m-2 flex-grow-0\"\r\n                      onClick={() => addToList('guide')}\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n        </Accordion>\r\n        <Row className=\"text-left\">\r\n          <Button type=\"submit\" className=\"m-3\" >\r\n            Add Recipe\r\n          </Button>\r\n        </Row>\r\n      </div>\r\n    </Form >\r\n  );\r\n}\r\nexport default NewRecipeForm;\r\n"]},"metadata":{},"sourceType":"module"}