{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\projects\\\\fullstack-project\\\\client\\\\src\\\\components\\\\forms\\\\RegisterForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./registerform.css\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Form, Col, Button, Row } from \"react-bootstrap\";\nimport InputCreator from \"./InputCreator\";\nimport validate from \"../utills/validateInfo\";\nimport useForm from \"../utills/useForm\";\nimport ErrorMessages from \"../utills/ErrorMessages\";\nimport { getData, insertDataToDB } from \"../DAL/api\";\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RegisterForm = ({\n  recipe,\n  editUser\n}) => {\n  _s();\n\n  const [editMode, setEditMode] = useState(false);\n  const [diets, setDiets] = useState([]);\n  const [meesages, setMessages] = useState('');\n  const history = useHistory();\n  useEffect(async () => {\n    if (recipe) setEditMode(true);\n    const fetchDiets = await getData('diets');\n    console.log(fetchDiets);\n    setDiets(fetchDiets);\n  }, []);\n  const {\n    handleSubmit,\n    handleChange,\n    values,\n    errors\n  } = useForm(submit, validate);\n  const formik = useFormik({\n    initialValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      diet: [],\n      description: '',\n      image: ''\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().min(3, '').max(15).required('please enter'),\n      isPrivate: Yup.string().min(1),\n      // image: Yup.string().required(\"required\"),\n      diet: Yup.array().min(2, 'choose at least 2 types'),\n      category: Yup.array().min(2, 'choose at least 2 types'),\n      prepTimeMin: Yup.string(),\n      description: Yup.string().min(3).max(30).required('3'),\n      source: Yup.string().min(3, 'min 3 charachters').max(20, 'must be 20 charachters or less').required('required')\n    }),\n    onSubmit: async values => {\n      const data = new FormData();\n      formik.values.guide = guide;\n      formik.values.userId = 95;\n      formik.values.instructions = instructions;\n      if (recipeId) formik.values.id = recipeId;\n      data.append(\"image\", image);\n      data.append(\"user\", Cookies.get('user'));\n      data.append(\"recipe\", JSON.stringify(formik.values));\n\n      if (!recipeId) {\n        const response = await uploadRecipe(data);\n      } else {\n        const update = await updateRecipe(data);\n      }\n\n      submit();\n    }\n  });\n\n  async function submit(e) {\n    // console.log(objectIsEmpty(errors));\n    // if (!objectIsEmpty(errors)) {\n    const res = await insertDataToDB('users', values);\n    console.log(res); // console.log(res);\n    // history.push('/login')\n\n    console.log(res);\n    setMessages(res);\n\n    if (editMode) {\n      editUser(values);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      dir: \"rtl\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-inner\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n          className: \"m-auto rtl\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-center\",\n            children: \"Registration page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(InputCreator, {\n            title: \"First name\",\n            type: \"text\",\n            required: \"true\",\n            value: values.firstName,\n            placeholder: \"First Name\",\n            sign: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }, this),\n            onChange: handleChange,\n            name: \"firstName\",\n            error: errors.firstname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), errors.firstName && /*#__PURE__*/_jsxDEV(ErrorMessages, {\n            errors: errors.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(InputCreator, {\n            title: \"Last name\",\n            type: \"text\",\n            required: \"true\",\n            value: values.lastName,\n            placeholder: \"last Name\",\n            sign: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 21\n            }, this),\n            onChange: handleChange,\n            name: \"lastName\",\n            error: errors.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), errors.lastName && /*#__PURE__*/_jsxDEV(ErrorMessages, {\n            errors: errors.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGridPassword\",\n          children: [/*#__PURE__*/_jsxDEV(InputCreator, {\n            title: \"Email\",\n            type: \"email\",\n            required: \"true\",\n            value: values.email,\n            placeholder: \"Email\",\n            sign: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-mail-bulk\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 21\n            }, this),\n            onChange: handleChange,\n            name: \"email\",\n            error: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(ErrorMessages, {\n            errors: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(InputCreator, {\n            title: \"Password\",\n            type: \"password\",\n            required: \"true\",\n            value: values.password,\n            placeholder: \"password\",\n            sign: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-mail-bulk\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 21\n            }, this),\n            onChange: handleChange,\n            name: \"password\",\n            error: errors.password,\n            note: \"Minimum password requirements: at least a digit, \\r lowercase and uppercase letter in English. And no less than 8 characters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), errors.password && /*#__PURE__*/_jsxDEV(ErrorMessages, {\n            errors: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(InputCreator, {\n            title: \"Confirm password\",\n            type: \"password\",\n            required: \"true\",\n            value: values.password2,\n            placeholder: \"\",\n            sign: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-mail-bulk\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 21\n            }, this),\n            onChange: handleChange,\n            name: \"password2\",\n            error: errors.password2,\n            note: \"The content of the field will be the same as the content typed for the password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), errors.password2 && /*#__PURE__*/_jsxDEV(ErrorMessages, {\n            errors: errors.password2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label text-left d-block\",\n                children: \"Favorite diet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              className: \"d-flex flex-row flex-wrap col-sm-10\",\n              children: [diets.length && diets.map(diet => {\n                return /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"checkbox\",\n                  label: diet.name,\n                  name: 'diet',\n                  value: diet.id,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 23\n                }, this);\n              }), errors.diet && /*#__PURE__*/_jsxDEV(ErrorMessages, {\n                errors: errors.diet\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          id: \"submit\",\n          onClick: handleSubmit,\n          children: editMode ? \"update\" : \"sign-up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"have an acount?login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(RegisterForm, \"7v+3BU0nLCEguLA6Rl4RpTp75Qg=\", true, function () {\n  return [useHistory, useForm];\n});\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["C:/Users/User/Documents/projects/fullstack-project/client/src/components/forms/RegisterForm.jsx"],"names":["React","useEffect","useState","Link","useHistory","Form","Col","Button","Row","InputCreator","validate","useForm","ErrorMessages","getData","insertDataToDB","Yup","RegisterForm","recipe","editUser","editMode","setEditMode","diets","setDiets","meesages","setMessages","history","fetchDiets","console","log","handleSubmit","handleChange","values","errors","submit","formik","useFormik","initialValues","firstName","lastName","email","password","diet","description","image","validationSchema","object","name","string","min","max","required","isPrivate","array","category","prepTimeMin","source","onSubmit","data","FormData","guide","userId","instructions","recipeId","id","append","Cookies","get","JSON","stringify","response","uploadRecipe","update","updateRecipe","e","res","firstname","password2","length","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./registerform.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Form, Col, Button, Row } from \"react-bootstrap\";\r\nimport InputCreator from \"./InputCreator\";\r\nimport validate from \"../utills/validateInfo\";\r\nimport useForm from \"../utills/useForm\";\r\nimport ErrorMessages from \"../utills/ErrorMessages\";\r\nimport { getData, insertDataToDB } from \"../DAL/api\";\r\nimport * as Yup from 'yup'\r\nconst RegisterForm = ({ recipe, editUser }) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [diets, setDiets] = useState([]);\r\n  const [meesages, setMessages] = useState('')\r\n  const history = useHistory()\r\n  useEffect(async () => {\r\n    if (recipe) setEditMode(true);\r\n    const fetchDiets = await getData('diets')\r\n    console.log(fetchDiets);\r\n    setDiets(fetchDiets);\r\n  }, []);\r\n\r\n\r\n  const { handleSubmit, handleChange, values, errors } = useForm(\r\n    submit,\r\n    validate\r\n  );\r\n\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      diet: [],\r\n    \r\n      description: '',\r\n      image: ''\r\n    },\r\n\r\n    validationSchema: Yup.object({\r\n      name: Yup.string()\r\n        .min(3, '')\r\n        .max(15)\r\n        .required('please enter'),\r\n      isPrivate: Yup.string().min(1),\r\n      // image: Yup.string().required(\"required\"),\r\n      diet: Yup.array().min(2, 'choose at least 2 types'),\r\n      category: Yup.array().min(2, 'choose at least 2 types'),\r\n      prepTimeMin: Yup.string(),\r\n      description: Yup.string().min(3).max(30).required('3'),\r\n      source: Yup.string().min(3, 'min 3 charachters').max(20, 'must be 20 charachters or less').required('required')\r\n    }),\r\n    onSubmit: async (values) => {\r\n      const data = new FormData();\r\n      formik.values.guide = guide;\r\n      formik.values.userId = 95;\r\n      formik.values.instructions = instructions\r\n      if (recipeId) formik.values.id = recipeId\r\n      data.append(\"image\", image)\r\n      data.append(\"user\", Cookies.get('user'))\r\n      data.append(\"recipe\", JSON.stringify(formik.values))\r\n      if (!recipeId) {\r\n        const response = await uploadRecipe(data)\r\n      } else {\r\n        const update = await updateRecipe(data)\r\n      }\r\n      submit()\r\n    },\r\n\r\n  })\r\n\r\n\r\n  async function submit(e) {\r\n    // console.log(objectIsEmpty(errors));\r\n    // if (!objectIsEmpty(errors)) {\r\n    const res = await insertDataToDB('users', values)\r\n    console.log(res);\r\n    // console.log(res);\r\n    // history.push('/login')\r\n    console.log(res);\r\n    setMessages(res)\r\n    if (editMode) {\r\n      editUser(values);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form dir=\"rtl\" onSubmit={handleSubmit}>\r\n        <div className=\"form-inner\">\r\n          <Form.Row className=\"m-auto rtl\">\r\n            <h1 className=\"text-center\">Registration page</h1>\r\n          </Form.Row>\r\n          <hr />\r\n          <Form.Group>\r\n            <InputCreator\r\n              title=\"First name\"\r\n              type=\"text\"\r\n              required=\"true\"\r\n              value={values.firstName}\r\n              placeholder=\"First Name\"\r\n              sign={<i class=\"fas fa-user\"></i>}\r\n              onChange={handleChange}\r\n              name=\"firstName\"\r\n              error={errors.firstname}\r\n            />\r\n            {errors.firstName && <ErrorMessages errors={errors.firstName} />}\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <InputCreator\r\n              title=\"Last name\"\r\n              type=\"text\"\r\n              required=\"true\"\r\n              value={values.lastName}\r\n              placeholder=\"last Name\"\r\n              sign={<i class=\"fas fa-user\"></i>}\r\n              onChange={handleChange}\r\n              name=\"lastName\"\r\n              error={errors.lastName}\r\n            />\r\n            {errors.lastName && <ErrorMessages errors={errors.lastName} />}\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGridPassword\">\r\n            <InputCreator\r\n              title=\"Email\"\r\n              type=\"email\"\r\n              required=\"true\"\r\n              value={values.email}\r\n              placeholder=\"Email\"\r\n              sign={<i class=\"fas fa-mail-bulk\"></i>}\r\n              onChange={handleChange}\r\n              name=\"email\"\r\n              error={errors.email}\r\n            />\r\n            {errors.email && <ErrorMessages errors={errors.email} />}\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <InputCreator\r\n              title=\"Password\"\r\n              type=\"password\"\r\n              required=\"true\"\r\n              value={values.password}\r\n              placeholder=\"password\"\r\n              sign={<i class=\"fas fa-mail-bulk\"></i>}\r\n              onChange={handleChange}\r\n              name=\"password\"\r\n              error={errors.password}\r\n              note=\"Minimum password requirements: at least a digit, \r\n              lowercase and uppercase letter in English. And no less than 8 characters\"\r\n            />\r\n            {errors.password && <ErrorMessages errors={errors.password} />}\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <InputCreator\r\n              title=\"Confirm password\"\r\n              type=\"password\"\r\n              required=\"true\"\r\n              value={values.password2}\r\n              placeholder=\"\"\r\n              sign={<i class=\"fas fa-mail-bulk\"></i>}\r\n              onChange={handleChange}\r\n              name=\"password2\"\r\n              error={errors.password2}\r\n              note=\"The content of the field will be the same as the content typed for the password\"\r\n            />\r\n            {errors.password2 && <ErrorMessages errors={errors.password2} />}\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Row>\r\n              <Col>\r\n                <label className='form-label text-left d-block'>Favorite diet</label>\r\n              </Col>\r\n              <Col className=\"d-flex flex-row flex-wrap col-sm-10\">\r\n                {diets.length &&\r\n                  diets.map((diet) => {\r\n                    return (\r\n                      <Form.Check\r\n                        type=\"checkbox\"\r\n                        label={diet.name}\r\n                        name={'diet'}\r\n                        value={diet.id}\r\n                        onChange={handleChange}\r\n                      />\r\n                    );\r\n                  })}\r\n                {errors.diet && <ErrorMessages errors={errors.diet} />}\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n          {\r\n            <Button type=\"submit\" id=\"submit\" onClick={handleSubmit}>\r\n              {editMode ? \"update\" : \"sign-up\"}\r\n            </Button>\r\n          }\r\n          <Link to=\"/login\">have an acount?login</Link>\r\n        </div>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n"]},"metadata":{},"sourceType":"module"}