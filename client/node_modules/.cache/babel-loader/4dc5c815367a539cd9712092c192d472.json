{"ast":null,"code":"\"use strict\";\n\nconst fetch = require(\"node-fetch\");\n\nconst axios = require('axios');\n\nconst getData = async (table, id) => {\n  const response = await axios.get(`http://localhost:3200/${table}${!!id ? '/' + id : ''}`);\n  return response.data;\n};\n\nconst getRecipes = async () => {\n  const recipes = await axios.get('http://localhost:3200/recipes');\n  return recipes.data;\n};\n\nconst getCategories = async () => {\n  const categories = await axios.get('http://localhost:3200/categories');\n  return categories.data;\n};\n\nconst getDiets = async () => {\n  const diets = await axios.get('http://localhost:3200/diets');\n  return diets.data;\n};\n\nconst getUnits = async () => {\n  const units = await axios.get('http://localhost:3200/units');\n  return units.data;\n};\n\nconst getIngredients = async () => {\n  const ingredients = await axios.get('http://localhost:3200/ingredients');\n  return ingredients.data;\n};\n\nconst getImages = () => {\n  return Promise.resolve(images);\n};\n\nconst getUserRecipes = async userId => {\n  console.log(userId);\n  const usersRecipe = await axios.get(`http://localhost:3200/users/recipes/${userId}`);\n  return usersRecipe.data;\n};\n\nconst updateRecipe = async recipeInfo => {\n  const recipes = await getRecipes();\n  recipes.find(item => item.id === recipeInfo.id ? item = { ...recipeInfo\n  } : null);\n};\n\nconst addRecipe = async recipe => {\n  const recipes = await getRecipes();\n  recipes.push(recipe);\n};\n\nconst addUser = async user => {\n  const users = await getData('users');\n  users.push(user);\n};\n\nconst login = async (email, password) => {\n  const res = await axios.post('http://localhost:3200/login', {\n    email: email,\n    password: password\n  });\n  return res.data;\n};\n\nconst insertDataToDB = (placeToInsert, values) => {\n  axios.post(`http://localhost:3200/${placeToInsert}`, {\n    values\n  }).then(() => console.log('success'));\n};\n\nconst getRecipeIngredients = async recipeId => {\n  console.log(recipeId);\n  const response = await axios.get(`http://localhost:3200/ingredients/${recipeId}`);\n  return response.data;\n};\n\nconst getRecipeDetails = async id => {\n  console.log('recipe', id);\n  const response = await axios.post(`http://localhost:3200/recipes/getRecipe`, {\n    id\n  });\n  return response.data;\n};\n\nconst getImage = async recipeId => {\n  console.log('recipe', recipeId);\n  const response = await axios.get(`http://localhost:3200/images/${recipeId}`);\n  return response.data;\n};\n\nconst orderBy = async (type, asc = 'asc') => {\n  const response = await axios.get(`http://localhost:3200/recipes/?orderBy=${type}&&order=${asc}`);\n  return response.data;\n};\n\nconst sendPutReq = (email, password, id) => {\n  axios.put(`http://localhost:3200/users`, {\n    email,\n    password,\n    id\n  });\n};\n\nconst getSpecificUser = async id => {\n  const response = await axios.post(`http://localhost:3200/users/user`, {\n    id\n  });\n  return response.data;\n};\n\nconst ingredientsOfRecipe = async id => {\n  const response = await axios.post(`http://localhost:3200/recipes/ingredient`, {\n    id\n  });\n  return response.data;\n};\n\nconst diet = async id => {\n  const response = await axios.post(`http://localhost:3200/recipes/diet`, {\n    id\n  });\n  return response.data;\n};\n\nconst category = async id => {\n  const response = await axios.post(`http://localhost:3200/recipes/category`, {\n    id\n  });\n  return response.data;\n};\n\nconst incrementView = async id => {\n  const response = await axios.post(`http://localhost:3200/recipes/increment`, {\n    id\n  });\n  return response.data;\n};\n\nmodule.exports = {\n  getImages,\n  getRecipes,\n  login,\n  getIngredients,\n  getUnits,\n  getDiets,\n  getCategories,\n  getData,\n  insertDataToDB,\n  getRecipeIngredients,\n  getRecipeDetails,\n  getImage,\n  getUserRecipes,\n  orderBy,\n  getSpecificUser,\n  sendPutReq,\n  ingredientsOfRecipe,\n  category,\n  diet,\n  incrementView\n};","map":{"version":3,"sources":["C:/Users/User/Documents/projects/fullstack-project/client/src/components/DAL/api.js"],"names":["fetch","require","axios","getData","table","id","response","get","data","getRecipes","recipes","getCategories","categories","getDiets","diets","getUnits","units","getIngredients","ingredients","getImages","Promise","resolve","images","getUserRecipes","userId","console","log","usersRecipe","updateRecipe","recipeInfo","find","item","addRecipe","recipe","push","addUser","user","users","login","email","password","res","post","insertDataToDB","placeToInsert","values","then","getRecipeIngredients","recipeId","getRecipeDetails","getImage","orderBy","type","asc","sendPutReq","put","getSpecificUser","ingredientsOfRecipe","diet","category","incrementView","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\r\nconst fetch = require(\"node-fetch\");\r\nconst axios = require('axios')\r\n\r\nconst getData = async (table, id) => {\r\n  const response = await axios.get(`http://localhost:3200/${table}${!!id ? ('/' + id) : ''}`)\r\n  return response.data\r\n};\r\n\r\nconst getRecipes = async () => {\r\n  const recipes = await axios.get('http://localhost:3200/recipes')\r\n  return recipes.data\r\n};\r\n\r\nconst getCategories = async () => {\r\n  const categories = await axios.get('http://localhost:3200/categories')\r\n  return categories.data\r\n\r\n};\r\n\r\nconst getDiets = async () => {\r\n  const diets = await axios.get('http://localhost:3200/diets')\r\n  return diets.data\r\n};\r\n\r\nconst getUnits = async () => {\r\n  const units = await axios.get('http://localhost:3200/units')\r\n  return units.data\r\n};\r\n\r\nconst getIngredients = async () => {\r\n  const ingredients = await axios.get('http://localhost:3200/ingredients')\r\n  return ingredients.data\r\n};\r\nconst getImages = () => {\r\n  return Promise.resolve(images);\r\n};\r\nconst getUserRecipes = async (userId) => {\r\n  console.log(userId);\r\n  const usersRecipe = await axios.get(`http://localhost:3200/users/recipes/${userId}`)\r\n  return usersRecipe.data\r\n\r\n}\r\nconst updateRecipe = async (recipeInfo) => {\r\n  const recipes = await getRecipes();\r\n  recipes.find((item) =>\r\n    item.id === recipeInfo.id ? (item = { ...recipeInfo }) : null\r\n  );\r\n};\r\n\r\nconst addRecipe = async (recipe) => {\r\n  const recipes = await getRecipes();\r\n  recipes.push(recipe);\r\n};\r\n\r\nconst addUser = async (user) => {\r\n  const users = await getData('users');\r\n  users.push(user);\r\n};\r\n\r\nconst login = async (email, password) => {\r\n  const res = await axios.post('http://localhost:3200/login', {\r\n    email: email,\r\n    password: password\r\n\r\n  })\r\n  return res.data\r\n\r\n};\r\nconst insertDataToDB = (placeToInsert, values) => {\r\n  axios.post(`http://localhost:3200/${placeToInsert}`, {\r\n    values\r\n  }).then(() => console.log('success'))\r\n}\r\nconst getRecipeIngredients = async (recipeId) => {\r\n  console.log(recipeId);\r\n  const response = await axios.get(`http://localhost:3200/ingredients/${recipeId}`)\r\n  return response.data\r\n}\r\n\r\nconst getRecipeDetails = async (id) => {\r\n  console.log('recipe', id);\r\n  const response = await axios.post(`http://localhost:3200/recipes/getRecipe`, { id })\r\n  return response.data\r\n}\r\nconst getImage = async (recipeId) => {\r\n  console.log('recipe', recipeId);\r\n  const response = await axios.get(`http://localhost:3200/images/${recipeId}`)\r\n  return response.data\r\n}\r\n\r\n\r\nconst orderBy = async (type, asc = 'asc') => {\r\n  const response = await axios.get(`http://localhost:3200/recipes/?orderBy=${type}&&order=${asc}`)\r\n  return response.data\r\n}\r\n\r\nconst sendPutReq = (email, password, id) => {\r\n  axios.put(`http://localhost:3200/users`, { email, password, id })\r\n}\r\n\r\nconst getSpecificUser = async (id) => {\r\n  const response = await axios.post(`http://localhost:3200/users/user`, { id })\r\n  return response.data\r\n}\r\nconst ingredientsOfRecipe = async (id) => {\r\n  const response = await axios.post(`http://localhost:3200/recipes/ingredient`, { id })\r\n  return response.data\r\n}\r\nconst diet = async (id) => {\r\n  const response = await axios.post(`http://localhost:3200/recipes/diet`, { id })\r\n  return response.data\r\n}\r\nconst category = async (id) => {\r\n  const response = await axios.post(`http://localhost:3200/recipes/category`, { id })\r\n  return response.data\r\n}\r\nconst incrementView = async (id) => {\r\n  const response = await axios.post(`http://localhost:3200/recipes/increment`, { id })\r\n  return response.data\r\n}\r\nmodule.exports = {\r\n  getImages,\r\n  getRecipes,\r\n  login,\r\n  getIngredients,\r\n  getUnits,\r\n  getDiets,\r\n  getCategories,\r\n  getData,\r\n  insertDataToDB,\r\n  getRecipeIngredients,\r\n  getRecipeDetails,\r\n  getImage,\r\n  getUserRecipes,\r\n  orderBy,\r\n  getSpecificUser,\r\n  sendPutReq,\r\n  ingredientsOfRecipe,\r\n  category,\r\n  diet,\r\n  incrementView\r\n};\r\n"]},"metadata":{},"sourceType":"module"}