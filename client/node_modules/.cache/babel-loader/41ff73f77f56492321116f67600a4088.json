{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\projects\\\\fullstack-project\\\\client\\\\src\\\\components\\\\forms\\\\EditRecipe.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { RecipesContext } from \"../context/RecipesContext\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Form, FormGroup, Button } from \"react-bootstrap\";\nimport { getRecipes } from \"../DAL/api\";\nimport NewRecipeForm from \"./NewRecipeForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditRecipe({\n  match,\n  recipe\n}) {\n  _s();\n\n  const {\n    edituser\n  } = useContext(GlobalContext);\n  const [selectedRecipe, setSelectedRecipe] = useState({});\n  const [values, setValues] = useState({\n    name: \"getaneh\"\n  }); // const { editRecipe } = useContext(RecipesContext);\n\n  console.log(\"editrecipe\", match);\n  const history = useHistory();\n  const currenRecipeId = match.params.id;\n  console.log(currenRecipeId);\n  useEffect(async () => {\n    let newrecipe = \"\";\n    const recipes = await getRecipes();\n    recipes.forEach(recipe => {\n      if (recipe.recipeId == currenRecipeId) newrecipe = recipe;\n    });\n    setSelectedRecipe(newrecipe);\n  }, [currenRecipeId]);\n\n  const onChange = e => {\n    setSelectedRecipe({ ...selectedRecipe,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  console.log(\"recipe\", selectedRecipe);\n\n  const onSubmit = e => {\n    e.preventDefault(); //editUser(selectedRecipe);\n\n    history.push(\"/\");\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(NewRecipeForm, {\n    recipe: selectedRecipe,\n    edit: edituser\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n}\n\n_s(EditRecipe, \"MHkI8Gi19zMcagQNQSkxKhZLXqg=\", false, function () {\n  return [useHistory];\n});\n\n_c = EditRecipe;\nexport default EditRecipe;\n\nconst EditForm = ({\n  recipe\n}) => {\n  const id = recipe.recipeId;\n  const updatedEmployee = { ...recipe\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    EditRecipe(id, recipe);\n  };\n\n  return /*#__PURE__*/_jsxDEV(NewRecipeForm, {\n    mode: true,\n    match: match.params.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}; // export default EditForm;\n\n\n_c2 = EditForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditRecipe\");\n$RefreshReg$(_c2, \"EditForm\");","map":{"version":3,"sources":["C:/Users/User/Documents/projects/fullstack-project/client/src/components/forms/EditRecipe.jsx"],"names":["React","useState","useContext","useEffect","RecipesContext","GlobalContext","Link","useHistory","Form","FormGroup","Button","getRecipes","NewRecipeForm","EditRecipe","match","recipe","edituser","selectedRecipe","setSelectedRecipe","values","setValues","name","console","log","history","currenRecipeId","params","id","newrecipe","recipes","forEach","recipeId","onChange","e","target","value","onSubmit","preventDefault","push","handleSubmit","EditForm","updatedEmployee"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\n\r\nimport { RecipesContext } from \"../context/RecipesContext\";\r\n\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Form, FormGroup, Button } from \"react-bootstrap\";\r\nimport { getRecipes } from \"../DAL/api\";\r\nimport NewRecipeForm from \"./NewRecipeForm\";\r\n\r\nfunction EditRecipe({ match, recipe }) {\r\n  const { edituser } = useContext(GlobalContext);\r\n  const [selectedRecipe, setSelectedRecipe] = useState({});\r\n  const [values, setValues] = useState({ name: \"getaneh\" });\r\n  // const { editRecipe } = useContext(RecipesContext);\r\n\r\n  console.log(\"editrecipe\", match);\r\n  const history = useHistory();\r\n  const currenRecipeId = match.params.id;\r\n  console.log(currenRecipeId);\r\n  useEffect(async () => {\r\n    let newrecipe = \"\";\r\n    const recipes = await getRecipes();\r\n    recipes.forEach((recipe) => {\r\n      if (recipe.recipeId == currenRecipeId) newrecipe = recipe;\r\n    });\r\n    setSelectedRecipe(newrecipe);\r\n  }, [currenRecipeId]);\r\n\r\n  const onChange = (e) => {\r\n    setSelectedRecipe({ ...selectedRecipe, [e.target.name]: e.target.value });\r\n  };\r\n  console.log(\"recipe\", selectedRecipe);\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    //editUser(selectedRecipe);\r\n    history.push(\"/\");\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  return <NewRecipeForm recipe={selectedRecipe} edit={edituser} />;\r\n}\r\n\r\nexport default EditRecipe;\r\n\r\nconst EditForm = ({ recipe }) => {\r\n  const id = recipe.recipeId;\r\n\r\n  const updatedEmployee = { ...recipe };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    EditRecipe(id, recipe);\r\n  };\r\n\r\n  return (\r\n    <NewRecipeForm mode={true} match={match.params.id\r\n    } />\r\n  );\r\n};\r\n\r\n// export default EditForm;\r\n"]},"metadata":{},"sourceType":"module"}