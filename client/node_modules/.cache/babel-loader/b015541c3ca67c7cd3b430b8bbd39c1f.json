{"ast":null,"code":"\"use strict\";\n\nconst fetch = require(\"node-fetch\");\n\nconst axios = require('axios');\n\nconst getData = async (table, id) => {\n  const response = await axios.get(`http://localhost:3200/${table}${!!id ? '/' + id : ''}`);\n  return response.data;\n}; // const getRecipes = async () => {\n//   const recipes = await axios.get('http://localhost:3200/recipes')\n//   return recipes.data\n// };\n\n\nconst getCategories = async () => {\n  const categories = await axios.get('http://localhost:3200/categories');\n  return categories.data;\n};\n\nconst getDiets = async () => {\n  const diets = await axios.get('http://localhost:3200/diets');\n  return diets.data;\n};\n\nconst getUnits = async () => {\n  const units = await axios.get('http://localhost:3200/units');\n  return units.data;\n};\n\nconst getIngredients = async () => {\n  const ingredients = await axios.get('http://localhost:3200/ingredients');\n  return ingredients.data;\n};\n\n;\n\nconst getUserRecipes = async userId => {\n  console.log(userId);\n  const usersRecipe = await axios.get(`http://localhost:3200/users/recipes/${userId}`);\n  return usersRecipe.data;\n};\n\nconst updateRecipe = async (data, recipe) => {\n  const response = await axios.post(`http://localhost:3200/recipes/update`, data);\n  return response.data;\n};\n\nconst login = async (email, password) => {\n  const res = await axios.post('http://localhost:3200/users/login', {\n    email: email,\n    password: password\n  });\n  return res.data;\n};\n\nconst insertDataToDB = (placeToInsert, values) => {\n  axios.post(`http://localhost:3200/${placeToInsert}`, {\n    values\n  }).then(() => console.log('success'));\n};\n\nconst getRecipeIngredients = async recipeId => {\n  console.log(recipeId);\n  const response = await axios.get(`http://localhost:3200/ingredients/${recipeId}`);\n  return response.data;\n};\n\nconst getRecipeDetails = async id => {\n  console.log('recipe', id);\n  const response = await axios.post(`http://localhost:3200/recipes/getRecipe`, {\n    id\n  });\n  return response.data;\n};\n\nconst getImage = async recipeId => {\n  console.log('recipe', recipeId);\n  const response = await axios.get(`http://localhost:3200/images/${recipeId}`);\n  return response.data;\n};\n\nconst orderBy = async (type, asc = 'asc', pageNumber, size = 20) => {\n  const response = await axios.get(`http://localhost:3200/recipes/?orderBy=${type}&&order=${asc}&&limit=${pageNumber}&&size=${size}`);\n  return response.data;\n};\n\nconst sendPutReq = (email, password, id) => {\n  axios.put(`http://localhost:3200/users`, {\n    email,\n    password,\n    id\n  });\n};\n\nconst getSpecificUser = async id => {\n  const response = await axios.post(`http://localhost:3200/users/getUser`, {\n    id\n  });\n  return response.data;\n};\n\nconst ingredientsOfRecipe = async id => {\n  const response = await axios.post(`http://localhost:3200/recipes/ingredient`, {\n    id\n  });\n  return response.data;\n};\n\nconst diet = async id => {\n  const response = await axios.post(`http://localhost:3200/recipes/diet`, {\n    id\n  });\n  return response.data;\n};\n\nconst category = async id => {\n  const response = await axios.post(`http://localhost:3200/recipes/category`, {\n    id\n  });\n  return response.data;\n};\n\nconst incrementView = async id => {\n  const response = await axios.post(`http://localhost:3200/recipes/increment`, {\n    id\n  });\n  return response.data;\n};\n\nconst uploadRecipe = async (data, recipe) => {\n  const response = await axios.post(`http://localhost:3200/recipes/upload`, data);\n  return response.data;\n};\n\nconst mostPopular = async () => {\n  const response = await axios.get(`http://localhost:3200/recipes/popular`);\n  return response.data;\n};\n\nconst userRecipes = async id => {\n  const response = await axios.post(`http://localhost:3200/recipes/myrecipes`, {\n    id\n  });\n  return response.data;\n};\n\nconst appendUser = async values => {\n  const response = await axios.post(`http://localhost:3200/users`, { ...values\n  });\n  return response.data;\n};\n\nconst updateUser = async values => {\n  const response = await axios.put(`http://localhost:3200/users`, { ...values\n  });\n  return response.data;\n};\n\nconst destroyRecipe = async (userId, recipeId) => {\n  const response = await axios.post(`http://localhost:3200/recipes/delete`, {\n    userId,\n    recipeId\n  });\n  return response.data;\n};\n\nconst addfavorites = async (userId, recipeId) => {\n  const response = await axios.post(`http://localhost:3200/likes`, {\n    userId,\n    recipeId\n  });\n  return response.data;\n};\n\nconst getFavorites = async id => {\n  const response = await axios.get(`http://localhost:3200/likes/${id}`);\n  return response.data;\n};\n\nconst deleteFromFavorites = async (userId, recipeId) => {\n  const response = await axios.post(`http://localhost:3200/likes/delete`, {\n    userId,\n    recipeId\n  });\n  return response.data;\n};\n\nmodule.exports = {\n  login,\n  getIngredients,\n  getUnits,\n  getDiets,\n  getCategories,\n  getData,\n  insertDataToDB,\n  getRecipeIngredients,\n  getRecipeDetails,\n  getImage,\n  getUserRecipes,\n  orderBy,\n  getSpecificUser,\n  sendPutReq,\n  ingredientsOfRecipe,\n  category,\n  diet,\n  incrementView,\n  mostPopular,\n  uploadRecipe,\n  userRecipes,\n  updateRecipe,\n  appentIngredient,\n  appendUser,\n  updateUser,\n  destroyRecipe,\n  addfavorites,\n  getFavorites,\n  deleteFromFavorites\n};","map":{"version":3,"sources":["C:/Users/User/Documents/projects/fullstack-project/client/src/components/DAL/api.js"],"names":["fetch","require","axios","getData","table","id","response","get","data","getCategories","categories","getDiets","diets","getUnits","units","getIngredients","ingredients","getUserRecipes","userId","console","log","usersRecipe","updateRecipe","recipe","post","login","email","password","res","insertDataToDB","placeToInsert","values","then","getRecipeIngredients","recipeId","getRecipeDetails","getImage","orderBy","type","asc","pageNumber","size","sendPutReq","put","getSpecificUser","ingredientsOfRecipe","diet","category","incrementView","uploadRecipe","mostPopular","userRecipes","appendUser","updateUser","destroyRecipe","addfavorites","getFavorites","deleteFromFavorites","module","exports","appentIngredient"],"mappings":"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","sourcesContent":["\"use strict\";\r\nconst fetch = require(\"node-fetch\");\r\nconst axios = require('axios')\r\n\r\nconst getData = async (table, id) => {\r\n  const response = await axios.get(`http://localhost:3200/${table}${!!id ? ('/' + id) : ''}`)\r\n  return response.data\r\n};\r\n\r\n// const getRecipes = async () => {\r\n//   const recipes = await axios.get('http://localhost:3200/recipes')\r\n//   return recipes.data\r\n// };\r\n\r\nconst getCategories = async () => {\r\n  const categories = await axios.get('http://localhost:3200/categories')\r\n  return categories.data\r\n};\r\n\r\nconst getDiets = async () => {\r\n  const diets = await axios.get('http://localhost:3200/diets')\r\n  return diets.data\r\n};\r\n\r\nconst getUnits = async () => {\r\n  const units = await axios.get('http://localhost:3200/units')\r\n  return units.data\r\n};\r\n\r\nconst getIngredients = async () => {\r\n  const ingredients = await axios.get('http://localhost:3200/ingredients')\r\n  return ingredients.data\r\n};\r\n;\r\nconst getUserRecipes = async (userId) => {\r\n  console.log(userId);\r\n  const usersRecipe = await axios.get(`http://localhost:3200/users/recipes/${userId}`)\r\n  return usersRecipe.data\r\n\r\n}\r\nconst updateRecipe = async (data, recipe) => {\r\n  const response = await axios.post(`http://localhost:3200/recipes/update`, data)\r\n  return response.data\r\n}\r\n\r\nconst login = async (email, password) => {\r\n  const res = await axios.post('http://localhost:3200/users/login', {\r\n    email: email,\r\n    password: password\r\n\r\n  })\r\n  return res.data\r\n};\r\n\r\nconst insertDataToDB = (placeToInsert, values) => {\r\n  axios.post(`http://localhost:3200/${placeToInsert}`, {\r\n    values\r\n  }).then(() => console.log('success'))\r\n}\r\n\r\nconst getRecipeIngredients = async (recipeId) => {\r\n  console.log(recipeId);\r\n  const response = await axios.get(`http://localhost:3200/ingredients/${recipeId}`)\r\n  return response.data\r\n}\r\n\r\nconst getRecipeDetails = async (id) => {\r\n  console.log('recipe', id);\r\n  const response = await axios.post(`http://localhost:3200/recipes/getRecipe`, { id })\r\n  return response.data\r\n}\r\nconst getImage = async (recipeId) => {\r\n  console.log('recipe', recipeId);\r\n  const response = await axios.get(`http://localhost:3200/images/${recipeId}`)\r\n  return response.data\r\n}\r\n\r\nconst orderBy = async (type, asc = 'asc', pageNumber, size = 20) => {\r\n  const response = await axios.get(`http://localhost:3200/recipes/?orderBy=${type}&&order=${asc}&&limit=${pageNumber}&&size=${size}`)\r\n  return response.data\r\n}\r\n\r\nconst sendPutReq = (email, password, id) => {\r\n  axios.put(`http://localhost:3200/users`, { email, password, id })\r\n}\r\n\r\nconst getSpecificUser = async (id) => {\r\n  const response = await axios.post(`http://localhost:3200/users/getUser`, { id })\r\n  return response.data\r\n}\r\n\r\nconst ingredientsOfRecipe = async (id) => {\r\n  const response = await axios.post(`http://localhost:3200/recipes/ingredient`, { id })\r\n  return response.data\r\n}\r\n\r\nconst diet = async (id) => {\r\n  const response = await axios.post(`http://localhost:3200/recipes/diet`, { id })\r\n  return response.data\r\n}\r\n\r\nconst category = async (id) => {\r\n  const response = await axios.post(`http://localhost:3200/recipes/category`, { id })\r\n  return response.data\r\n}\r\n\r\nconst incrementView = async (id) => {\r\n  const response = await axios.post(`http://localhost:3200/recipes/increment`, { id })\r\n  return response.data\r\n}\r\n\r\nconst uploadRecipe = async (data, recipe) => {\r\n  const response = await axios.post(`http://localhost:3200/recipes/upload`, data)\r\n  return response.data\r\n}\r\nconst mostPopular = async () => {\r\n  const response = await axios.get(`http://localhost:3200/recipes/popular`)\r\n  return response.data\r\n}\r\n\r\nconst userRecipes = async (id) => {\r\n  const response = await axios.post(`http://localhost:3200/recipes/myrecipes`, { id })\r\n  return response.data\r\n}\r\n\r\nconst appendUser = async (values) => {\r\n  const response = await axios.post(`http://localhost:3200/users`, { ...values })\r\n  return response.data\r\n}\r\nconst updateUser = async (values) => {\r\n  const response = await axios.put(`http://localhost:3200/users`, { ...values })\r\n  return response.data\r\n}\r\nconst destroyRecipe = async (userId, recipeId) => {\r\n  const response = await axios.post(`http://localhost:3200/recipes/delete`, { userId, recipeId })\r\n  return response.data\r\n}\r\n\r\nconst addfavorites = async (userId, recipeId) => {\r\n  const response = await axios.post(`http://localhost:3200/likes`, { userId, recipeId })\r\n  return response.data\r\n}\r\nconst getFavorites = async (id) => {\r\n  const response = await axios.get(`http://localhost:3200/likes/${id}`)\r\n  return response.data\r\n\r\n}\r\nconst deleteFromFavorites = async (userId, recipeId) => {\r\n  const response = await axios.post(`http://localhost:3200/likes/delete`, { userId, recipeId })\r\n  return response.data\r\n\r\n}\r\nmodule.exports = {\r\n  login,\r\n  getIngredients,\r\n  getUnits,\r\n  getDiets,\r\n  getCategories,\r\n  getData,\r\n  insertDataToDB,\r\n  getRecipeIngredients,\r\n  getRecipeDetails,\r\n  getImage,\r\n  getUserRecipes,\r\n  orderBy,\r\n  getSpecificUser,\r\n  sendPutReq,\r\n  ingredientsOfRecipe,\r\n  category,\r\n  diet,\r\n  incrementView,\r\n  mostPopular,\r\n  uploadRecipe,\r\n  userRecipes,\r\n  updateRecipe,\r\n  appentIngredient,\r\n  appendUser, updateUser, destroyRecipe,\r\n  addfavorites,\r\n  getFavorites,\r\n  deleteFromFavorites\r\n};\r\n"]},"metadata":{},"sourceType":"module"}