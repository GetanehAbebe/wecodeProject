{"ast":null,"code":"\"use strict\";\n\nconst fetch = require(\"node-fetch\");\n\nconst axios = require('axios');\n\nconst getData = async (table, id) => {\n  const response = await axios.get(`http://localhost:3200/${table}${!!id ? '/' + id : ''}`);\n  return response.data;\n};\n\nconst getRecipes = async () => {\n  const recipes = await axios.get('http://localhost:3200/recipes');\n  return recipes.data;\n};\n\nconst getCategories = async () => {\n  const categories = await axios.get('http://localhost:3200/categories');\n  return categories.data;\n};\n\nconst getDiets = async () => {\n  const diets = await axios.get('http://localhost:3200/diets');\n  return diets.data;\n};\n\nconst getUnits = async () => {\n  const units = await axios.get('http://localhost:3200/units');\n  return units.data;\n};\n\nconst getIngredients = async () => {\n  const ingredients = await axios.get('http://localhost:3200/ingredients');\n  return ingredients.data;\n};\n\nconst getImages = () => {// return Promise.resolve(images);\n};\n\nconst getUserRecipes = async userId => {\n  console.log(userId);\n  const usersRecipe = await axios.get(`http://localhost:3200/users/recipes/${userId}`);\n  return usersRecipe.data;\n};\n\nconst updateRecipe = async (data, recipe) => {\n  const response = await axios.post(`http://localhost:3200/recipes/update`, data);\n  return response.data;\n};\n\nconst login = async (email, password) => {\n  const res = await axios.post('http://localhost:3200/users/login', {\n    email: email,\n    password: password\n  });\n  return res.data;\n};\n\nconst insertDataToDB = (placeToInsert, values) => {\n  axios.post(`http://localhost:3200/${placeToInsert}`, {\n    values\n  }).then(() => console.log('success'));\n};\n\nconst getRecipeIngredients = async recipeId => {\n  console.log(recipeId);\n  const response = await axios.get(`http://localhost:3200/ingredients/${recipeId}`);\n  return response.data;\n};\n\nconst getRecipeDetails = async id => {\n  console.log('recipe', id);\n  const response = await axios.post(`http://localhost:3200/recipes/getRecipe`, {\n    id\n  });\n  return response.data;\n};\n\nconst getImage = async recipeId => {\n  console.log('recipe', recipeId);\n  const response = await axios.get(`http://localhost:3200/images/${recipeId}`);\n  return response.data;\n};\n\nconst orderBy = async (type, asc = 'asc', pageNumber, size = 20) => {\n  const response = await axios.get(`http://localhost:3200/recipes/?orderBy=${type}&&order=${asc}&&limit=${pageNumber}&&size=${size}`);\n  return response.data;\n};\n\nconst sendPutReq = (email, password, id) => {\n  axios.put(`http://localhost:3200/users`, {\n    email,\n    password,\n    id\n  });\n};\n\nconst getSpecificUser = async id => {\n  console.log(id);\n  const response = await axios.post(`http://localhost:3200/users/getUser`, {\n    id\n  });\n  return response.data;\n};\n\nconst ingredientsOfRecipe = async id => {\n  const response = await axios.post(`http://localhost:3200/recipes/ingredient`, {\n    id\n  });\n  return response.data;\n};\n\nconst diet = async id => {\n  const response = await axios.post(`http://localhost:3200/recipes/diet`, {\n    id\n  });\n  return response.data;\n};\n\nconst category = async id => {\n  const response = await axios.post(`http://localhost:3200/recipes/category`, {\n    id\n  });\n  return response.data;\n};\n\nconst incrementView = async id => {\n  const response = await axios.post(`http://localhost:3200/recipes/increment`, {\n    id\n  });\n  return response.data;\n};\n\nconst uploadRecipe = async (data, recipe) => {\n  const response = await axios.post(`http://localhost:3200/recipes/upload`, data);\n  return response.data;\n};\n\nconst mostPopular = async () => {\n  const response = await axios.post(`http://localhost:3200/recipes/popular`);\n  return response.data;\n};\n\nconst userRecipes = async id => {\n  const response = await axios.post(`http://localhost:3200/recipes/myrecipes`, {\n    id\n  });\n  return response.data;\n};\n\nconst appentIngredient = async name => {\n  const response = await axios.post(`http://localhost:3200/ingredients`, {\n    name\n  });\n  return response.data;\n};\n\nconst appendUser = async values => {\n  const response = await axios.post(`http://localhost:3200/users`, {\n    values\n  });\n  return response.data;\n};\n\nconst updateUser = async values => {\n  const response = await axios.put(`http://localhost:3200/users`, {\n    values\n  });\n  return response.data;\n};\n\nconst destroyRecipe = async id => {\n  const response = await axios.delete(`http://localhost:3200/recipes/${id}`);\n  return response.data;\n};\n\nconst addfavorites = async (userId, recipeId) => {\n  const response = await axios.post(`http://localhost:3200/likes`, {});\n  return response.data;\n};\n\nmodule.exports = {\n  getImages,\n  getRecipes,\n  login,\n  getIngredients,\n  getUnits,\n  getDiets,\n  getCategories,\n  getData,\n  insertDataToDB,\n  getRecipeIngredients,\n  getRecipeDetails,\n  getImage,\n  getUserRecipes,\n  orderBy,\n  getSpecificUser,\n  sendPutReq,\n  ingredientsOfRecipe,\n  category,\n  diet,\n  incrementView,\n  mostPopular,\n  uploadRecipe,\n  userRecipes,\n  updateRecipe,\n  appentIngredient,\n  appendUser,\n  updateUser,\n  destroyRecipe,\n  addfavorites\n};","map":{"version":3,"sources":["C:/Users/User/Documents/projects/fullstack-project/client/src/components/DAL/api.js"],"names":["fetch","require","axios","getData","table","id","response","get","data","getRecipes","recipes","getCategories","categories","getDiets","diets","getUnits","units","getIngredients","ingredients","getImages","getUserRecipes","userId","console","log","usersRecipe","updateRecipe","recipe","post","login","email","password","res","insertDataToDB","placeToInsert","values","then","getRecipeIngredients","recipeId","getRecipeDetails","getImage","orderBy","type","asc","pageNumber","size","sendPutReq","put","getSpecificUser","ingredientsOfRecipe","diet","category","incrementView","uploadRecipe","mostPopular","userRecipes","appentIngredient","name","appendUser","updateUser","destroyRecipe","delete","addfavorites","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\r\nconst fetch = require(\"node-fetch\");\r\nconst axios = require('axios')\r\n\r\nconst getData = async (table, id) => {\r\n  const response = await axios.get(`http://localhost:3200/${table}${!!id ? ('/' + id) : ''}`)\r\n  return response.data\r\n};\r\n\r\nconst getRecipes = async () => {\r\n  const recipes = await axios.get('http://localhost:3200/recipes')\r\n  return recipes.data\r\n};\r\n\r\nconst getCategories = async () => {\r\n  const categories = await axios.get('http://localhost:3200/categories')\r\n  return categories.data\r\n\r\n};\r\n\r\nconst getDiets = async () => {\r\n  const diets = await axios.get('http://localhost:3200/diets')\r\n  return diets.data\r\n};\r\n\r\nconst getUnits = async () => {\r\n  const units = await axios.get('http://localhost:3200/units')\r\n  return units.data\r\n};\r\n\r\nconst getIngredients = async () => {\r\n  const ingredients = await axios.get('http://localhost:3200/ingredients')\r\n  return ingredients.data\r\n};\r\nconst getImages = () => {\r\n  // return Promise.resolve(images);\r\n};\r\nconst getUserRecipes = async (userId) => {\r\n  console.log(userId);\r\n  const usersRecipe = await axios.get(`http://localhost:3200/users/recipes/${userId}`)\r\n  return usersRecipe.data\r\n\r\n}\r\nconst updateRecipe = async (data, recipe) => {\r\n  const response = await axios.post(`http://localhost:3200/recipes/update`, data)\r\n  return response.data\r\n}\r\n\r\nconst login = async (email, password) => {\r\n  const res = await axios.post('http://localhost:3200/users/login', {\r\n    email: email,\r\n    password: password\r\n\r\n  })\r\n  return res.data\r\n\r\n};\r\nconst insertDataToDB = (placeToInsert, values) => {\r\n  axios.post(`http://localhost:3200/${placeToInsert}`, {\r\n    values\r\n  }).then(() => console.log('success'))\r\n}\r\nconst getRecipeIngredients = async (recipeId) => {\r\n  console.log(recipeId);\r\n  const response = await axios.get(`http://localhost:3200/ingredients/${recipeId}`)\r\n  return response.data\r\n}\r\n\r\nconst getRecipeDetails = async (id) => {\r\n  console.log('recipe', id);\r\n  const response = await axios.post(`http://localhost:3200/recipes/getRecipe`, { id })\r\n  return response.data\r\n}\r\nconst getImage = async (recipeId) => {\r\n  console.log('recipe', recipeId);\r\n  const response = await axios.get(`http://localhost:3200/images/${recipeId}`)\r\n  return response.data\r\n}\r\n\r\n\r\nconst orderBy = async (type, asc = 'asc', pageNumber, size = 20) => {\r\n  const response = await axios.get(`http://localhost:3200/recipes/?orderBy=${type}&&order=${asc}&&limit=${pageNumber}&&size=${size}`)\r\n  return response.data\r\n}\r\n\r\nconst sendPutReq = (email, password, id) => {\r\n  axios.put(`http://localhost:3200/users`, { email, password, id })\r\n}\r\n\r\nconst getSpecificUser = async (id) => {\r\n  console.log(id);\r\n\r\n  const response = await axios.post(`http://localhost:3200/users/getUser`, { id })\r\n  return response.data\r\n}\r\nconst ingredientsOfRecipe = async (id) => {\r\n  const response = await axios.post(`http://localhost:3200/recipes/ingredient`, { id })\r\n  return response.data\r\n}\r\nconst diet = async (id) => {\r\n  const response = await axios.post(`http://localhost:3200/recipes/diet`, { id })\r\n  return response.data\r\n}\r\nconst category = async (id) => {\r\n  const response = await axios.post(`http://localhost:3200/recipes/category`, { id })\r\n  return response.data\r\n}\r\nconst incrementView = async (id) => {\r\n  const response = await axios.post(`http://localhost:3200/recipes/increment`, { id })\r\n  return response.data\r\n}\r\n\r\nconst uploadRecipe = async (data, recipe) => {\r\n  const response = await axios.post(`http://localhost:3200/recipes/upload`, data)\r\n  return response.data\r\n}\r\nconst mostPopular = async () => {\r\n  const response = await axios.post(`http://localhost:3200/recipes/popular`)\r\n  return response.data\r\n}\r\n\r\nconst userRecipes = async (id) => {\r\n  const response = await axios.post(`http://localhost:3200/recipes/myrecipes`, { id })\r\n  return response.data\r\n}\r\nconst appentIngredient = async (name) => {\r\n  const response = await axios.post(`http://localhost:3200/ingredients`, { name })\r\n  return response.data\r\n}\r\nconst appendUser = async (values) => {\r\n  const response = await axios.post(`http://localhost:3200/users`, { values })\r\n  return response.data\r\n}\r\nconst updateUser = async (values) => {\r\n  const response = await axios.put(`http://localhost:3200/users`, { values })\r\n  return response.data\r\n}\r\nconst destroyRecipe = async (id) => {\r\n  const response = await axios.delete(`http://localhost:3200/recipes/${id}`)\r\n  return response.data\r\n}\r\nconst addfavorites=async(userId,recipeId)=>{\r\n  const response = await axios.post(`http://localhost:3200/likes`,{})\r\n  return response.data\r\n}\r\nmodule.exports = {\r\n  getImages,\r\n  getRecipes,\r\n  login,\r\n  getIngredients,\r\n  getUnits,\r\n  getDiets,\r\n  getCategories,\r\n  getData,\r\n  insertDataToDB,\r\n  getRecipeIngredients,\r\n  getRecipeDetails,\r\n  getImage,\r\n  getUserRecipes,\r\n  orderBy,\r\n  getSpecificUser,\r\n  sendPutReq,\r\n  ingredientsOfRecipe,\r\n  category,\r\n  diet,\r\n  incrementView,\r\n  mostPopular,\r\n  uploadRecipe,\r\n  userRecipes,\r\n  updateRecipe,\r\n  appentIngredient,\r\n  appendUser, updateUser, destroyRecipe,\r\n  addfavorites\r\n};\r\n"]},"metadata":{},"sourceType":"module"}