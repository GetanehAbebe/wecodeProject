[{"C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\index.js":"1","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\reportWebVitals.js":"2","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\Pages\\Cart\\App.js":"3","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\Pages\\Cart\\Header.js":"4","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\Pages\\Cart\\Main.js":"5","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\Pages\\Cart\\Basket.js":"6","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\DAL\\api.js":"7","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\Pages\\Cart\\product.js":"8","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\App.js":"9","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\Pages\\Home.jsx":"10","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\utills\\ItemDetails.jsx":"11","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\Pages\\Cart\\Cart.jsx":"12","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\forms\\RegisterForm.jsx":"13","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\forms\\EditRecipe.jsx":"14","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\sections\\NavBar.jsx":"15","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\forms\\NewRecipeForm.jsx":"16","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\sections\\Footer.jsx":"17","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\sections\\SearchRecipes.jsx":"18","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\forms\\Login.jsx":"19","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\utills\\validateInfo.js":"20","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\utills\\useForm.js":"21","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\Pages\\Gallery.js":"22","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\context\\RecipesContext.js":"23","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\context\\GlobalState.js":"24","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\sections\\Cards.jsx":"25","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\sections\\Header.jsx":"26","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\forms\\InputCreator.jsx":"27","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\utills\\ErrorMessages.jsx":"28","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\sections\\CardItem.jsx":"29","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\utills\\Modal.jsx":"30","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\utills\\Pagination.jsx":"31","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\sections\\ShowAllRecipes.js":"32","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\context\\AppReducer.js":"33","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\sections\\invitation.jsx":"34","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\Pages\\Profile.jsx":"35","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\context\\types.js":"36","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\Pages\\Cart\\LocalCart.js":"37","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\context\\AuthApi.js":"38","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\Pages\\MyRecipes.js":"39","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\forms\\TextField.js":"40","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\forms\\FormikRegister.jsx":"41","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\Pages\\RecipePage.js":"42","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\utills\\Details.jsx":"43","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\forms\\formikNewRecipe.js":"44","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\forms\\FormikNewRecipe.js":"45","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\Pages\\MyFavorites.js":"46","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\Pages\\Search.js":"47"},{"size":550,"mtime":1626649312890,"results":"48","hashOfConfig":"49"},{"size":362,"mtime":499162500000,"results":"50","hashOfConfig":"49"},{"size":1641,"mtime":1624998738159,"results":"51","hashOfConfig":"52"},{"size":540,"mtime":1624998299593,"results":"53","hashOfConfig":"52"},{"size":474,"mtime":1624998770718,"results":"54","hashOfConfig":"52"},{"size":2424,"mtime":1625395288788,"results":"55","hashOfConfig":"49"},{"size":5536,"mtime":1626804123197,"results":"56","hashOfConfig":"49"},{"size":386,"mtime":1624998786184,"results":"57","hashOfConfig":"52"},{"size":3502,"mtime":1626716358862,"results":"58","hashOfConfig":"49"},{"size":482,"mtime":1626189412922,"results":"59","hashOfConfig":"49"},{"size":6308,"mtime":1626928637941,"results":"60","hashOfConfig":"49"},{"size":885,"mtime":1625333946687,"results":"61","hashOfConfig":"49"},{"size":7752,"mtime":1626899151983,"results":"62","hashOfConfig":"49"},{"size":1396,"mtime":1626554258069,"results":"63","hashOfConfig":"49"},{"size":6588,"mtime":1626910243888,"results":"64","hashOfConfig":"49"},{"size":19172,"mtime":1626901631585,"results":"65","hashOfConfig":"49"},{"size":1864,"mtime":1626910198975,"results":"66","hashOfConfig":"49"},{"size":3003,"mtime":1626894345439,"results":"67","hashOfConfig":"49"},{"size":3829,"mtime":1626899946342,"results":"68","hashOfConfig":"49"},{"size":2712,"mtime":1626605810140,"results":"69","hashOfConfig":"49"},{"size":1817,"mtime":1626606135854,"results":"70","hashOfConfig":"49"},{"size":1005,"mtime":1626902329754,"results":"71","hashOfConfig":"49"},{"size":1401,"mtime":1625333765639,"results":"72","hashOfConfig":"49"},{"size":1686,"mtime":1625333818184,"results":"73","hashOfConfig":"49"},{"size":2815,"mtime":1626911531554,"results":"74","hashOfConfig":"49"},{"size":477,"mtime":1626910119901,"results":"75","hashOfConfig":"49"},{"size":922,"mtime":1624476345260,"results":"76","hashOfConfig":"49"},{"size":220,"mtime":1626065180763,"results":"77","hashOfConfig":"49"},{"size":968,"mtime":1626862481569,"results":"78","hashOfConfig":"49"},{"size":2381,"mtime":1626374134626,"results":"79","hashOfConfig":"49"},{"size":624,"mtime":1625753109224,"results":"80","hashOfConfig":"49"},{"size":7603,"mtime":1626902439079,"results":"81","hashOfConfig":"49"},{"size":739,"mtime":1625213200065,"results":"82","hashOfConfig":"49"},{"size":547,"mtime":1626877759293,"results":"83","hashOfConfig":"49"},{"size":752,"mtime":1626684281618,"results":"84","hashOfConfig":"49"},{"size":153,"mtime":1625212838694,"results":"85","hashOfConfig":"49"},{"size":649,"mtime":1625639485768,"results":"86","hashOfConfig":"49"},{"size":103,"mtime":1625682356864,"results":"87","hashOfConfig":"49"},{"size":3580,"mtime":1626900315359,"results":"88","hashOfConfig":"49"},{"size":602,"mtime":1626621599614,"results":"89","hashOfConfig":"49"},{"size":4707,"mtime":1626623520252,"results":"90","hashOfConfig":"49"},{"size":2196,"mtime":1626375263254,"results":"91","hashOfConfig":"49"},{"size":4533,"mtime":1626431132797,"results":"92","hashOfConfig":"49"},{"size":4735,"mtime":1626447362302,"results":"93","hashOfConfig":"49"},{"size":5437,"mtime":1626619607662,"results":"94","hashOfConfig":"49"},{"size":2298,"mtime":1626876673903,"results":"95","hashOfConfig":"49"},{"size":8085,"mtime":1626897796806,"results":"96","hashOfConfig":"49"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},"1vwe6rl",{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"il4ixu",{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"112","usedDeprecatedRules":"99"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"99"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"99"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"99"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"99"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"99"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"99"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"99"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"99"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"99"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"99"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"99"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"99"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"99"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"99"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"99"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"99"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"99"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"99"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"99"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"99"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"99"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"99"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"207"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"99"},{"filePath":"211","messages":"212","errorCount":5,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"99"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"99"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"99"},"C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\index.js",[],["222","223"],"C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\Pages\\Cart\\App.js",["224","225","226"],"C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\Pages\\Cart\\Header.js",[],"C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\Pages\\Cart\\Main.js",[],"C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\Pages\\Cart\\Basket.js",[],"C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\DAL\\api.js",["227","228"],"\"use strict\";\r\nconst fetch = require(\"node-fetch\");\r\nconst axios = require('axios')\r\n\r\nconst getData = async (table, id) => {\r\n  const response = await axios.get(`http://localhost:3200/${table}${!!id ? ('/' + id) : ''}`)\r\n  return response.data\r\n};\r\n\r\nconst getRecipes = async () => {\r\n  const recipes = await axios.get('http://localhost:3200/recipes')\r\n  return recipes.data\r\n};\r\n\r\nconst getCategories = async () => {\r\n  const categories = await axios.get('http://localhost:3200/categories')\r\n  return categories.data\r\n\r\n};\r\n\r\nconst getDiets = async () => {\r\n  const diets = await axios.get('http://localhost:3200/diets')\r\n  return diets.data\r\n};\r\n\r\nconst getUnits = async () => {\r\n  const units = await axios.get('http://localhost:3200/units')\r\n  return units.data\r\n};\r\n\r\nconst getIngredients = async () => {\r\n  const ingredients = await axios.get('http://localhost:3200/ingredients')\r\n  return ingredients.data\r\n};\r\nconst getImages = () => {\r\n  // return Promise.resolve(images);\r\n};\r\nconst getUserRecipes = async (userId) => {\r\n  console.log(userId);\r\n  const usersRecipe = await axios.get(`http://localhost:3200/users/recipes/${userId}`)\r\n  return usersRecipe.data\r\n\r\n}\r\nconst updateRecipe = async (data, recipe) => {\r\n  const response = await axios.post(`http://localhost:3200/recipes/update`, data)\r\n  return response.data\r\n}\r\n\r\nconst login = async (email, password) => {\r\n  const res = await axios.post('http://localhost:3200/users/login', {\r\n    email: email,\r\n    password: password\r\n\r\n  })\r\n  return res.data\r\n\r\n};\r\nconst insertDataToDB = (placeToInsert, values) => {\r\n  axios.post(`http://localhost:3200/${placeToInsert}`, {\r\n    values\r\n  }).then(() => console.log('success'))\r\n}\r\nconst getRecipeIngredients = async (recipeId) => {\r\n  console.log(recipeId);\r\n  const response = await axios.get(`http://localhost:3200/ingredients/${recipeId}`)\r\n  return response.data\r\n}\r\n\r\nconst getRecipeDetails = async (id) => {\r\n  console.log('recipe', id);\r\n  const response = await axios.post(`http://localhost:3200/recipes/getRecipe`, { id })\r\n  return response.data\r\n}\r\nconst getImage = async (recipeId) => {\r\n  console.log('recipe', recipeId);\r\n  const response = await axios.get(`http://localhost:3200/images/${recipeId}`)\r\n  return response.data\r\n}\r\n\r\n\r\nconst orderBy = async (type, asc = 'asc', pageNumber, size = 20) => {\r\n  const response = await axios.get(`http://localhost:3200/recipes/?orderBy=${type}&&order=${asc}&&limit=${pageNumber}&&size=${size}`)\r\n  return response.data\r\n}\r\n\r\nconst sendPutReq = (email, password, id) => {\r\n  axios.put(`http://localhost:3200/users`, { email, password, id })\r\n}\r\n\r\nconst getSpecificUser = async (id) => {\r\n  console.log(id);\r\n\r\n  const response = await axios.post(`http://localhost:3200/users/getUser`, { id })\r\n  return response.data\r\n}\r\nconst ingredientsOfRecipe = async (id) => {\r\n  const response = await axios.post(`http://localhost:3200/recipes/ingredient`, { id })\r\n  return response.data\r\n}\r\nconst diet = async (id) => {\r\n  const response = await axios.post(`http://localhost:3200/recipes/diet`, { id })\r\n  return response.data\r\n}\r\nconst category = async (id) => {\r\n  const response = await axios.post(`http://localhost:3200/recipes/category`, { id })\r\n  return response.data\r\n}\r\nconst incrementView = async (id) => {\r\n  const response = await axios.post(`http://localhost:3200/recipes/increment`, { id })\r\n  return response.data\r\n}\r\n\r\nconst uploadRecipe = async (data, recipe) => {\r\n  const response = await axios.post(`http://localhost:3200/recipes/upload`, data)\r\n  return response.data\r\n}\r\nconst mostPopular = async () => {\r\n  const response = await axios.post(`http://localhost:3200/recipes/popular`)\r\n  return response.data\r\n}\r\n\r\nconst userRecipes = async (id) => {\r\n  const response = await axios.post(`http://localhost:3200/recipes/myrecipes`, { id })\r\n  return response.data\r\n}\r\nconst appentIngredient = async (name) => {\r\n  const response = await axios.post(`http://localhost:3200/ingredients`, { name })\r\n  return response.data\r\n}\r\nconst appendUser = async (values) => {\r\n  const response = await axios.post(`http://localhost:3200/users`, { values })\r\n  return response.data\r\n}\r\nconst updateUser = async (values) => {\r\n  const response = await axios.put(`http://localhost:3200/users`, { values })\r\n  return response.data\r\n}\r\nconst destroyRecipe = async (userId, recipeId) => {\r\n  const response = await axios.post(`http://localhost:3200/recipes/delete`, { userId, recipeId })\r\n  return response.data\r\n}\r\nconst addfavorites = async (userId, recipeId) => {\r\n  const response = await axios.post(`http://localhost:3200/likes`, { userId, recipeId })\r\n  return response.data\r\n}\r\nconst getFavorites = async (id) => {\r\n  const response = await axios.get(`http://localhost:3200/likes/${id}`)\r\n  return response.data\r\n\r\n}\r\nconst deleteFromFavorites = async (userId, recipeId) => {\r\n  console.log(userId, recipeId);\r\n\r\n  const response = await axios.post(`http://localhost:3200/likes/delete`, { userId, recipeId })\r\n  return response.data\r\n\r\n}\r\nmodule.exports = {\r\n  getImages,\r\n  getRecipes,\r\n  login,\r\n  getIngredients,\r\n  getUnits,\r\n  getDiets,\r\n  getCategories,\r\n  getData,\r\n  insertDataToDB,\r\n  getRecipeIngredients,\r\n  getRecipeDetails,\r\n  getImage,\r\n  getUserRecipes,\r\n  orderBy,\r\n  getSpecificUser,\r\n  sendPutReq,\r\n  ingredientsOfRecipe,\r\n  category,\r\n  diet,\r\n  incrementView,\r\n  mostPopular,\r\n  uploadRecipe,\r\n  userRecipes,\r\n  updateRecipe,\r\n  appentIngredient,\r\n  appendUser, updateUser, destroyRecipe,\r\n  addfavorites,\r\n  getFavorites,\r\n  deleteFromFavorites\r\n};\r\n","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\Pages\\Cart\\product.js",[],"C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\App.js",["229","230","231"],"import React, { useContext, useEffect } from \"react\";\nimport Navbar from \"./components/sections/NavBar\";\nimport { useState } from \"react\";\n// import \"./App.css\";\nimport Home from \"./components/Pages/Home\";\nimport FormikNewRecipe from './components/forms/FormikNewRecipe'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport FormikRegister from './components/forms/FormikRegister'\nimport RegisterForm from \"./components/forms/RegisterForm\";\nimport NewRecipeForm from \"./components/forms/NewRecipeForm\";\nimport MyRecipes from \"./components/Pages/MyRecipes\"\nimport Login from \"./components/forms/Login\";\nimport Cart from \"./components/Pages/Cart/Cart\";\nimport ItemDetails from \"./components/utills/ItemDetails\";\nimport EditRecipe from \"./components/forms/EditRecipe\";\nimport SearchRecipes from \"./components/sections/SearchRecipes\";\nimport Search from './components/Pages/Search'\nimport Basket from \"./components/Pages/Cart/Basket\";\nimport MyFovorites from './components/Pages/MyFavorites'\nimport Gallery from \"./components/Pages/Gallery\";\nimport Profile from './components/Pages/Profile'\nimport AuthApi from \"./components/context/AuthApi\";\nimport Cookies from 'js-cookie'\nimport Details from './components/utills/Details'\n\nconst Routes = () => {\n  const Auth = useContext(AuthApi)\n  // return <Router>\n  //  \n  return <div>\n    <Navbar />\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      {/* </Switch><Route path=\"/products\" exact component={</SearchRecipes>} /> */}\n      <Route exact path=\"/products\" ><Gallery /></Route>\n      <Route path=\"/myrecipes\" ><MyRecipes /></Route>\n\n      <Route path=\"/page\" ><Details /></Route>\n      <Route path=\"/formik\" ><FormikRegister /></Route>\n      <Route path=\"/new-recipe\" component={NewRecipeForm} />\n      <Route path=\"/sign-up\" component={RegisterForm} />\n      <Route path=\"/cart/:id\" component={Cart} />\n      <Route path=\"/basket\" exact component={Basket} />\n      <Route path=\"/products/:id\" component={ItemDetails} />\n      <Route path=\"/edit/:id\" component={EditRecipe} />\n      <Route path=\"/myfavorites\" component={MyFovorites} />\n      <Route path=\"/search\" component={Search} />\n\n      {/* <Route path=\"/profile\" conponent={Profile} /> */}\n      {/* <Route path=\"/newcart\" component={LocalCart} /> */}\n      <ProtectedProfile path='/profile' exact auth={Auth.auth} component={Profile} />\n      <ProtectedLogin path='/login' auth={Auth.auth} component={Login} />\n    </Switch>\n  </div >\n}\n\nconst myRecipesProtected = ({ auth, component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={() => !!auth ? (\n        < Component />) : (<Redirect to={'/login'} />)}\n    />)\n}\n\nconst ProtectedLogin = ({ auth, component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={() => !auth ? (\n        < Component />) : (<Redirect to={'/profile'} />)}\n    />)\n}\n\nconst ProtectedProfile = ({ auth, component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={() => auth ? (\n        < Component />) : <Redirect to={'/login'}\n      />}\n    />)\n}\n\nfunction App() {\n  const [auth, setAuth] = useState(false)\n  const readCookie = () => {\n    const user = Cookies.get('user');\n    if (user) setAuth(true)\n  }\n\n  useEffect(() => {\n    readCookie()\n  }, [])\n  return <div>\n    <AuthApi.Provider value={{ auth, setAuth }}>\n      <Router >\n        <Routes />\n      </Router >\n    </AuthApi.Provider>\n  </div>\n}\n\nexport default App;\n","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\Pages\\Home.jsx",[],"C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\utills\\ItemDetails.jsx",["232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247"],"C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\Pages\\Cart\\Cart.jsx",["248","249","250","251"],"import { useState, useEffect } from \"react\";\r\nimport { getRecipes } from \"../../DAL/api\";\r\nconst fetchData = require('../../DAL/api')\r\n\r\nfunction Cart({ match }) {\r\n  const [cartList, setCartList] = useState([\r\n    { recipeId: 1 },\r\n    { recipeId: 2 },\r\n    { recipeId: 3 },\r\n  ]);\r\n  useEffect(async () => {\r\n    const recipes = await fetchData.getRecipes();\r\n    console.log(recipes);\r\n    const recipe = recipes.filter((item) => item.recipeId == match.params.id);\r\n    setCartList([...cartList, ...recipe]);\r\n    console.log(recipe);\r\n    console.log(match, cartList);\r\n  }, []);\r\n  return (\r\n    <div className=\"m-auto text-center\">\r\n      <h1>Welcome to Cart</h1>\r\n      <ul>\r\n        {cartList.length > 0 &&\r\n          cartList.map((item) => {\r\n            return <li key={item.recipeId}>{item.name}</li>;\r\n          })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\nexport default Cart;\r\n","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\forms\\RegisterForm.jsx",["252","253","254","255","256","257","258","259"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./registerform.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Form, Col, Button, Row } from \"react-bootstrap\";\r\nimport InputCreator from \"./InputCreator\";\r\n\r\nimport { getData, insertDataToDB, appendUser, getSpecificUser, updateUser } from \"../DAL/api\";\r\nimport * as Yup from 'yup'\r\nimport { useFormik } from \"formik\";\r\nconst Cookies = require('js-cookie')\r\nconst RegisterForm = ({ recipe, editUser }) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [diets, setDiets] = useState([]);\r\n  const [message, setMessage] = useState('')\r\n  const history = useHistory()\r\n\r\n\r\n\r\n\r\n  const insertToForm = (user) => {\r\n    console.log('user', user);\r\n    const email = user.email;\r\n    console.log(email);\r\n    formik.values.firstName = user.firstName;\r\n    formik.values.lastName = user.lastName;\r\n    formik.values.email = user.email;\r\n    formik.values.password = user.password;\r\n    formik.values.confirmPassword = user.password;\r\n    const arr = []\r\n    user.favorites.map(item => {\r\n      arr.push(item.DietId)\r\n    })\r\n    formik.values.diet = arr;\r\n\r\n  }\r\n\r\n  useEffect(async () => {\r\n    if (editUser) {\r\n      const id = Cookies.get(\"user\")\r\n      setEditMode(true);\r\n      const getUser = await getSpecificUser(id)\r\n      console.log(getUser);\r\n      insertToForm(getUser)\r\n\r\n    }\r\n\r\n    const fetchDiets = await getData('diets')\r\n    setDiets(fetchDiets.map(item => {\r\n      return {\r\n        id: ''+item.id,\r\n        name: item.name,\r\n        select: formik.values.diet.includes(item.id)\r\n      }\r\n    }));\r\n  }, []);\r\n\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      diet: [],\r\n      confirmPassword: '',\r\n\r\n    },\r\n\r\n    validationSchema: Yup.object({\r\n      firstName: Yup.string()\r\n        .max(15, 'Must be 15 characters or less')\r\n        .min(3),\r\n      lastName: Yup.string()\r\n        .max(20, 'Must be 20 characters or less')\r\n        .min(3),\r\n      email: Yup.string()\r\n        .email('Email is invalid')\r\n        .required('Email is required'),\r\n      password: Yup.string()\r\n        .min(8, 'Password must be at least 8 charaters')\r\n        .required('Password is required'),\r\n      confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], 'Password must match')\r\n        .required('Confirm password is required'),\r\n      diet: Yup.array().required('required')\r\n        .min(2, 'must check 2 types')\r\n    })\r\n    ,\r\n\r\n    onSubmit: async (values) => {\r\n      // const res = await insertDataToDB('users', formik.values);\r\n\r\n      const data = new FormData();\r\n      formik.values.id = Cookies.get(\"user\");\r\n      if (!editUser) {\r\n        const response = await appendUser(values)\r\n        history.push('/login')\r\n      } else {\r\n\r\n        const update = await updateUser(values)\r\n        setMessage('updated')\r\n      }\r\n\r\n    },\r\n\r\n  })\r\n  console.log(formik.values);\r\n  console.log(diets);\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Form  onSubmit={formik.handleSubmit}>\r\n        <div className=\"form-inner\">\r\n          <Form.Row className=\"m-auto text-center\">\r\n            <h1 className=\"text-center\">{editMode ? \"Update Profile\" : \"Registration Page\"}</h1>\r\n\r\n          </Form.Row>\r\n          {<small>{message}</small>}\r\n          <hr />\r\n          <Form.Group>\r\n            <InputCreator\r\n              title=\"First name\"\r\n              type=\"text\"\r\n              required=\"true\"\r\n              value={formik.values.firstName}\r\n              placeholder=\"First Name\"\r\n              sign={<i class=\"fas fa-user\"></i>}\r\n              onChange={formik.handleChange}\r\n              name=\"firstName\"\r\n            />\r\n            {formik.touched.firstName && formik.errors.firstName ? <small className='text-danger'>{formik.errors.firstName} </small> : \"\"}\r\n\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <InputCreator\r\n              title=\"Last name\"\r\n              type=\"text\"\r\n              required=\"true\"\r\n              value={formik.values.lastName}\r\n              placeholder=\"last Name\"\r\n              sign={<i class=\"fas fa-user\"></i>}\r\n              onChange={formik.handleChange}\r\n              name=\"lastName\"\r\n            />\r\n            {formik.touched.lastName && formik.errors.lastName ? <small className='text-danger'>{formik.errors.lastName} </small> : \"\"}\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGridPassword\">\r\n            <InputCreator\r\n              title=\"Email\"\r\n              type=\"email\"\r\n              value={formik.values.email}\r\n              required=\"true\"\r\n              onChange={formik.handleChange}\r\n              placeholder=\"Email\"\r\n              sign={<i class=\"fas fa-mail-bulk\"></i>}\r\n              name=\"email\"\r\n            />\r\n            {formik.touched.email && formik.errors.email ? <small className='text-danger'>{formik.errors.email} </small> : \"\"}\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <InputCreator\r\n              title=\"Password\"\r\n              type=\"password\"\r\n              required=\"true\"\r\n              value={formik.values.password}\r\n              placeholder=\"password\"\r\n              sign={<i class=\"fas fa-mail-bulk\"></i>}\r\n              onChange={formik.handleChange}\r\n              name=\"password\"\r\n             \r\n            />\r\n            {formik.touched.password && formik.errors.password ? <small className='text-danger'>{formik.errors.password} </small> : \"\"}\r\n\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <InputCreator\r\n              title=\"Confirm password\"\r\n              type=\"password\"\r\n              required=\"true\"\r\n              value={formik.values.confirmPassword}\r\n              placeholder=\"\"\r\n              sign={<i class=\"fas fa-mail-bulk\"></i>}\r\n              onChange={formik.handleChange}\r\n              name=\"confirmPassword\"\r\n            />\r\n            {formik.touched.confirmPassword && formik.errors.confirmPassword ? <small className='text-danger'>{formik.errors.confirmPassword} </small> : \"\"}\r\n\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Row>\r\n              {/* <Col className='col-sm-2'>\r\n                <label className='text-left d-block'>Favorite diet</label>\r\n              </Col> */}\r\n              {/* <Col className=\"d-flex flex-row flex-wrap col-sm-10 justify-content-center\">\r\n                {diets.length &&\r\n                  diets.map((diet) => {\r\n                    return (\r\n                      <Form.Check\r\n                        type=\"checkbox\"\r\n                        label={diet.name}\r\n                        name={'diet'}\r\n                        value={''+diet.id}\r\n                        checked={diet.select}\r\n                        onChange={(e) => {\r\n                          let checked = e.target.checked;\r\n                          setDiets(diets.map(item => {\r\n                            diet.select = checked;\r\n                            return item\r\n                          }))\r\n                          formik.handleChange(e);\r\n                        }}\r\n                      //  {...formik.getFieldProps(\"diet\")}\r\n                      />\r\n                    );\r\n                  })}\r\n                {formik.touched.diet && formik.errors.diet ? <small className='text-danger'>{formik.errors.diet} </small> : \"\"}\r\n\r\n              </Col> */}\r\n            </Row>\r\n          </Form.Group>\r\n          {\r\n            <Button type=\"submit\" id=\"submit\" >\r\n              {editMode ? \"update\" : \"sign-up\"}\r\n            </Button>\r\n          }\r\n          {!editMode && <Link to=\"/login\">Have an acount?login</Link>}\r\n        </div>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\forms\\EditRecipe.jsx",["260","261","262","263","264","265","266","267","268","269","270"],"import React, { useState, useContext, useEffect } from \"react\";\r\n\r\nimport { RecipesContext } from \"../context/RecipesContext\";\r\n\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Form, FormGroup, Button } from \"react-bootstrap\";\r\nimport { getRecipes } from \"../DAL/api\";\r\nimport NewRecipeForm from \"./NewRecipeForm\";\r\n\r\nfunction EditRecipe(props) {\r\n  const { match } = props\r\n  const { edituser } = useContext(GlobalContext);\r\n  const [selectedRecipe, setSelectedRecipe] = useState({});\r\n  const [recipeId, setRecipeId] = useState(0);\r\n  // const { editRecipe } = useContext(RecipesContext);\r\n  const history = useHistory();\r\n  const currenRecipeId = 5\r\n  console.log(currenRecipeId);\r\n  useEffect(() => {\r\n    const par = match.params.id;\r\n    setRecipeId(par)\r\n    console.log('par', par);\r\n\r\n\r\n  }, []);\r\n\r\n  const onChange = (e) => {\r\n    setSelectedRecipe({ ...selectedRecipe, [e.target.name]: e.target.value });\r\n  };\r\n  console.log(\"recipe\", selectedRecipe);\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    //editUser(selectedRecipe);\r\n    history.push(\"/\");\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  return (\r\n    <>\r\n      {recipeId && <NewRecipeForm mode={true} recipeId={recipeId} />}\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default EditRecipe;\r\n\r\n\r\n\r\n// export default EditForm;\r\n","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\sections\\NavBar.jsx",["271","272","273","274","275","276","277","278","279"],"C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\forms\\NewRecipeForm.jsx",["280","281","282","283","284","285","286","287","288","289","290","291","292","293","294"],"import { useEffect, useState } from \"react\";\r\nimport * as Yup from 'yup'\r\nimport { Accordion, Card, Button, Form, Col, Row, Table, } from \"react-bootstrap\";\r\nimport useForm from \"../utills/useForm\";\r\nimport validate from \"../utills/validateInfo\";\r\nimport { getData, insertDataToDB, ingredientsOfRecipe, uploadRecipe, appentIngredient, getRecipeDetails, updateRecipe } from \"../DAL/api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ErrorMessages from \"../utills/ErrorMessages\";\r\nimport { useFormik } from \"formik\";\r\nconst Cookies = require('js-cookie')\r\nconst axios = require('axios')\r\n\r\n\r\nfunction NewRecipeForm({ match, recipeId, mode }) {\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const [image, setImage] = useState(null)\r\n  const [units, setUnits] = useState([]);\r\n  const [instructions, setInstructions] = useState([]);\r\n  const [guide, setGuide] = useState([]);\r\n  const [diets, setDiets] = useState([]);\r\n  const [recipeIngredient, setRecipeIngredient] = useState({})\r\n  const [recipeGuide, setRecipeGuide] = useState({})\r\n  const [editMode, setEditMode] = useState(false)\r\n  const [newIngredient, setNewIngredient] = useState('')\r\n  const history = useHistory()\r\n  const [addIng, setAddIng] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n  const [categories, setCategories] = useState([]);\r\n  // const { handleSubmit, handleChange, values, errors } = useForm(submit, validate);\r\n\r\n\r\n\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      source: \"\",\r\n      sourceUrl: \"\",\r\n      diet: [],\r\n      category: [],\r\n      prepTimeMin: '',\r\n      description: '',\r\n      image: '',\r\n      ingredient: '',\r\n    },\r\n\r\n    validationSchema: Yup.object({\r\n      name: Yup.string()\r\n        .min(3)\r\n        .max(30).required(),\r\n      // image: Yup.string().required(\"required\"),\r\n      ingredient: Yup.string().max(20).min(3).matches(/[a-z]/, 'must be letters in lowercase'),\r\n      diet: Yup.array().min(2, 'choose at least 2 types').required(),\r\n      category: Yup.array().min(2, 'choose at least 2 types').required(),\r\n      prepTimeMin: Yup.string(),\r\n      description: Yup.string().min(3).max(150),\r\n      source: Yup.string().min(3, 'min 3 charachters').max(40, 'must be 20 charachters or less').required('required')\r\n    }),\r\n    onSubmit: async (values) => {\r\n      const data = new FormData();\r\n      formik.values.guide = guide;\r\n      formik.values.userId = Cookies.get('user')\r\n      formik.values.instructions = instructions\r\n      if (recipeId) formik.values.id = recipeId\r\n      data.append(\"image\", image)\r\n      data.append(\"user\", Cookies.get('user'))\r\n      data.append(\"recipe\", JSON.stringify(formik.values))\r\n      if (!recipeId) {\r\n        const response = await uploadRecipe(data)\r\n      } else {\r\n        const update = await updateRecipe(data)\r\n      }\r\n      submit()\r\n    },\r\n\r\n  })\r\n  const deleteInstruction = (index) => {\r\n    instructions.splice(index, 1);\r\n    setInstructions([...instructions]);\r\n  };\r\n\r\n  const deleteGuide = (index) => {\r\n    guide.splice(index, 1);\r\n    setGuide([...guide]);\r\n  };\r\n  const checkThefilds = (obj) => {\r\n    if (Object.keys(obj).length === 0 || Object.keys(obj).length < 3) return false\r\n    for (const prop in obj) {\r\n      console.log('prop', prop);\r\n      if (!obj[prop].length) return false\r\n\r\n    }\r\n    return true\r\n  }\r\n\r\n  const addToList = (value) => {\r\n    if (value === 'ingredients') {\r\n\r\n      console.log(formik.values.ingredient, instructions.includes(formik.values.ingredient));\r\n      const check = instructions.filter(item => item.ingredient === formik.values.ingredient)\r\n      if (!formik.errors.ingredient) {\r\n        recipeIngredient.ingredient = formik.values.ingredient\r\n      }\r\n\r\n      if (check.length === 0) {\r\n        if (checkThefilds(recipeIngredient)) {\r\n          setInstructions([...instructions, { ...recipeIngredient }])\r\n          formik.values.ingredient = ''\r\n        } else {\r\n          alert('please check the fields')\r\n        }\r\n      }\r\n      else alert(`you can't insert the ${formik.values.ingredient} twice into ingredients`)\r\n    }\r\n    if (value === 'guide') setGuide([...guide, recipeGuide])\r\n\r\n  }\r\n\r\n\r\n  const insertDataToForm = (recipe) => {\r\n    formik.values.name = recipe.recipe.name\r\n    formik.values.source = recipe.recipe.source\r\n    formik.values.sourceUrl = recipe.recipe.sourceUrl\r\n    formik.values.description = recipe.recipe.description\r\n    formik.values.isPrivate = !!recipe.recipe.isPrivate\r\n    formik.values.prepTimeMin = recipe.recipe.prepTimeMin\r\n    formik.values.image = recipe.images[0]?.url\r\n    console.log(recipe.category);\r\n    setImage(recipe.images[0]?.url)\r\n    console.log(recipe.ingredients);\r\n    setGuide(recipe.instructions)\r\n    setInstructions(recipe.ingredients)\r\n    const arr = []\r\n    for (let x of recipe.category) {\r\n      console.log(x);\r\n      arr.push(+(x.categoryId))\r\n    }\r\n    formik.values.category = arr\r\n    const diets = []\r\n    for (let x of recipe.diet) {\r\n\r\n      diets.push(+(x.dietId))\r\n    }\r\n    formik.values.diet = diets;\r\n  }\r\n\r\n  async function submit() {\r\n    // if (checkErrors(errors)) {\r\n    const data = new FormData();\r\n    formik.values.guide = guide;\r\n    formik.values.instructions = instructions\r\n\r\n    if (recipeId) formik.values.id = recipeId\r\n    data.append(\"image\", image)\r\n    data.append(\"user\", Cookies.get('user'))\r\n    data.append(\"recipe\", JSON.stringify(formik.values))\r\n    if (!recipeId) {\r\n      const response = await uploadRecipe(data)\r\n      if (response) setMessage('Successfully completed')\r\n    } else {\r\n      const update = await updateRecipe(data)\r\n\r\n      if (update) setMessage('updated')\r\n    }\r\n  }\r\n  const changeIngredient = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === 'ingredient') return\r\n    // console.log('ingredient', value);\r\n\r\n    // if (name === 'ingredient') {\r\n\r\n    //   for (let x of instructions) {\r\n    //     console.log(x.ingredient);\r\n    //     if (x.ingredient === value) alert('the ingredient already inserted')\r\n\r\n    //   }\r\n    // }\r\n\r\n\r\n    setRecipeIngredient({ ...recipeIngredient, [name]: value })\r\n  }\r\n\r\n  const changeGuide = (e) => {\r\n    const { name, value } = e.target;\r\n    setRecipeGuide({ ...recipeGuide, [name]: value })\r\n  }\r\n\r\n\r\n  const addIngtoDB = async () => {\r\n    for (let ing of ingredients) {\r\n      if (ing.name === newIngredient) alert('already exist')\r\n    }\r\n    const response = await appentIngredient(newIngredient);\r\n    setAddIng(false)\r\n  }\r\n\r\n  useEffect(async () => {\r\n    if (recipeId) {\r\n      setEditMode(true)\r\n      const instruc = await ingredientsOfRecipe(recipeId)\r\n      const formRecipe = await getRecipeDetails(recipeId)\r\n      insertDataToForm(formRecipe)\r\n      console.log(\"instruc\", formRecipe);\r\n\r\n    }\r\n    if (!Cookies.get('user')) history.push('/login')\r\n    const fetchIngredient = await getData('ingredients')\r\n    const fetchDiets = await getData('diets')\r\n    const fetchUnits = await getData('units')\r\n    const fetchCategories = await getData('categories')\r\n    setDiets(fetchDiets.map(item => {\r\n      return {\r\n        select: formik.values.diet.includes(item.id),\r\n        name: item.name,\r\n        id: item.id\r\n      }\r\n    }));\r\n    setUnits(fetchUnits);\r\n    setIngredients(fetchIngredient);\r\n    setCategories(fetchCategories.map(cat => {\r\n      return {\r\n        select: formik.values.category.includes(cat.id),\r\n        name: cat.name,\r\n        id: cat.id\r\n      }\r\n    }));\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <Form onSubmit={formik.handleSubmit} encType=\"multipart/form-data\" className='text-dark'>\r\n      {message.length ? <p>{message}</p> : null}\r\n      <div className=\"form-inner\">\r\n        <h1 className='text-center'>{editMode ? \"Update Recipe\" : \"Add Recipe\"}</h1>\r\n        <Row className=\"\">\r\n          <Col className=\"col-md-7\">\r\n            <Form.Label>Recipe name </Form.Label>\r\n            <Form.Control type=\"text\" name=\"name\" value={formik.values}{...formik.getFieldProps(\"name\")} />\r\n            {formik.touched.name && formik.errors.name ? <small className='text-danger'>{formik.errors.name} </small> : \"\"}\r\n          </Col>\r\n          <Col>\r\n            <Form.File label=\"Image\" name=\"image\" accept=\".jpg, .png,.jpeg\" DefaultValue={formik.values}\r\n              onChange={(e) => {\r\n                setImage(e.target.files[0])\r\n                formik.handleChange(e)\r\n              }}\r\n            />\r\n            {formik.touched.image && formik.errors.image ? <small className='text-danger'>{formik.errors.image} </small> : \"\"}\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"container-fluid\">\r\n          <Col>\r\n            <Form.Label> source</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"recipe source\" name=\"source\" value={formik.values}{...formik.getFieldProps(\"source\")}\r\n            />\r\n            {formik.touched.source && formik.errors.source ? <small className='text-danger'>{formik.errors.source} </small> : \"\"}\r\n\r\n          </Col>\r\n          <Col>\r\n            <Form.Label> link to source </Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\" if exists\" name=\"sourceUrl\" value={formik.values} {...formik.getFieldProps(\"sourceUrl\")}\r\n            />\r\n            {formik.touched.sourceUrl && formik.errors.sourceUrl ? <small className='text-danger'>{formik.errors.sourceUrl} </small> : \"\"}\r\n          </Col>\r\n        </Row>\r\n        <Accordion defaultActiveKey=\"0\">\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"3\">\r\n                General description\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"3\">\r\n              <div>\r\n                <Row>\r\n                  <Col>\r\n                    <Form.Label>\r\n                      description\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      rows={1}\r\n                      name=\"description\"\r\n                      placeholder='description as you can shortly'\r\n                      value={formik.values}\r\n                      {...formik.getFieldProps(\"description\")}\r\n                    />\r\n                    {formik.touched.description && formik.errors.description ? <small className='text-danger'>{formik.errors.description} </small> : \"\"}\r\n                  </Col>\r\n                  <Col className='col-sm-4'>\r\n                    <Form.Label>\r\n                      preparation time\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      min={3}\r\n                      placeholder='time in minutes'\r\n                      name=\"prepTimeMin\"\r\n                      value={formik.values} {...formik.getFieldProps(\"prepTimeMin\")}\r\n                    />\r\n                    {formik.touched.prepTimeMin && formik.errors.prepTimeMin ? <small className='text-danger'>{formik.errors.prepTimeMin} </small> : \"\"}\r\n\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Row className=\"container-fluid mx-2\">\r\n                    <Col>\r\n                      <Row className=\"mr-3\">Diet type: </Row>\r\n                      <Row>\r\n                        {diets.length &&\r\n                          diets.map((diet) => {\r\n                            return (\r\n                              <Form.Check\r\n                                type=\"checkbox\"\r\n                                label={diet.name}\r\n                                name='diet'\r\n                                checked={diet.select}\r\n                                value={diet.id}\r\n                                onChange={(e) => {\r\n                                  let checked = e.target.checked;\r\n                                  setDiets(diets.map(item => {\r\n                                    diet.select = checked\r\n                                    return item\r\n                                  }))\r\n                                  formik.handleChange(e);\r\n                                }} />\r\n                            );\r\n                          })}\r\n                        {formik.touched.diet && formik.errors.diet ? <small className='text-danger'>{formik.errors.diet} </small> : \"\"}\r\n                      </Row>\r\n                    </Col>\r\n                    <Col>\r\n                      <Row className=\"mr-3\">Category </Row>\r\n                      <Row>\r\n                        {categories.length &&\r\n                          categories.map((category) => {\r\n                            return (\r\n                              <Form.Check\r\n                                type=\"checkbox\"\r\n                                label={category.name}\r\n                                name='category'\r\n                                checked={category.select}\r\n                                value={category.id}\r\n                                onChange={(e) => {\r\n                                  let checked = e.target.checked;\r\n                                  setCategories(categories.map(item => {\r\n                                    category.select = checked\r\n                                    return item\r\n                                  }))\r\n                                  formik.handleChange(e);\r\n                                }}\r\n                              />\r\n\r\n                            );\r\n                          })}\r\n                        {formik.touched.category && formik.errors.category ? <small className='text-danger'>{formik.errors.category} </small> : \"\"}\r\n                      </Row>\r\n\r\n                    </Col>\r\n                  </Row>\r\n                </Row>\r\n              </div>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                Ingredients\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"0\">\r\n              <>\r\n                {instructions.length > 0 &&\r\n                  instructions.map((item, i) => (\r\n                    <div key={i} className='d-flex ingredints mb-1'>\r\n                      <div className='col-sm-2'>{item.quantity}</div>\r\n                      <div className='col-sm-4'>{units[item.measureUnit - 1]?.name}</div>\r\n                      <div className='col-sm-4'>{item.ingredient || item.name || ingredients[item.ingredient - 1]?.name}</div>\r\n                      <i class=\"fas fa-trash text-sm\" onClick={() => deleteInstruction(i)}> </i>\r\n                    </div>\r\n                  ))}\r\n\r\n                <Row className=\"small-5 mt-4\">\r\n                  <Col className=\"col-sm-2\">\r\n                    <Form.Label>Amount</Form.Label>\r\n                    <Form.Control type=\"number\" min={1} name='quantity' onChange={(e) => { changeIngredient(e) }} />\r\n                  </Col>\r\n                  <Col className=\"col-md-4 mb-3\">\r\n                    <Form.Label>Measurement unit </Form.Label>\r\n                    <select onChange={(e) => changeIngredient(e)} name='measureUnit' defaultValue={units[0]?.id}>\r\n                      {units.map((unit, i) => {\r\n                        return (\r\n                          <option key={i} value={unit.id} name={unit.name}>\r\n                            {unit.name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </select>\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Label>Ingredient</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"ingredient\" value={formik.values}{...formik.getFieldProps(\"ingredient\")} />\r\n                    {formik.touched.ingredient && formik.errors.ingredient ? <small className='text-danger'>{formik.errors.ingredient} </small> : \"\"}\r\n\r\n                    {/* <select onChange={(e) => changeIngredient(e)} name='ingredient'>\r\n                      <option>---choose </option>\r\n                      {ingredients.length > 0 && ingredients.map((ingredient, i) => {\r\n                        return (\r\n                          <>\r\n                            <option key={i} value={ingredient.id} name={ingredient.name}>\r\n                              {ingredient.name}\r\n                            </option>\r\n                          </>\r\n                        );\r\n                      })}\r\n                    </select> */}\r\n\r\n                  </Col>\r\n                  <Col >\r\n                    <Button\r\n                      className=\"md-3  save-btn\"\r\n                      onClick={(e) => addToList('ingredients')}>\r\n                      Save\r\n                    </Button>\r\n                  </Col>\r\n                  {/* <Row >\r\n                    <Button onClick={() => setAddIng(true)}> Add new Ingredint</Button>\r\n                  </Row> */}\r\n                  {/* {addIng && <div className='new-ing'>\r\n                    <Form.Label>Ingredint name</Form.Label>\r\n                    <Form.Control type=\"text\"\r\n                      defailtValue={newIngredient}\r\n                      name=\"newingredient\" onChange={(e) => setNewIngredient(e.target.value)} />\r\n                    <Button onClick={() => addIngtoDB()}>add</Button>\r\n                  </div>} */}\r\n                </Row>\r\n              </>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                Preparation steps\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"1\">\r\n              <>\r\n                {guide.length > 0 &&\r\n                  guide.map((item, i) => (\r\n                    <div key={i} className='d-flex instruction'>\r\n                      <div className='text-left '>{item.instruction}</div>\r\n                      <button onClick={() => deleteGuide(i)}\r\n                        className='col-sm-2'>\r\n                        <i class=\"fas fa-trash text-sm \"></i>\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n                <Row className=\"d-flex \">\r\n                  <Col className=\"col-md-10\">\r\n                    <Form.Label>instruction</Form.Label>\r\n                    <Form.Control as=\"input\" name='instruction' onChange={(e) => changeGuide(e)} />\r\n                  </Col>\r\n                  <Col className=\"col-md-2 mb-0\">\r\n                    <Button\r\n                      className=\" flex-grow-0\"\r\n                      onClick={() => addToList('guide')}\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n        </Accordion>\r\n        <Row className=\"text-left\">\r\n          <Button type=\"submit\"  >\r\n            {editMode ? \"Edit Recipe\" : \"Add Recipe\"}\r\n          </Button>\r\n        </Row>\r\n      </div>\r\n    </Form >\r\n  );\r\n}\r\nexport default NewRecipeForm;\r\n","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\sections\\Footer.jsx",[],"C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\sections\\SearchRecipes.jsx",["295","296","297","298","299","300","301","302","303","304","305","306","307","308","309"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Form, Col, Row, FormControl } from \"react-bootstrap\";\r\nimport MyVerticallyCenteredModal from \"../utills/Modal\";\r\nimport { getData } from '../DAL/api'\r\nimport Pagination from \"../utills/Pagination\";\r\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport App from \"../Pages/Gallery\";\r\nimport Cards from \"./Cards\";\r\nimport './SearchRecipes.css'\r\nconst fetchData = require('../DAL/api')\r\nfunction SearchRecipes(props) {\r\n  console.log('search recipes-->', props);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [images, setImages] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [order, setOrder] = useState(\"color\");\r\n  const [categories, setCategories] = useState([]);\r\n  const [selecteduser, setSelectedRecipe] = useState({});\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(5);\r\n\r\n  function changeRecipe(recipe) {\r\n    setSelectedRecipe(recipe);\r\n    // setModalShow(true);\r\n  }\r\n  function getObj(array, filter) {\r\n    return array.find((item) => item.recipeId === filter);\r\n  }\r\n  const handleChange = (value) => {\r\n    setSearchText(value);\r\n  };\r\n\r\n\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  useEffect(async () => {\r\n    const fetchedImages = await getData('images');\r\n    const fetchedRecipes = await getData('recipes');\r\n    const fetchCategories = await getData('categories');\r\n    setData(fetchedRecipes);\r\n    setImages(fetchedImages);\r\n    setCategories(fetchCategories);\r\n  }, []);\r\n\r\n  useEffect(() => { }, [order, searchText]);\r\n\r\n  return (\r\n    <div className='w-100'>\r\n\r\n      <Row >\r\n        <FormControl\r\n          type=\"search\"\r\n          placeholder=\"Search\"\r\n          className='w-100'\r\n          aria-label=\"Search\"\r\n          value={searchText}\r\n          onChange={(e) => handleChange(e.target.value)}\r\n        />\r\n      </Row>\r\n\r\n      <div className='search-bar-dropdown w-100'>\r\n        <div className='results w-100 m-0' >\r\n          {searchText &&\r\n            data\r\n              .sort((a, b) => (a[order] < b[order] ? -1 : 0))\r\n              .filter((item) => {\r\n                return item.name.includes(searchText);\r\n              })\r\n              .map((recipe, i) => {\r\n                return (\r\n                  <li\r\n                    onClick={() =>\r\n                      changeRecipe({\r\n                        ...recipe,\r\n                        src: getObj(images, recipe.recipeId)\r\n                          ? getObj(images, recipe.recipeId).imgUr\r\n                          : null,\r\n                      })\r\n                    }\r\n                  >\r\n                    <a href={`/products/${recipe.id}`}>\r\n                      <li onClick={() => { setSearchText('') }}>{recipe.name}</li>\r\n                    </a>\r\n                  </li>\r\n                );\r\n              })}\r\n\r\n        </div>\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default SearchRecipes;\r\n","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\forms\\Login.jsx",["310","311","312","313","314","315"],"import { useContext, useEffect, useState } from \"react\";\r\nimport { Row, Form } from \"react-bootstrap\";\r\nimport validateInfo from \"../utills/validateInfo\";\r\nimport { getUsers, login, getSpecificUser, sendPutReq } from \"../DAL/api\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AuthApi from \"../context/AuthApi\";\r\n\r\nimport Cookies from 'js-cookie'\r\nfunction Login() {\r\n  const Auth = useContext(AuthApi)\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [errors, setErrors] = useState({})\r\n  const [message, setMessage] = useState(\"\");\r\n  const [isLoged, setIsLoged] = useState(false);\r\n  const history = useHistory()\r\n  function changeInfo(e) {\r\n    if (e.target.name === \"email\") setEmail(e.target.value);\r\n    if (e.target.name === \"password\") setPassword(e.target.value);\r\n  }\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!isLoged) {\r\n      const response = await login(email, password)\r\n      console.log('response', response);\r\n      if (!response.message) {\r\n        console.log('getaneh', response);\r\n        console.log('user response', response);\r\n        Auth.setAuth(true)\r\n        Cookies.set(\"user\", response.id)\r\n        history.push('/myrecipes')\r\n      }\r\n      else {\r\n        setMessage(response.message);\r\n      }\r\n    }\r\n    if (isLoged) {\r\n      if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/.test(password)) {\r\n        setErrors({ ...errors, password: 'Invalid pssword' })\r\n      } else {\r\n        setErrors({ ...errors, password: null })\r\n      }\r\n      if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\r\n        setErrors({ ...errors, email: 'inValid email' })\r\n      } else {\r\n        setErrors({ ...errors, email: null })\r\n      }\r\n      if (!errors.email && !errors.password) {\r\n        const id = Cookies.get(\"user\")\r\n        console.log(email, password, id);\r\n        console.log(errors);\r\n        sendPutReq(email, password, id)\r\n      }\r\n    }\r\n\r\n  }\r\n  const userDetails = async () => {\r\n    const id = Cookies.get(\"user\")\r\n    if (id) {\r\n      setIsLoged(true);\r\n      Auth.setAuth(true)\r\n      const response = await getSpecificUser(id)\r\n      setEmail(response.email);\r\n      setPassword(response.password);\r\n    }\r\n  }\r\n  useEffect(async () => {\r\n    return userDetails()\r\n  }, [])\r\n\r\n  return (\r\n    <Form className=\"form-login\" onSubmit={onSubmit}>\r\n      <div className=\"form-inner my-5 \">\r\n        <h1>{isLoged ? \"Details\" : \"Login\"}</h1>\r\n        <label htmlFor=\"email\" className=\"d-block\">\r\n          Email\r\n        </label>\r\n        {message && <small>{message}</small>}\r\n        <input\r\n          id=\"email\"\r\n          name=\"email\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          onChange={(e) => {\r\n            changeInfo(e);\r\n          }}\r\n          defaultValue={email}\r\n        />\r\n        {errors.email && <li>{errors.email}</li>}\r\n        <label htmlFor=\"email\">Password</label>\r\n        <input\r\n          id=\"password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          className=\"form-control\"\r\n          onChange={(e) => {\r\n            changeInfo(e);\r\n          }}\r\n          aria-describedby=\"emailHelp\"\r\n          defaultValue={password}\r\n        />\r\n        {errors.password && <li>{errors.password}</li>}\r\n        <Row>\r\n          <button\r\n            className=\"btn btn-primary my-2 text-right font-weight-bold \"\r\n            onClick={onSubmit}\r\n            type='submit'\r\n          >\r\n            {!isLoged ? \"Login\" : \"edit\"}\r\n          </button>\r\n          <div className=\"d-flex m-auto\">\r\n            {!isLoged && <Link to=\"/sign-up\" className='row-sm-9'> Create New Acount </Link>}\r\n          </div>\r\n        </Row>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\nexport default Login;\r\n","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\utills\\validateInfo.js",["316","317","318"],"export default function validateInfo(values) {\r\n  let errors = {};\r\n  errors.firstName = [];\r\n  errors.lastName = [];\r\n  errors.email = [];\r\n  errors.adress = [];\r\n  errors.password = [];\r\n  errors.password2 = [];\r\n  errors.isPrivate = [];\r\n  errors.image = []\r\n  errors.category = []\r\n  errors.diet = []\r\n  errors.source = []\r\n\r\n  if (!values.firstName || !values.firstName.trim()) {\r\n    if (!errors.firstName) errors.firstName = []\r\n    errors.firstName.push(\"please enter name\");\r\n  }\r\n  if (values.firstName && values.firstName.length < 3) {\r\n    if (!errors.firstName) errors.firstName = []\r\n    errors.firstName.push(\"firstname must be at least 3 characters long\");\r\n  }\r\n  if (!values.lastName || !values.lastName.trim()) {\r\n    if (!errors.lastName) errors.lastName = []\r\n    errors.lastName.push(\"please enter your lastname\");\r\n  }\r\n  if (values.lastName && values.lastName.length < 3) {\r\n    if (!errors.lastName) errors.lastName = []\r\n    errors.lastName.push('lastname must be at least 3 characters long')\r\n  }\r\n  \r\n  if (!values.email) {\r\n    if (!errors.email) errors.email = []\r\n    errors.email.push(\"Please enter your email\");\r\n  } else if (\r\n    !/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(values.email)\r\n  ) {\r\n    if (!errors.email) errors.email = []\r\n    errors.email.push(\"The email you entered is invalid\");\r\n  }\r\n  if (!values.password) {\r\n    if (!errors.password) errors.password = []\r\n    errors.password.push(\"please enter your password\");\r\n  } else if (\r\n    !/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/.test(values.password)\r\n  ) {\r\n    if (!errors.email) errors.email = []\r\n    if (!errors.email) errors.email = []\r\n    errors.password.push(\"The password doesn't match the requirements\");\r\n  }\r\n\r\n  if (values.password != values.password2) {\r\n    if (!errors.password) errors.password = []\r\n    console.log(values.password2);\r\n    errors.password2.push(\"Passwords are not identical\");\r\n  }\r\n\r\n  if (!values.isPrivate) {\r\n    if (!errors.isPrivate) errors.isPrivate = []\r\n    errors.isPrivate.push(\"please choose\");\r\n  }\r\n  // if (!values.image) {\r\n  //   if (!errors.image) errors.image = []\r\n  //   errors.image.push(\"please choose image\");\r\n  // } else if (values.image.length === 0) errors.image.push(\"please choose image\");\r\n\r\n  if (values.category.length < 2) {\r\n    if (!errors.category) errors.category = []\r\n    errors.category.push('please choose  at least 2 types')\r\n  }\r\n  if (values.diet.length < 2) {\r\n    if (!errors.diet) errors.diet = []\r\n    errors.diet.push('please choose  at least 2 types')\r\n  }\r\n  if (!values.source) {\r\n    if (!errors.source) errors.source = []\r\n    errors.source.push('please enter the source')\r\n  }\r\n\r\n  return errors;\r\n}\r\n","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\utills\\useForm.js",["319","320","321","322"],"import { useState, useEffect } from \"react\";\r\nconst useForm = (callback, validate) => {\r\n  const [values, setValues] = useState({ diet: [], category: [], image: [] });\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (e.target.name == 'diet') {\r\n      if (values.diet.includes(value)) {\r\n        const newDiet = values.diet.filter(item => item !== value);\r\n        const diet = newDiet;\r\n        values.diet = diet\r\n        const newVal = values\r\n        setValues(newVal)\r\n      } else {\r\n        values.diet.push(value)\r\n        const diet = [...values.diet]\r\n        setValues({ ...values, diet })\r\n      }\r\n    } else if (e.target.name === 'image') {\r\n      setValues({ ...values, image: e.target.files })\r\n    } else if (e.target.name == 'category') {\r\n      if (values.category.includes(value)) {\r\n        console.log(values.category);\r\n        const newCat = values.category.filter(item => item !== value);\r\n        const category = newCat;\r\n        values.category = category\r\n        const newVal = values\r\n        setValues(newVal)\r\n      } else {\r\n        values.category.push(value)\r\n        const category = [...values.category]\r\n        setValues({ ...values, category })\r\n      }\r\n    } else {\r\n      setValues({ ...values, [name]: value });\r\n    }\r\n  };\r\n  console.log('values', values);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(validate(values));\r\n    setIsSubmitting(true);\r\n    // callback()\r\n\r\n  };\r\n  useEffect(() => {\r\n    for (const key in errors) {\r\n      if (!!errors[key].length) return;\r\n    }\r\n    callback();\r\n  }, [errors]);\r\n  return { handleChange, handleSubmit, values, errors };\r\n};\r\n\r\nexport default useForm;\r\n","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\Pages\\Gallery.js",["323","324","325","326","327","328","329","330","331","332"],"import React, { useState, useEffect } from \"react\";\r\nimport Posts from \"../sections/ShowAllRecipes\";\r\nimport Pagination from \"../utills/Pagination\";\r\nimport './Gallery.css'\r\nimport ShowAllrecipes from \"../sections/ShowAllRecipes\";\r\nimport { getData } from \"../DAL/api\";\r\n\r\n\r\nconst Gallery = ({ onAdd }) => {\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [images, setImages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [recipesPerPage, setRecipesPerPage] = useState(5);\r\n\r\n  useEffect(async () => {\r\n    const fetchRecipe = await getData('recipes')\r\n    console.log(fetchRecipe);\r\n    setRecipes(fetchRecipe);\r\n\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"container=fluid mt-5 m-auto gallery\">\r\n      <p className=\"mt-5\">Enjoy discovering new recipes </p>\r\n      {<ShowAllrecipes\r\n        recipes={recipes}\r\n        loading={loading}\r\n      />\r\n      }\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\context\\RecipesContext.js",["333","334","335"],"import { createContext, useEffect, useState } from \"react\";\r\nimport { getRecipes } from \"../DAL/api\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nconst fetchData = require('../DAL/api')\r\n\r\nexport const RecipesContext = createContext();\r\n\r\nconst RecipesContextProvider = (props) => {\r\n  const [recipes, setRecipes] = useState([1, 2, 3, 5]);\r\n\r\n  useEffect(async () => {\r\n    const fetchedRecipes = await fetchData.getRecipes();\r\n    setRecipes(fetchedRecipes);\r\n  }, []);\r\n\r\n  //   useEffect(() => {\r\n  //     localStorage.setItem(\"employees\", JSON.stringify(employees));\r\n  //   });\r\n\r\n  const sortedRecipes = recipes.sort((a, b) => (a.name < b.name ? -1 : 1));\r\n\r\n  const addRecipe = (recipe) => {\r\n    setRecipes([\r\n      ...recipes,\r\n      { ...recipe, recipeId: Math.floor(Math.random() * 121) },\r\n    ]);\r\n  };\r\n\r\n  const deleteRecipe = (id) => {\r\n    setRecipes(recipes.filter((recipe) => recipe.recipeId !== id));\r\n  };\r\n\r\n  const editRecipe = (updatedRecipe) => {\r\n    let newArray = recipes.map((recipe) =>\r\n      recipe.recipeId === updatedRecipe.recipeId ? updatedRecipe : recipe\r\n    );\r\n    setRecipes(newArray);\r\n  };\r\n\r\n  return (\r\n    <RecipesContext.Provider\r\n      value={{\r\n        sortedRecipes,\r\n        addRecipe,\r\n        deleteRecipe,\r\n        editRecipe,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </RecipesContext.Provider>\r\n  );\r\n};\r\n\r\nexport default RecipesContextProvider;\r\n","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\context\\GlobalState.js",["336","337","338","339","340","341"],"import React, { createContext, useReducer } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\nimport { getRecipes, getUsers } from \"../DAL/api\";\r\nimport { useEffect } from \"react\";\r\nconst fetchData = require('../DAL/api')\r\n// Initial State\r\nconst initialState = {\r\n  recipes: [],\r\n};\r\n\r\n// Create Context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider Component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  useEffect(async () => {\r\n    const recipes = await fetchData.getRecipes();\r\n    const users = await fetchData.getUsers();\r\n    initialState.recipes = recipes;\r\n    initialState.users = users;\r\n    console.log(\"initialstate\", initialState);\r\n  }, []);\r\n\r\n  // Actions\r\n  const removeRecipe = (id) => {\r\n    dispatch({\r\n      type: \"REMOVE_RECIPE\",\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  const editRecipe = (id) => {\r\n    dispatch({\r\n      type: \"EDIT_RECIPE\",\r\n      payload: id,\r\n    });\r\n  };\r\n  const addRecipe = (recipe) => {\r\n    dispatch({\r\n      type: \"EDIT_RECIPE\",\r\n      payload: recipe,\r\n    });\r\n  };\r\n\r\n  const addUser = (user) => {\r\n    dispatch({\r\n      type: \"ADD_USER\",\r\n      payload: user,\r\n    });\r\n  };\r\n\r\n  const editUser = (user) => {\r\n    dispatch({\r\n      type: \"EDIT_USER\",\r\n      payload: user,\r\n    });\r\n  };\r\n  const removeUser = (id) => {\r\n    dispatch({\r\n      type: \"EDIT_USER\",\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        users: state.users,\r\n        removeUser,\r\n        addUser,\r\n        editUser,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\sections\\Cards.jsx",["342","343","344","345","346","347","348"],"C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\sections\\Header.jsx",["349"],"C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\forms\\InputCreator.jsx",["350","351","352","353","354"],"import { Form, InputGroup, Button, Col } from \"react-bootstrap\";\r\n\r\nfunction InputCreator(props) {\r\n  return (\r\n    <>\r\n      <div className=\"d-flex justify-content-between\">\r\n        <Form.Label className=\"d-block \">{props.title}</Form.Label>\r\n        <div className=\"input-width\">\r\n          <Form.Control\r\n            as={props.as}\r\n            type={props.type}\r\n            defaultValue={props.value}\r\n            onChange={props.handleInputChange}\r\n            name={props.name}\r\n            placeholder={props.placeholder}\r\n            required={!!props.required}\r\n            onChange={props.onChange}\r\n            onBlur={props.onBlur}\r\n            name={props.name}\r\n            error={props.error}\r\n            className={props.error ? \"red-input\" : null}\r\n          />\r\n          <small className=\"text-right\">{props.note}</small>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default InputCreator;\r\n","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\utills\\ErrorMessages.jsx",[],"C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\sections\\CardItem.jsx",["355","356","357"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport Modal1 from \"../utills/Modal\";\r\n\r\nfunction CardItem(props) {\r\n\r\n  return (\r\n    <>\r\n      <li className=\"cards__item cards__item__link\" >\r\n        <Link className=\"\" to={{\r\n          pathname: `${props.path}`, onAdd: { add: `${props.onAdd}` }\r\n\r\n        }} >\r\n          <figure className=\"cards__item__pic-wrap\" >\r\n            <img\r\n              className=\"cards__item__img img-fluid mx-auto\"\r\n              alt=\"Travel Image\"\r\n              src={props.src}\r\n              height=\"10%\"\r\n            />\r\n          </figure>\r\n          <div className=\"cards__item__info text-left\">\r\n            <h5 className=\"cards__item__text text-left\">{props.text}</h5>\r\n            <h5 className=\"cards__item__text text-left\"><i class=\"fas fa-eye\"></i>   {props.views}</h5>\r\n          </div>\r\n        </Link>\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CardItem;\r\n","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\utills\\Modal.jsx",["358","359","360","361","362","363"],"import {\r\n  Modal,\r\n  Button,\r\n  ListGroupItem,\r\n  Image,\r\n  Accordion,\r\n  Card,\r\n  Form,\r\n  Col,\r\n  Row,\r\n} from \"react-bootstrap\";\r\n\r\nimport { useState } from \"react\";\r\nimport Cart from \"../Pages/Cart/Cart\";\r\n\r\nfunction MyVerticallyCenteredModal(props) {\r\n  const [openEditForm, setOpenEditform] = useState(false);\r\n  const [list, setList] = useState([\r\n    { username: \"getaneh\" },\r\n    { username: \"abebe\" },\r\n  ]);\r\n\r\n  function edit() {\r\n    setOpenEditform(!openEditForm);\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          {props.user.username}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Image\r\n          id=\"modal-img\"\r\n          // style={{ margin: \"1rem 5rem\" }}\r\n          variant=\"ml-5 text-center\"\r\n          src={props.user.src}\r\n          rounded\r\n        />\r\n        <ListGroupItem> שם: {props.user.name}</ListGroupItem>\r\n        <ListGroupItem> זמן הכנה: {props.user.id} דקות</ListGroupItem>\r\n        <ListGroupItem\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#collapseExample\"\r\n          aria-expanded=\"false\"\r\n          aria-controls=\"collapseExample\"\r\n        >\r\n          {\" \"}\r\n          מצרכים {props.user.grade}\r\n        </ListGroupItem>\r\n        <ListGroupItem\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#collapseExample\"\r\n          aria-expanded=\"false\"\r\n          aria-controls=\"collapseExample\"\r\n        >\r\n          {\" \"}\r\n          אופן ההכנה {props.user.grade}\r\n        </ListGroupItem>\r\n\r\n        <div class=\"collapse\" id=\"collapseExample\">\r\n          <div class=\"card card-body\">\r\n            1:{props.user.name}\r\n            2:{props.user.name}\r\n            3:{props.user.name}\r\n            4:{props.user.name}\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n\r\n      <Modal.Footer>\r\n        <Button onClick={props.onHide}>חזור</Button>\r\n        <Button onClick={() => edit()}>ערוך</Button>\r\n        <Button className=\"btn btn-success\" onClick={<Cart cartList={list} />}>\r\n          {\" \"}\r\n          הוסף מצרכים לעגלה\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default MyVerticallyCenteredModal;\r\n","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\utills\\Pagination.jsx",["364"],"import React from \"react\";\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  return (\r\n    <nav className='w-75 m-auto'>\r\n      <ul className=\"d-flex w-50\">\r\n        {pageNumbers.map((number) => (\r\n          <li\r\n            key={number}\r\n            className=\"\"\r\n            onClick={() => paginate(number)}\r\n            className=\"page-link\"\r\n          >\r\n            {number}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\sections\\ShowAllRecipes.js",["365","366","367","368","369","370","371","372","373","374","375","376","377","378","379"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Spinner } from \"react-bootstrap\";\r\nimport './AllRecipes.css'\r\nimport CardItem from \"./CardItem\";\r\nimport { Form, Row, Col, ButtonGroup, ToggleButton } from \"react-bootstrap\";\r\nimport ReactPaginate from 'react-paginate'\r\nimport { getData, orderBy, addfavorites } from \"../DAL/api\";\r\nconst Cookies = require(\"js-cookie\");\r\nconst ShowAllRecipes = (props) => {\r\n  const { recipes, images, loading, onAdd } = props\r\n  const [orderListBy, setOrderListBy] = useState('asc')\r\n  const [newRecipes, setNewRecipes] = useState([])\r\n  const [listState, setListState] = useState('name')\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pageNumber, setPageNumber] = useState(0)\r\n  const [recipesPerPage, setRecipesPerPage] = useState(5);\r\n  const [checked, setChecked] = useState(false);\r\n  const [radioValue, setRadioValue] = useState('name');\r\n\r\n  const radios = [\r\n    { name: 'Name', value: 'name' },\r\n    { name: 'Date', value: 'uploadDate' },\r\n    { name: 'Views', value: 'views' },\r\n  ];\r\n  useEffect(() => {\r\n    console.log(recipes.length);\r\n\r\n    setNewRecipes(recipes)\r\n  }, [])\r\n  useEffect(() => {\r\n    return order()\r\n  }, [orderListBy, listState, pageNumber, recipesPerPage])\r\n  if (loading) {\r\n    return (\r\n      <h2>\r\n        Loading\r\n        <Spinner animation=\"border\" />\r\n      </h2>\r\n    );\r\n  }\r\n  const order = async () => {\r\n    const value = listState\r\n    const response = await orderBy(value, orderListBy, pageNumber, recipesPerPage)\r\n    console.log(response);\r\n    setNewRecipes(response)\r\n  }\r\n\r\n  const changeState = () => {\r\n    if (orderListBy === 'asc') {\r\n      setOrderListBy('desc')\r\n\r\n    }\r\n    if (orderListBy === 'desc') {\r\n      setOrderListBy('asc')\r\n\r\n    }\r\n  }\r\n  const changeListState = (e) => {\r\n    console.log(e.target.value);\r\n    setListState(e.target.value)\r\n  }\r\n  const indexOfLastPost = currentPage * recipesPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - recipesPerPage;\r\n  const currentPosts = recipes.slice(indexOfFirstPost, indexOfLastPost);\r\n  const pageCount = Math.ceil(recipes.length / recipesPerPage)\r\n  const changePage = ({ selected }) => {\r\n    setPageNumber(selected);\r\n  }\r\n  const addToLikes = async (userId, recipeId) => {\r\n    const response = await addfavorites(userId, recipeId)\r\n  }\r\n  return (\r\n    <div>\r\n\r\n      <div className='d-flex justify-content-center recipes-header'>\r\n        <p>filter by:</p>\r\n\r\n\r\n        <ButtonGroup>\r\n\r\n          {radios.map((radio, idx) => (\r\n            <div>\r\n              <ToggleButton\r\n                key={idx}\r\n                id={`radio-${idx}`}\r\n                type=\"radio\"\r\n                variant={'outline-dark '}\r\n                name=\"radio\"\r\n                value={radio.value}\r\n                checked={radioValue === radio.value}\r\n                onChange={(e) => {\r\n                  setRadioValue(e.target.value)\r\n                  setChecked(e.currentTarget.checked)\r\n                  changeListState(e)\r\n                }}\r\n              >\r\n                {radio.name}\r\n              </ToggleButton>\r\n            </div>\r\n          ))}\r\n        </ButtonGroup>\r\n\r\n        <h1 vlaue='date' onClick={changeState} className='ml-3'>{orderListBy === 'asc' ? <i class=\"fas fa-sort-amount-up-alt\"></i> : <i class=\"fas fa-sort-amount-down-alt\"></i>}</h1>\r\n        <select onChange={(e) => setRecipesPerPage(e.target.value)}>\r\n          <option>recipes per page</option>\r\n          <option value={5}>5</option>\r\n          <option value={10}>10</option>\r\n          <option value={20}>20</option>\r\n          <option value={50}>50</option>\r\n          <option value={100}>100</option>\r\n        </select>\r\n      </div>\r\n      <div className='d-flex flex-wrap justify-content-around container text-dark'>\r\n        {newRecipes.length > 0 && newRecipes.map((recipe, i) => (\r\n          <div class=\"recipe\">\r\n\r\n            <li> <Link to={`products/${recipe.id}`}>\r\n              <div class=\"image\">\r\n                <img src={recipe.images[0] ? `http://localhost:3200/${recipe.images[0].url} ` : 'https://images.pexels.com/photos/3843282/pexels-photo-3843282.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260'} />\r\n\r\n              </div>\r\n            </Link > </li>\r\n            <div className='justify-content-between'>\r\n              <p>{recipe.name.slice(0, 20)}</p>\r\n              <ul class=\"media\">\r\n                {Cookies.get(\"user\") && <li onClick={() => addToLikes(Cookies.get(\"user\"), recipe.id)}><i className='fa fa-heart'></i> </li>}\r\n                <li><i class=\"fa fa-clock-o m-auto\"></i> {recipe.prepTimeMin} <i class=\"far fa-clock\"></i></li>\r\n                <li><i class=\"fa fa-eye\"></i> {recipe.views}</li>\r\n                <li>  <i class=\"far fa-calendar-alt\"></i> {(recipe.createdAt).slice(5, 10).split('-').reverse().join('-')}</li>\r\n\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          // <div class=\"recipe\">\r\n\r\n          //     <li> <Link to={`products/${recipe.id}`}> \r\n          //     <div class=\"image\">\r\n          //       <img src={recipe.images[0] ? `http://localhost:3200/${recipe.images[0].url} ` : 'https://images.pexels.com/photos/3843282/pexels-photo-3843282.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260'} />\r\n\r\n          //     </div>\r\n          //   </Link > </li>\r\n          //     <div className='justify-content-between'>\r\n          //       <p>{recipe.name.slice(0,20)}</p>\r\n          //       <ul class=\"media\">\r\n          //         <li><i class=\"fa fa-clock-o m-auto\"></i> {recipe.prepTimeMin} <i class=\"far fa-clock\"></i></li>\r\n          //         <li><i class=\"fa fa-eye\"></i> {recipe.views}</li>\r\n          //         <li>  <i class=\"far fa-calendar-alt\"></i> {(recipe.createdAt).slice(5, 10).split('-').reverse().join('-')}</li>\r\n\r\n          //       </ul>\r\n          //     </div>\r\n          //   </div>\r\n\r\n          // <div class=\"recipe\">\r\n          //   <div class=\"image\">\r\n          //     <img src={recipe.images[0] ? `http://localhost:3200/${recipe.images[0].url} ` : 'https://images.pexels.com/photos/3843282/pexels-photo-3843282.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260'} />\r\n          //     <div class=\"likes text-danger\" onClick={(e) => {\r\n          //       addToLikes(Cookies.get(\"user\"), recipe.id)\r\n          //     }}>\r\n          //       {Cookies.get(\"user\") && <i class=\"fas fa-heart\"></i>}\r\n          //     </div>\r\n          //     <div class=\"name\">\r\n          //       <h6>{recipe.name}</h6>\r\n          //     </div>\r\n          //   </div>\r\n\r\n          //   <ul class=\"media\">\r\n          //     <li><i class=\"fa fa-clock-o\"></i> {recipe.prepTimeMin} <i class=\"far fa-clock\"></i></li>\r\n          //     <li><i class=\"fa fa-eye\"></i> {recipe.views}</li>\r\n          //     <li>  <i class=\"far fa-calendar-alt\"></i> {(recipe.createdAt).slice(5, 10).split('-').reverse().join('-')}</li>\r\n          //     <li> <Link to={`products/${recipe.id}`}>   <i class=\"fas fa-info-circle\"></i></Link > </li>\r\n          //   </ul>\r\n          // </div>\r\n\r\n        ))\r\n        }\r\n\r\n      </div>\r\n      <ReactPaginate previousLabel={<i class=\"fas fa-arrow-left\"></i>}\r\n        nextLabel={<i class=\"fas fa-arrow-right\"></i>}\r\n        pageCount={pageCount}\r\n        onPageChange={changePage}\r\n        containerClassName={\"paginationBttns\"}\r\n        previousLinkClassName={\"previousBttn\"}\r\n        nextLinkClassName={\"nextBttn\"}\r\n        disabledClassName={\"paginationDisabled\"}\r\n        activeClassName={\"paginationActive\"} />\r\n    </div >\r\n\r\n  )\r\n}\r\n\r\nexport default ShowAllRecipes;\r\n","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\context\\AppReducer.js",["380"],"export default (state, action) => {\r\n  console.log(state);\r\n  switch (action.type) {\r\n    case \"REMOVE_RECIPE\":\r\n      return {\r\n        ...state,\r\n        users: state.users.filter((user) => {\r\n          return user.id !== action.payload;\r\n        }),\r\n      };\r\n    case \"ADD_USER\":\r\n      return {\r\n        ...state,\r\n        users: [action.payload, ...state.users],\r\n      };\r\n    case \"EDIT_USER\":\r\n      const updateUser = action.payload;\r\n\r\n      const updateUsers = state.users.map((user) => {\r\n        if (user.id === updateUser.id) {\r\n          return updateUser;\r\n        }\r\n        return user;\r\n      });\r\n      return {\r\n        ...state,\r\n        users: updateUsers,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\sections\\invitation.jsx",[],"C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\Pages\\Profile.jsx",["381","382","383","384","385","386","387","388","389","390","391","392","393"],"import { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Login from '../forms/Login'\r\nimport ShowAllRecipes from \"../sections/ShowAllRecipes\";\r\nimport CardItem from \"../sections/CardItem\";\r\nimport Cookies from \"js-cookie\"\r\nimport FormikRegister from '../forms/FormikRegister'\r\nimport { Button } from \"react-bootstrap\";\r\nimport RegisterForm from \"../forms/RegisterForm\";\r\nconst { getData, getUserRecipes, getSpecificUser } = require('../DAL/api')\r\nfunction Profile() {\r\n    const history = useHistory()\r\n    const [editMode, setEditMode] = useState(false)\r\n   \r\n    return (\r\n        <div>\r\n           \r\n            <RegisterForm editUser={true} />\r\n         \r\n        </div>\r\n    )\r\n}\r\nexport default Profile","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\context\\types.js",[],"C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\Pages\\Cart\\LocalCart.js",[],["394","395"],"C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\context\\AuthApi.js",["396"],"import React,{useContext} from \"react\"\r\n\r\n\r\nconst AuthApi=React.createContext()\r\nexport default AuthApi","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\Pages\\MyRecipes.js",["397","398","399","400"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport Gallery from './Gallery'\r\nimport { userRecipes, destroyRecipe } from \"../DAL/api\";\r\nimport Cookies from 'js-cookie'\r\n\r\nconst MyRecipes = () => {\r\n\r\n    const history = useHistory()\r\n    const [recipes, setRecipes] = useState([])\r\n    useEffect(async () => {\r\n        const id = Cookies.get('user')\r\n        if (!id) history.push('/login')\r\n        const response = await userRecipes(id)\r\n        console.log('id', id, 'recipes', response);\r\n        setRecipes([...response])\r\n    }, [])\r\n\r\n    const delteRecipe = async (userId, recipeId) => {\r\n        const response = await destroyRecipe(userId, recipeId)\r\n        history.push('/myrecipes')\r\n        alert(response)\r\n    }\r\n    return <div className='myrecipes'>\r\n        <h1 className='header mt-5'>My Recipes</h1>\r\n        {recipes.length ? < div className='d-flex flex-wrap justify-content-center' >\r\n            {recipes.map((recipe, i) => (\r\n                <div class=\"recipe\">\r\n\r\n                    <li> <Link to={`products/${recipe.id}`}>\r\n                        <div class=\"image\">\r\n                            <img src={recipe.images[0] ? `http://localhost:3200/${recipe.images[0].url} ` : 'https://images.pexels.com/photos/3843282/pexels-photo-3843282.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260'} />\r\n\r\n                        </div>\r\n                    </Link > </li>\r\n                    <div className='justify-content-around'>\r\n                        <p>{recipe.name.slice(0, 20)}</p>\r\n                        <ul class=\"media\">\r\n                            {/* {Cookies.get(\"user\") && <li onClick={() => addToLikes(Cookies.get(\"user\"), recipe.id)}><i className='fa fa-heart'></i> </li>} */}\r\n                            <li onClick={() => delteRecipe(Cookies.get(\"user\"), recipe.id)}> <i class=\"fas fa-trash\"></i></li>\r\n                            <li><i class=\"fa fa-eye\"></i> {recipe.views}</li>\r\n                            <li><Link to={`edit/${recipe.id}`}><i class=\"far fa-edit\"></i></Link > </li>\r\n\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                // <div class=\"recipe\">\r\n                //     <div class=\"image\">\r\n                //         <img src={recipe.images[0] ? `http://localhost:3200/${recipe.images[0].url} `\r\n                //             : 'https://images.pexels.com/photos/3843282/pexels-photo-3843282.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260'} />\r\n                //         {/* <div class=\"likes\">\r\n                //             <i class=\"fa fa-heart-o lv\"></i>\r\n                //         </div> */}\r\n                //         <div className='mb-2'>\r\n                //             <p>{recipe.name}</p>\r\n                //         </div>\r\n                //     </div>\r\n\r\n                //     <ul class=\"media\">\r\n\r\n                //         <li>  <i class=\"far fa-calendar-alt\"></i> {(recipe.createdAt).slice(5, 10).split('-').reverse().join('-')}</li>\r\n                //         <li> <Link to={`products/${recipe.id}`}>   <i class=\"fas fa-info-circle\"></i></Link > </li>\r\n                //         <li onClick={() => delteRecipe(Cookies.get(\"user\"), recipe.id)}> <i class=\"fas fa-trash\"></i></li>\r\n                //         <li><Link to={`edit/${recipe.id}`}><i class=\"far fa-edit\"></i></Link > </li>\r\n                //     </ul>\r\n                // </div>\r\n\r\n\r\n            ))\r\n            }\r\n        </div > : <p>you have no recipes</p>\r\n        }\r\n    </div>\r\n}\r\nexport default MyRecipes;","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\forms\\TextField.js",[],"C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\forms\\FormikRegister.jsx",["401","402","403","404","405","406","407","408","409","410","411","412","413","414","415"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n// import { Form, Col, Button, Row } from \"react-bootstrap\";\r\nimport InputCreator from \"./InputCreator\";\r\nimport validate from \"../utills/validateInfo\";\r\nimport useForm from \"../utills/useForm\";\r\nimport ErrorMessages from \"../utills/ErrorMessages\";\r\nimport { FormControl, FormCheck } from 'react-bootstrap'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { TextField } from './TextField';\r\nimport { getData, insertDataToDB, getSpecificUser } from \"../DAL/api\";\r\nimport * as Yup from 'yup';\r\nconst Cookies = require('js-cookie')\r\nconst axios = require('axios')\r\nconst FormikRegister = ({ id, editUser }) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [diets, setDiets] = useState(null);\r\n    const [userDetails, setUserdetails] = useState('')\r\n    const [chechboxOption, setCheckboxOption] = useState([])\r\n    const history = useHistory()\r\n\r\n    useEffect(async () => {\r\n        if (editUser) setEditMode(true);\r\n        const options = []\r\n        const fetchDiets = await getData('diets')\r\n        setDiets(fetchDiets);\r\n\r\n        for (let prop of fetchDiets) {\r\n            console.log(prop);\r\n\r\n            let obj = { key: prop.name, value: prop.id }\r\n            options.push(obj)\r\n        }\r\n        setCheckboxOption(options)\r\n\r\n    }, []);\r\n    const validate = Yup.object({\r\n        firstName: Yup.string()\r\n            .max(15, 'Must be 15 characters or less')\r\n            .required('Required'),\r\n        lastName: Yup.string()\r\n            .max(20, 'Must be 20 characters or less')\r\n            .required('Required'),\r\n        email: Yup.string()\r\n            .email('Email is invalid')\r\n            .required('Email is required'),\r\n        password: Yup.string()\r\n            .min(6, 'Password must be at least 6 charaters')\r\n            .required('Password is required'),\r\n        confirmPassword: Yup.string()\r\n            .oneOf([Yup.ref('password'), null], 'Password must match')\r\n            .required('Confirm password is required'),\r\n        diet: Yup.array().required('required')\r\n            .min(2, 'must check 2 types')\r\n    })\r\n\r\n    useEffect(async () => {\r\n        const id = Cookies.get('user')\r\n        if (editUser) {\r\n            const response = await getSpecificUser(id);\r\n            console.log(response);\r\n            setUserdetails(response)\r\n        }\r\n\r\n\r\n    }, [])\r\n    console.log(userDetails);\r\n    return (<Formik\r\n        initialValues={{\r\n            firstName: '' || \"get\",\r\n            lastName: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            checkbox: []\r\n        }}\r\n        validationSchema={validate}\r\n\r\n        onSubmit={async (values) => {\r\n\r\n            const response = await axios.post('http://localhost:3200/users', values)\r\n            console.log(response);\r\n            // insertDataToDB('users', values).then(res => alert(res))\r\n            alert(response);\r\n            // history.push('/login')\r\n            // console.log(res);\r\n            // setMessages(res)\r\n            // if (editMode) {\r\n            //   editUser(values);\r\n            // }\r\n\r\n\r\n        }}>\r\n\r\n\r\n        {formik => (\r\n            <div className=\"form-inner\">\r\n                <h1 className=\"my-4 font-weight-bold .display-4\">Sign Up</h1>\r\n                <Form onSubmit={formik.handleSubmit}>\r\n                    <TextField label=\"First Name\" name=\"firstName\" type=\"text\" />\r\n                    <TextField label=\"last Name\" name=\"lastName\" type=\"text\" />\r\n                    <TextField label=\"Email\" name=\"email\" type=\"email\" />\r\n                    <TextField label=\"password\" name=\"password\" type=\"password\" />\r\n                    <TextField label=\"Confirm Password\" name=\"confirmPassword\" type=\"password\" />\r\n                    <div className='d-flex'>\r\n                        <p className='col-sm-3 text-left'>Favorites</p>{diets && diets.map((diet, i) => {\r\n                            return (<label key={i}>\r\n                                <Field type=\"checkbox\" name=\"diet\" value={'' + diet.id} />\r\n                                {diet.name}\r\n                            </label>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    <ErrorMessage name='checkbox' />\r\n                    <button className=\"btn btn-dark mt-3\" type=\"submit\" onClick={formik.onSubmit}>Register</button>\r\n                    <button className=\"btn btn-danger mt-3 ml-3\" type=\"reset\">Reset</button>\r\n                </Form>\r\n            </div>\r\n        )}\r\n    </Formik>\r\n    )\r\n}\r\nexport default FormikRegister","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\Pages\\RecipePage.js",["416"],"import './recipePage.css'\r\n\r\nconst RecipePage = () => {\r\n\r\n    return <body>\r\n\r\n\r\n        <div className='ft-recipe'>\r\n            <div className='ft-recipe__thumb'>\r\n                <span id='close-modal'>\r\n                    <i className='ion ion-md-close'></i>\r\n                </span>\r\n                <h3>Today's featured Recipe</h3>\r\n                <img src=\"one.jpg\" alt=\"strawberry waffle\" />\r\n            </div>\r\n            <div className='ft-recipe__content'>\r\n                <header className='content__header'>\r\n                    <div className='row-wrapper'>\r\n                        <h2 className='recipe-title'>Strawberry waffle</h2>\r\n                        <div className='user-rating'></div>\r\n\r\n                    </div>\r\n                    <ul className='recipe-details'>\r\n                        <li className='recipe-details-item time'>\r\n                            <i className='ion ion-ios-clock-outline'>\r\n                            </i>\r\n                            <span className='value'>20</span>\r\n                            <span className='title'>Minutes</span>\r\n                        </li>\r\n                        <li className='recipe-details-item ingredients'>\r\n                            <i className='ion ion-ios-book-outline'>\r\n                            </i>\r\n                            <span className='value'></span>\r\n                            <span className='title'>Ingredients</span>\r\n                        </li>\r\n                        <li className='recipe-details-item servings'>\r\n                            <i className='ion ion-ios-person-outline'>\r\n                            </i>\r\n                            <span className='value'>4-6</span>\r\n                            <span className='title'>Serving</span>\r\n                        </li>\r\n\r\n                    </ul>\r\n                </header>\r\n                <p className='description'>\r\n                    loremip  sumadsasdasd  ad ad sdfsdf\r\n                    sdf....\r\n\r\n                </p>\r\n                <footer className='content__footer'><a href='#'>View Recipe</a></footer>\r\n            </div>\r\n\r\n        </div>\r\n    </body>\r\n}\r\nexport default RecipePage",["417","418"],"C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\utills\\Details.jsx",["419"],"import './details.css'\r\n\r\nconst Details = () => {\r\n\r\n    return <div classNameName='text-center'>\r\n        <div className=\"row mx-2\">\r\n            <div className=\"col-sm-7\">\r\n                <h1>Pasta with Pesto and Tomatoes</h1>\r\n                <figure>\r\n                    <img src=\"https://images.unsplash.com/photo-1593253787226-567eda4ad32d?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2434&q=80\" />\r\n                    <figcaption>Shania Pinnata</figcaption>\r\n                </figure>\r\n            </div>\r\n            <div className='col-sm-4'>\r\n                <p>This quick and delicious pasta dish is the perfect way to use up a summer bounty of basil and tomatoes! </p>\r\n                <p>Don't have a green thumb? Never fear! You can knock out this classNameic pasta dish in no time with a jar of prepared pesto sauce. </p>\r\n                <ul>\r\n                    <li>🍽 Serves: 4</li>\r\n                    <li>⏱ Prep Time: 5 minutes</li>\r\n                    <li>👨‍🍳 Cook Time: 25 minutes</li>\r\n                    <li>🍝 Total Time: 30 minutes</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        <div className='row'>\r\n            <div className=\"col-sm-5 mx-2\">\r\n                <div>\r\n                    <h2>The Ingredients</h2>\r\n                    <ul className=\"ingredients\">\r\n                        <li><span>8 oz. spaghetti or linguine pasta</span></li>\r\n                        <li><span>2 cups fresh basil leaves, plus 4-8 reserved leaves for garnish</span></li>\r\n                        <li><span>2 cloves garlic</span></li>\r\n                        <li><span>2 tbsp. pine nuts or blanched almonds</span></li>\r\n                        <li><span>1/2 cup olive oil</span></li>\r\n                        <li><span>1/2 cup grated Parmesan cheese, plus 2 tbsp. for garnish.</span></li>\r\n                        <li><span>1/8 tsp salt</span></li>\r\n                        <li><span>1 pint cherry tomatoes</span></li>\r\n                        <li><span>1 tsp olive oil</span></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-sm-5\">\r\n                <h2>The Process</h2>\r\n                <p className=\"tip\">Click each stage to strikethrough when complete</p>\r\n                <ol className=\"instructions\">\r\n                    <li><span>Bring 4 quarts of water to a rolling boil in a large pot. Salt the water generously and add the pasta.</span></li>\r\n                    <li>While the pasta cooks, make the pesto:\r\n                        <ul className=\"pesto\">\r\n                            <li><span>Remove stems from basil leaves.</span></li>\r\n                            <li><span>Put the basil, garlic, and pine nuts or almonds into the bowl of a food processor and pulse it a few times to chop them up.</span></li>\r\n                            <li><span>Then, turn the food processor on and <strong>slowly</strong> pour the olive oil through the feeder tube to blend with the chopped herbs and nuts. </span></li>\r\n                            <li><span>Process until all ingredients are fully blended, stopping the food processor to scrape down the sides occasionally to get it all mixed. </span></li>\r\n                            <li><span>Turn off the food processor, and add the salt and Parmesan, then pulse a few times to blend.</span></li>\r\n                        </ul>\r\n                    </li>\r\n                    <li><span>Heat a large skillet over medium heat. </span></li>\r\n                    <li><span>Add the 1/2 tsp. olive oil to the heated skillet.</span></li>\r\n                    <li><span>Add the cherry tomatoes to the skillet and let them blister, stirring occasionally and gently so they don't burst. </span></li>\r\n                    <li><span>Remove tomatoes from the pan and set aside. </span></li>\r\n                    <li><span>Drain the pasta, reserving 1/4 cup of the cooking water.</span></li>\r\n                    <li><span>Return the pasta to the pot</span></li>\r\n                    <li><span>Add the reserved cooking water and pesto to the pasta and stir to mix</span></li>\r\n                    <li><span>Plate the pasta and add 6-8 tomatoes to each plate</span></li>\r\n                    <li><span>Garnish with reserved basil leaves and Parmesan and serve.</span></li>\r\n                </ol>\r\n                <p className=\"last\">😋 Buon Appetito!</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\nexport default Details","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\forms\\formikNewRecipe.js",["420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437"],"C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\forms\\FormikNewRecipe.js",["438","439","440","441","442","443","444","445","446","447","448","449","450"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport InputCreator from \"./InputCreator\";\r\nimport validate from \"../utills/validateInfo\";\r\nimport useForm from \"../utills/useForm\";\r\nimport ErrorMessages from \"../utills/ErrorMessages\";\r\nimport { FormControl, FormCheck } from 'react-bootstrap'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { TextField } from './TextField';\r\nimport { getData, insertDataToDB } from \"../DAL/api\";\r\nimport * as Yup from 'yup';\r\nconst axios = require('axios')\r\nconst FormikNewRecipe = ({ recipe, editUser }) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [diets, setDiets] = useState(null);\r\n    const [categories, setcategories] = useState(null);\r\n\r\n\r\n    const [chechboxOption, setCheckboxOption] = useState([])\r\n    const history = useHistory()\r\n\r\n    useEffect(async () => {\r\n        if (recipe) setEditMode(true);\r\n        const options = []\r\n        const fetchDiets = await getData('diets')\r\n        const fetchCategories = await getData('categories')\r\n        setDiets(fetchDiets);\r\n        setcategories(fetchCategories);\r\n\r\n        for (let prop of fetchDiets) {\r\n            console.log(prop);\r\n\r\n            let obj = { key: prop.name, value: prop.id }\r\n            options.push(obj)\r\n        }\r\n        setCheckboxOption(options)\r\n\r\n    }, []);\r\n    const validate = Yup.object({\r\n        name: Yup.string()\r\n            .max(15, 'Must be 15 characters or less')\r\n            .required('Required'),\r\n        image: Yup.string()\r\n\r\n            .required('Required'),\r\n        email: Yup.string()\r\n            .email('Email is invalid')\r\n            .required('Email is required'),\r\n        password: Yup.string()\r\n            .min(6, 'Password must be at least 6 charaters')\r\n            .required('Password is required'),\r\n        confirmPassword: Yup.string()\r\n            .oneOf([Yup.ref('password'), null], 'Password must match')\r\n            .required('Confirm password is required'),\r\n        diet: Yup.array().required('required')\r\n            .min(2, 'must check 2 types'),\r\n        category: Yup.array().required('required')\r\n            .min(2, 'must check 2 types')\r\n\r\n    })\r\n\r\n    return (<Formik\r\n        initialValues={{\r\n            name: '',\r\n            image: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            diet: [],\r\n            category: []\r\n        }}\r\n        validationSchema={validate}\r\n        onSubmit={async (values) => {\r\n\r\n            const response = await axios.post('http://localhost:3200/users', values)\r\n            console.log(response);\r\n            // insertDataToDB('users', values).then(res => alert(res))\r\n            alert(response);\r\n            // history.push('/login')\r\n            // console.log(res);\r\n            // setMessages(res)\r\n            // if (editMode) {\r\n            //   editUser(values);\r\n            // }\r\n\r\n\r\n        }}>\r\n        {formik => (\r\n            <div className=\"form-inner\">\r\n                <h1 className=\"my-4 font-weight-bold .display-4\">Add Recipe</h1>\r\n                <Form onSubmit={formik.handleSubmit}>\r\n                    <TextField label=\"Name\" name=\"name\" type=\"text\" />\r\n                    <TextField label=\"Image\" name=\"lastName\" type=\"file\" />\r\n                    <TextField label=\"source\" name=\"source\" type=\"text\" />\r\n                    <TextField label=\"source Link\" name=\"sourceUrl\" type=\"text\" />\r\n                    <TextField label=\"description\" name=\"description\" type=\"textarea\" />\r\n                    <div className='d-flex'>\r\n                        <p className='col-sm-3 text-left'>Favorites</p>{diets && diets.map((diet, i) => {\r\n                            return (<label key={i}>\r\n                                <Field type=\"checkbox\" name=\"diet\" value={'' + diet.id} className='mx-2' />\r\n                                {diet.name}\r\n                            </label>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    <div className='d-flex'>\r\n                        <p className='col-sm-3 text-left'>categories</p>{categories && categories.map((diet, i) => {\r\n                            return (<label key={i}>\r\n                                <Field type=\"checkbox\" name=\"category\" value={'' + diet.id} className='m-2' />\r\n                                {diet.name}\r\n                            </label>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    <div role=\"group\" aria-labelledby=\"my-radio-group\">\r\n                        <label>\r\n                            <Field type=\"radio\" name=\"view Permitions\" value=\"true\" />\r\n                            public\r\n                        </label>\r\n                        <label>\r\n                            <Field type=\"radio\" name=\"view Permitions\" value='false' />\r\n                            private\r\n                        </label>\r\n                    </div>\r\n                    <ErrorMessage name='checkbox' />\r\n                    <button className=\"btn btn-dark mt-3\" type=\"submit\" onClick={formik.onSubmit}>Register</button>\r\n                    <button className=\"btn btn-danger mt-3 ml-3\" type=\"reset\">Reset</button>\r\n                </Form>\r\n            </div>\r\n        )}\r\n    </Formik>\r\n    )\r\n}\r\nexport default FormikNewRecipe\r\n","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\Pages\\MyFavorites.js",["451","452","453","454","455"],"import { useState, useEffect } from 'react';\r\nimport { userRecipes, getFavorites, deleteFromFavorites } from \"../DAL/api\";\r\nimport { Link, useHistory } from 'react-router-dom'\r\nconst Cookies = require('js-cookie')\r\nconst MyFovorites = () => {\r\n    const [recipes, setRecipes] = useState([])\r\n    const history = useHistory()\r\n\r\n    useEffect(async () => {\r\n        const id = Cookies.get(\"user\")\r\n        if (!id) history.push('/login')\r\n        const favorites = await getFavorites(id)\r\n        console.log(favorites);\r\n        setRecipes(favorites)\r\n    }, [])\r\n\r\n    const deleteFavorite = async (userId, recipeId) => {\r\n        const id = Cookies.get(\"user\")\r\n        const response = await deleteFromFavorites(userId, recipeId)\r\n        return response\r\n    }\r\n\r\n\r\n\r\n    return <div className='mt-5'>\r\n        {\r\n            recipes.length ? recipes.map(item => {\r\n                return <div class=\"recipe\">\r\n                    <div class=\"image\">\r\n                        <img src={item.recipe.images[0] ? `http://localhost:3200/${item.recipe.images[0].url} ` : 'https://images.pexels.com/photos/3843282/pexels-photo-3843282.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260'} />\r\n                        <div class=\"likes\" onClick={() => {\r\n                            deleteFavorite(Cookies.get(\"user\"), item.recipe.id)\r\n                        }}>\r\n                            <i class=\"fas fa-minus\"></i>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    {/* <div class=\"media d-flex flex-column\">\r\n\r\n                    </div> */}\r\n                    <h6>{item.recipe.name.slice(0, 20)}</h6>\r\n                    <ul class=\"media\">\r\n                        <li><i class=\"fa fa-clock-o\"></i> {item.recipe.prepTimeMin} <i class=\"far fa-clock\"></i></li>\r\n                        <li><i class=\"fa fa-eye\"></i> {item.recipe.views}</li>\r\n                        <li>  <i class=\"far fa-calendar-alt\"></i> {(item.recipe.createdAt).slice(5, 10).split('-').reverse().join('-')}</li>\r\n                        <li> <Link to={`products/${item.recipe.id}`}>   <i class=\"fas fa-info-circle\"></i></Link > </li>\r\n                    </ul>\r\n\r\n                </div>\r\n            }) : <p>the favorite empty</p>\r\n        }\r\n\r\n\r\n    </div>\r\n}\r\nexport default MyFovorites","C:\\Users\\User\\Documents\\projects\\fullstack-project\\client\\src\\components\\Pages\\Search.js",["456","457","458","459","460","461","462","463","464","465","466"],"import { useEffect, useState } from 'react'\r\nimport { getData } from '../DAL/api'\r\nimport { Multiselect } from 'multiselect-react-dropdown'\r\nimport { Row, Form, FormGroup, Col } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport * as Yup from 'yup'\r\nimport ReactPaginate from 'react-paginate'\r\nimport './Gallery.css'\r\nconst Cookies = require('js-cookie')\r\n\r\nconst Search = () => {\r\n    const [recipes, setRecipes] = useState([])\r\n    const [serchRecipes, setSearchRecipes] = useState([])\r\n    const [ingredients, setIngredients] = useState([])\r\n    const [selectedIngredients, setSelectedIngredients] = useState([])\r\n    const [diets, setDiets] = useState([])\r\n    const [selectedDiets, setSelectedDiets] = useState([])\r\n    const [categories, setCategories] = useState([])\r\n    const [selectedcategories, setSelectedcategories] = useState([])\r\n    const [recipeText, setRecipeText] = useState('')\r\n    const [pageNumber, setPageNumber] = useState(0)\r\n\r\n    useEffect(async () => {\r\n        const getAllRecipes = await getData('recipes')\r\n        const getIngredients = await getData('ingredients')\r\n        const getCategories = await getData('categories')\r\n        const getDiets = await getData('diets')\r\n        console.log(getAllRecipes);\r\n        setRecipes(getAllRecipes)\r\n        setSearchRecipes(getAllRecipes)\r\n        setIngredients(getIngredients)\r\n        setCategories(getCategories)\r\n        setDiets(getDiets)\r\n    }, [])\r\n\r\n\r\n\r\n    const getResults = () => {\r\n        let result = ''\r\n        result = serchRecipes.filter(item => {\r\n            // console.log(item, recipeText);\r\n            return (item.name).toLowerCase().includes(recipeText)\r\n        })\r\n\r\n        if (selectedcategories.length) result = result.filter(item => {\r\n            for (const prop of selectedcategories) {\r\n                console.log('selected', selectedcategories);\r\n                for (let cat of item.categories) {\r\n                    if (prop.name === cat.name) return true\r\n\r\n                }\r\n            }\r\n        })\r\n        if (selectedDiets.length) result = result.filter(item => {\r\n            for (const prop of selectedDiets) {\r\n                console.log('selected', selectedDiets);\r\n                for (let cat of item.diets) {\r\n                    if (prop.name === cat.name) return true\r\n\r\n                }\r\n                // return false\r\n            }\r\n        })\r\n        if (selectedIngredients.length) result = result.filter(item => {\r\n            for (const prop of selectedIngredients) {\r\n                console.log('selected', selectedIngredients);\r\n                for (let cat of item.ingredients) {\r\n                    if (prop.name === cat.name) return true\r\n                }\r\n                // return false\r\n            }\r\n        })\r\n        console.log(result);\r\n        return result\r\n    }\r\n\r\n    useEffect(() => {\r\n        let res = getResults();\r\n        if (res.length < 5) setPageNumber(0)\r\n        setRecipes(res)\r\n    }, [selectedcategories, recipeText, selectedDiets, selectedIngredients])\r\n\r\n    const changeIng = (data) => {\r\n        setSelectedIngredients(data)\r\n    }\r\n    const changeCat = (data) => {\r\n        console.log(selectedcategories);\r\n        setSelectedcategories(data)\r\n    }\r\n    const changeDiet = (data) => {\r\n        console.log(selectedDiets);\r\n        setSelectedDiets(data)\r\n    }\r\n    const onRemove = (data) => {\r\n        setSelectedcategories(data)\r\n    }\r\n    const onRemoveDiets = (data) => {\r\n        setSelectedDiets(data)\r\n    }\r\n    const onRemoveIngredients = (data) => {\r\n\r\n        setSelectedIngredients(data)\r\n    }\r\n\r\n    const changePage = ({ selected }) => {\r\n        if (recipes.length < 5) setPageNumber(0);\r\n        else setPageNumber(selected);\r\n    }\r\n    const pageCount = Math.ceil(recipes.length / 5)\r\n    return <>\r\n        <h4 className='mt-5'>find recipe</h4>\r\n        <div className='d-flex search-gallery'>\r\n            <div className='d-flex  flex-column search-recipe justufy-content-center'>\r\n                <h1>search </h1>\r\n                <div>\r\n                    <Form.Group className=\"search-wrapper\" controlId=\"formBasicEmail\">\r\n                        <Form.Label>recipe name</Form.Label>\r\n                        <Form.Control\r\n                            value={recipeText}\r\n                            onChange={(e) => {\r\n                                console.log(recipeText)\r\n                                setRecipeText(e.target.value);\r\n                            }}\r\n                            placeholder=\"search recipe\" />\r\n                    </Form.Group>\r\n                </div>\r\n                <div>\r\n                    <Form.Label>Ingredients</Form.Label>\r\n                    {ingredients.length && <Multiselect options={ingredients}\r\n                        displayValue={'name'} onSelect={changeIng}\r\n                        placeholder='search ingredient'\r\n                        selectedValues={selectedIngredients}\r\n                        onRemove={onRemoveIngredients}\r\n                    />}\r\n                </div>\r\n                <div>\r\n                    <Form.Label>Category</Form.Label>\r\n                    {categories.length && <Multiselect\r\n                        options={categories}\r\n                        onSelect={changeCat}\r\n                        displayValue={'name'}\r\n                        placeholder='category'\r\n                        onRemove={onRemove}\r\n                        selectedValues={selectedcategories} />}\r\n                </div>\r\n                <div>\r\n                    <Form.Label>diet types</Form.Label>\r\n                    {diets.length && <Multiselect options={diets}\r\n                        onSelect={changeDiet}\r\n                        displayValue={'name'}\r\n                        placeholder='diet type'\r\n                        selectedValues={selectedDiets}\r\n                        onRemove={onRemoveDiets}\r\n                    />}\r\n\r\n                </div>\r\n            </div>\r\n            <div className='container-fluid justify-content-between '>\r\n                <div>\r\n                    {recipes.length > 0 && recipes.slice(pageNumber * 5, (pageNumber + 1) * 5).map((recipe, i) => (\r\n                        <div class=\"recipe-card recipe\" key={i}>\r\n                            <Link to={`products/${recipe.id}`}>\r\n                                <div class=\"image\">\r\n                                    <img src={recipe.images[0] ? `http://localhost:3200/${recipe.images[0].url} ` : 'https://images.pexels.com/photos/3843282/pexels-photo-3843282.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260'} />\r\n                                    <div >\r\n                                        <p className='text-dark'>{recipe.name}</p>\r\n                                        <ul class=\"media\">\r\n                                            <li><i class=\"fa fa-clock-o\"></i> {recipe.prepTimeMin} <i class=\"far fa-clock\"></i></li>\r\n                                            <li><i class=\"fa fa-eye\"></i> {recipe.views}</li>\r\n                                            <li>  <i class=\"far fa-calendar-alt\"></i> {(recipe.createdAt).slice(5, 10).split('-').reverse().join('-')}</li>\r\n\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </Link>\r\n                        </div>\r\n\r\n                    ))\r\n                    }\r\n                </div>\r\n                <div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n        < ReactPaginate previousLabel={<i class=\"fas fa-arrow-left\"></i>}\r\n            nextLabel={<i class=\"fas fa-arrow-right\"></i>}\r\n            pageCount={pageCount}\r\n            onPageChange={changePage}\r\n            containerClassName={\"paginationBttns\"}\r\n            previousLinkClassName={\"previousBttn\"}\r\n            nextLinkClassName={\"nextBttn\"}\r\n            disabledClassName={\"paginationDisabled\"}\r\n            activeClassName={\"paginationActive\"} />\r\n    </>\r\n\r\n\r\n}\r\nexport default Search;",{"ruleId":"467","replacedBy":"468"},{"ruleId":"469","replacedBy":"470"},{"ruleId":"471","severity":1,"message":"472","line":4,"column":8,"nodeType":"473","messageId":"474","endLine":4,"endColumn":12},{"ruleId":"471","severity":1,"message":"475","line":7,"column":10,"nodeType":"473","messageId":"474","endLine":7,"endColumn":15},{"ruleId":"476","severity":1,"message":"477","line":38,"column":13,"nodeType":"478","endLine":41,"endColumn":4},{"ruleId":"479","severity":1,"message":"480","line":1,"column":1,"nodeType":"481","messageId":"482","endLine":1,"endColumn":14,"fix":"483"},{"ruleId":"471","severity":1,"message":"484","line":2,"column":7,"nodeType":"473","messageId":"474","endLine":2,"endColumn":12},{"ruleId":"471","severity":1,"message":"485","line":6,"column":8,"nodeType":"473","messageId":"474","endLine":6,"endColumn":23},{"ruleId":"471","severity":1,"message":"486","line":16,"column":8,"nodeType":"473","messageId":"474","endLine":16,"endColumn":21},{"ruleId":"471","severity":1,"message":"487","line":57,"column":7,"nodeType":"473","messageId":"474","endLine":57,"endColumn":25},{"ruleId":"471","severity":1,"message":"488","line":2,"column":10,"nodeType":"473","messageId":"474","endLine":2,"endColumn":15},{"ruleId":"471","severity":1,"message":"489","line":2,"column":17,"nodeType":"473","messageId":"474","endLine":2,"endColumn":30},{"ruleId":"471","severity":1,"message":"490","line":2,"column":32,"nodeType":"473","messageId":"474","endLine":2,"endColumn":38},{"ruleId":"471","severity":1,"message":"491","line":2,"column":40,"nodeType":"473","messageId":"474","endLine":2,"endColumn":45},{"ruleId":"471","severity":1,"message":"492","line":3,"column":10,"nodeType":"473","messageId":"474","endLine":3,"endColumn":18},{"ruleId":"471","severity":1,"message":"493","line":4,"column":10,"nodeType":"473","messageId":"474","endLine":4,"endColumn":14},{"ruleId":"471","severity":1,"message":"494","line":5,"column":8,"nodeType":"473","messageId":"474","endLine":5,"endColumn":15},{"ruleId":"471","severity":1,"message":"495","line":8,"column":10,"nodeType":"473","messageId":"474","endLine":8,"endColumn":30},{"ruleId":"471","severity":1,"message":"496","line":8,"column":32,"nodeType":"473","messageId":"474","endLine":8,"endColumn":39},{"ruleId":"471","severity":1,"message":"497","line":9,"column":7,"nodeType":"473","messageId":"474","endLine":9,"endColumn":16},{"ruleId":"471","severity":1,"message":"498","line":14,"column":10,"nodeType":"473","messageId":"474","endLine":14,"endColumn":16},{"ruleId":"471","severity":1,"message":"499","line":15,"column":10,"nodeType":"473","messageId":"474","endLine":15,"endColumn":22},{"ruleId":"471","severity":1,"message":"500","line":16,"column":10,"nodeType":"473","messageId":"474","endLine":16,"endColumn":21},{"ruleId":"476","severity":1,"message":"477","line":17,"column":13,"nodeType":"478","endLine":32,"endColumn":4},{"ruleId":"471","severity":1,"message":"501","line":30,"column":11,"nodeType":"473","messageId":"474","endLine":30,"endColumn":18},{"ruleId":"476","severity":1,"message":"502","line":32,"column":6,"nodeType":"503","endLine":32,"endColumn":8,"suggestions":"504"},{"ruleId":"471","severity":1,"message":"505","line":2,"column":10,"nodeType":"473","messageId":"474","endLine":2,"endColumn":20},{"ruleId":"476","severity":1,"message":"477","line":11,"column":13,"nodeType":"478","endLine":18,"endColumn":4},{"ruleId":"506","severity":1,"message":"507","line":14,"column":59,"nodeType":"508","messageId":"509","endLine":14,"endColumn":61},{"ruleId":"476","severity":1,"message":"510","line":18,"column":6,"nodeType":"503","endLine":18,"endColumn":8,"suggestions":"511"},{"ruleId":"471","severity":1,"message":"512","line":4,"column":16,"nodeType":"473","messageId":"474","endLine":4,"endColumn":19},{"ruleId":"471","severity":1,"message":"513","line":7,"column":19,"nodeType":"473","messageId":"474","endLine":7,"endColumn":33},{"ruleId":"514","severity":1,"message":"515","line":30,"column":29,"nodeType":"478","messageId":"516","endLine":30,"endColumn":31},{"ruleId":"476","severity":1,"message":"477","line":37,"column":13,"nodeType":"478","endLine":55,"endColumn":4},{"ruleId":"476","severity":1,"message":"517","line":55,"column":6,"nodeType":"503","endLine":55,"endColumn":8,"suggestions":"518"},{"ruleId":"471","severity":1,"message":"519","line":93,"column":13,"nodeType":"473","messageId":"474","endLine":93,"endColumn":17},{"ruleId":"471","severity":1,"message":"520","line":96,"column":15,"nodeType":"473","messageId":"474","endLine":96,"endColumn":23},{"ruleId":"471","severity":1,"message":"521","line":100,"column":15,"nodeType":"473","messageId":"474","endLine":100,"endColumn":21},{"ruleId":"471","severity":1,"message":"522","line":3,"column":10,"nodeType":"473","messageId":"474","endLine":3,"endColumn":24},{"ruleId":"471","severity":1,"message":"493","line":6,"column":10,"nodeType":"473","messageId":"474","endLine":6,"endColumn":14},{"ruleId":"471","severity":1,"message":"523","line":7,"column":10,"nodeType":"473","messageId":"474","endLine":7,"endColumn":14},{"ruleId":"471","severity":1,"message":"524","line":7,"column":16,"nodeType":"473","messageId":"474","endLine":7,"endColumn":25},{"ruleId":"471","severity":1,"message":"490","line":7,"column":27,"nodeType":"473","messageId":"474","endLine":7,"endColumn":33},{"ruleId":"471","severity":1,"message":"505","line":8,"column":10,"nodeType":"473","messageId":"474","endLine":8,"endColumn":20},{"ruleId":"471","severity":1,"message":"525","line":13,"column":11,"nodeType":"473","messageId":"474","endLine":13,"endColumn":19},{"ruleId":"476","severity":1,"message":"502","line":26,"column":6,"nodeType":"503","endLine":26,"endColumn":8,"suggestions":"526"},{"ruleId":"471","severity":1,"message":"527","line":28,"column":9,"nodeType":"473","messageId":"474","endLine":28,"endColumn":17},{"ruleId":"471","severity":1,"message":"528","line":32,"column":9,"nodeType":"473","messageId":"474","endLine":32,"endColumn":17},{"ruleId":"471","severity":1,"message":"529","line":37,"column":9,"nodeType":"473","messageId":"474","endLine":37,"endColumn":21},{"ruleId":"471","severity":1,"message":"530","line":2,"column":10,"nodeType":"473","messageId":"474","endLine":2,"endColumn":16},{"ruleId":"471","severity":1,"message":"531","line":2,"column":18,"nodeType":"473","messageId":"474","endLine":2,"endColumn":21},{"ruleId":"471","severity":1,"message":"490","line":2,"column":23,"nodeType":"473","messageId":"474","endLine":2,"endColumn":29},{"ruleId":"471","severity":1,"message":"532","line":2,"column":31,"nodeType":"473","messageId":"474","endLine":2,"endColumn":42},{"ruleId":"471","severity":1,"message":"523","line":2,"column":44,"nodeType":"473","messageId":"474","endLine":2,"endColumn":48},{"ruleId":"471","severity":1,"message":"533","line":2,"column":50,"nodeType":"473","messageId":"474","endLine":2,"endColumn":61},{"ruleId":"471","severity":1,"message":"486","line":6,"column":8,"nodeType":"473","messageId":"474","endLine":6,"endColumn":21},{"ruleId":"534","severity":1,"message":"535","line":79,"column":27,"nodeType":"536","endLine":79,"endColumn":156},{"ruleId":"534","severity":1,"message":"537","line":90,"column":36,"nodeType":"536","endLine":90,"endColumn":77},{"ruleId":"471","severity":1,"message":"538","line":3,"column":51,"nodeType":"473","messageId":"474","endLine":3,"endColumn":56},{"ruleId":"471","severity":1,"message":"539","line":4,"column":8,"nodeType":"473","messageId":"474","endLine":4,"endColumn":15},{"ruleId":"471","severity":1,"message":"540","line":5,"column":8,"nodeType":"473","messageId":"474","endLine":5,"endColumn":16},{"ruleId":"471","severity":1,"message":"513","line":6,"column":19,"nodeType":"473","messageId":"474","endLine":6,"endColumn":33},{"ruleId":"471","severity":1,"message":"541","line":8,"column":8,"nodeType":"473","messageId":"474","endLine":8,"endColumn":21},{"ruleId":"471","severity":1,"message":"542","line":11,"column":7,"nodeType":"473","messageId":"474","endLine":11,"endColumn":12},{"ruleId":"471","severity":1,"message":"543","line":24,"column":25,"nodeType":"473","messageId":"474","endLine":24,"endColumn":41},{"ruleId":"471","severity":1,"message":"544","line":26,"column":10,"nodeType":"473","messageId":"474","endLine":26,"endColumn":16},{"ruleId":"471","severity":1,"message":"520","line":69,"column":15,"nodeType":"473","messageId":"474","endLine":69,"endColumn":23},{"ruleId":"471","severity":1,"message":"521","line":71,"column":15,"nodeType":"473","messageId":"474","endLine":71,"endColumn":21},{"ruleId":"471","severity":1,"message":"545","line":190,"column":9,"nodeType":"473","messageId":"474","endLine":190,"endColumn":19},{"ruleId":"471","severity":1,"message":"520","line":194,"column":11,"nodeType":"473","messageId":"474","endLine":194,"endColumn":19},{"ruleId":"476","severity":1,"message":"477","line":198,"column":13,"nodeType":"478","endLine":229,"endColumn":4},{"ruleId":"471","severity":1,"message":"546","line":201,"column":13,"nodeType":"473","messageId":"474","endLine":201,"endColumn":20},{"ruleId":"476","severity":1,"message":"547","line":229,"column":6,"nodeType":"503","endLine":229,"endColumn":8,"suggestions":"548"},{"ruleId":"471","severity":1,"message":"523","line":3,"column":10,"nodeType":"473","messageId":"474","endLine":3,"endColumn":14},{"ruleId":"471","severity":1,"message":"512","line":3,"column":16,"nodeType":"473","messageId":"474","endLine":3,"endColumn":19},{"ruleId":"471","severity":1,"message":"549","line":4,"column":8,"nodeType":"473","messageId":"474","endLine":4,"endColumn":33},{"ruleId":"471","severity":1,"message":"550","line":6,"column":8,"nodeType":"473","messageId":"474","endLine":6,"endColumn":18},{"ruleId":"471","severity":1,"message":"493","line":7,"column":10,"nodeType":"473","messageId":"474","endLine":7,"endColumn":14},{"ruleId":"471","severity":1,"message":"551","line":8,"column":8,"nodeType":"473","messageId":"474","endLine":8,"endColumn":11},{"ruleId":"471","severity":1,"message":"552","line":9,"column":8,"nodeType":"473","messageId":"474","endLine":9,"endColumn":13},{"ruleId":"471","severity":1,"message":"497","line":11,"column":7,"nodeType":"473","messageId":"474","endLine":11,"endColumn":16},{"ruleId":"471","severity":1,"message":"553","line":17,"column":17,"nodeType":"473","messageId":"474","endLine":17,"endColumn":25},{"ruleId":"471","severity":1,"message":"554","line":18,"column":10,"nodeType":"473","messageId":"474","endLine":18,"endColumn":20},{"ruleId":"471","severity":1,"message":"555","line":19,"column":10,"nodeType":"473","messageId":"474","endLine":19,"endColumn":22},{"ruleId":"471","severity":1,"message":"556","line":20,"column":10,"nodeType":"473","messageId":"474","endLine":20,"endColumn":21},{"ruleId":"471","severity":1,"message":"557","line":21,"column":10,"nodeType":"473","messageId":"474","endLine":21,"endColumn":22},{"ruleId":"471","severity":1,"message":"558","line":35,"column":9,"nodeType":"473","messageId":"474","endLine":35,"endColumn":17},{"ruleId":"476","severity":1,"message":"477","line":37,"column":13,"nodeType":"478","endLine":44,"endColumn":4},{"ruleId":"471","severity":1,"message":"559","line":3,"column":8,"nodeType":"473","messageId":"474","endLine":3,"endColumn":20},{"ruleId":"471","severity":1,"message":"560","line":4,"column":10,"nodeType":"473","messageId":"474","endLine":4,"endColumn":18},{"ruleId":"561","severity":1,"message":"562","line":45,"column":19,"nodeType":"563","messageId":"564","endLine":45,"endColumn":20,"suggestions":"565"},{"ruleId":"561","severity":1,"message":"562","line":45,"column":35,"nodeType":"563","messageId":"564","endLine":45,"endColumn":36,"suggestions":"566"},{"ruleId":"476","severity":1,"message":"477","line":69,"column":13,"nodeType":"478","endLine":71,"endColumn":4},{"ruleId":"476","severity":1,"message":"567","line":71,"column":6,"nodeType":"503","endLine":71,"endColumn":8,"suggestions":"568"},{"ruleId":"561","severity":1,"message":"562","line":36,"column":13,"nodeType":"563","messageId":"564","endLine":36,"endColumn":14,"suggestions":"569"},{"ruleId":"561","severity":1,"message":"562","line":36,"column":29,"nodeType":"563","messageId":"564","endLine":36,"endColumn":30,"suggestions":"570"},{"ruleId":"506","severity":1,"message":"571","line":52,"column":23,"nodeType":"508","messageId":"509","endLine":52,"endColumn":25},{"ruleId":"471","severity":1,"message":"572","line":5,"column":10,"nodeType":"473","messageId":"474","endLine":5,"endColumn":22},{"ruleId":"506","severity":1,"message":"507","line":9,"column":23,"nodeType":"508","messageId":"509","endLine":9,"endColumn":25},{"ruleId":"506","severity":1,"message":"507","line":23,"column":30,"nodeType":"508","messageId":"509","endLine":23,"endColumn":32},{"ruleId":"476","severity":1,"message":"573","line":54,"column":6,"nodeType":"503","endLine":54,"endColumn":14,"suggestions":"574"},{"ruleId":"471","severity":1,"message":"575","line":2,"column":8,"nodeType":"473","messageId":"474","endLine":2,"endColumn":13},{"ruleId":"471","severity":1,"message":"550","line":3,"column":8,"nodeType":"473","messageId":"474","endLine":3,"endColumn":18},{"ruleId":"471","severity":1,"message":"576","line":11,"column":10,"nodeType":"473","messageId":"474","endLine":11,"endColumn":16},{"ruleId":"471","severity":1,"message":"577","line":11,"column":18,"nodeType":"473","messageId":"474","endLine":11,"endColumn":27},{"ruleId":"471","severity":1,"message":"578","line":12,"column":19,"nodeType":"473","messageId":"474","endLine":12,"endColumn":29},{"ruleId":"471","severity":1,"message":"556","line":13,"column":10,"nodeType":"473","messageId":"474","endLine":13,"endColumn":21},{"ruleId":"471","severity":1,"message":"579","line":13,"column":23,"nodeType":"473","messageId":"474","endLine":13,"endColumn":37},{"ruleId":"471","severity":1,"message":"580","line":14,"column":10,"nodeType":"473","messageId":"474","endLine":14,"endColumn":24},{"ruleId":"471","severity":1,"message":"581","line":14,"column":26,"nodeType":"473","messageId":"474","endLine":14,"endColumn":43},{"ruleId":"476","severity":1,"message":"477","line":16,"column":13,"nodeType":"478","endLine":21,"endColumn":4},{"ruleId":"471","severity":1,"message":"505","line":2,"column":10,"nodeType":"473","messageId":"474","endLine":2,"endColumn":20},{"ruleId":"471","severity":1,"message":"582","line":3,"column":16,"nodeType":"473","messageId":"474","endLine":3,"endColumn":22},{"ruleId":"476","severity":1,"message":"477","line":11,"column":13,"nodeType":"478","endLine":14,"endColumn":4},{"ruleId":"471","severity":1,"message":"505","line":3,"column":10,"nodeType":"473","messageId":"474","endLine":3,"endColumn":20},{"ruleId":"471","severity":1,"message":"560","line":3,"column":22,"nodeType":"473","messageId":"474","endLine":3,"endColumn":30},{"ruleId":"476","severity":1,"message":"477","line":18,"column":13,"nodeType":"478","endLine":24,"endColumn":4},{"ruleId":"471","severity":1,"message":"583","line":27,"column":9,"nodeType":"473","messageId":"474","endLine":27,"endColumn":21},{"ruleId":"471","severity":1,"message":"584","line":34,"column":9,"nodeType":"473","messageId":"474","endLine":34,"endColumn":19},{"ruleId":"471","severity":1,"message":"585","line":40,"column":9,"nodeType":"473","messageId":"474","endLine":40,"endColumn":18},{"ruleId":"471","severity":1,"message":"586","line":4,"column":8,"nodeType":"473","messageId":"474","endLine":4,"endColumn":16},{"ruleId":"471","severity":1,"message":"486","line":6,"column":8,"nodeType":"473","messageId":"474","endLine":6,"endColumn":21},{"ruleId":"471","severity":1,"message":"587","line":13,"column":10,"nodeType":"473","messageId":"474","endLine":13,"endColumn":23},{"ruleId":"471","severity":1,"message":"554","line":14,"column":9,"nodeType":"473","messageId":"474","endLine":14,"endColumn":19},{"ruleId":"471","severity":1,"message":"576","line":15,"column":9,"nodeType":"473","messageId":"474","endLine":15,"endColumn":15},{"ruleId":"476","severity":1,"message":"477","line":24,"column":13,"nodeType":"478","endLine":29,"endColumn":4},{"ruleId":"588","severity":1,"message":"589","line":44,"column":19,"nodeType":"536","endLine":44,"endColumn":216},{"ruleId":"471","severity":1,"message":"490","line":5,"column":10,"nodeType":"473","messageId":"474","endLine":5,"endColumn":16},{"ruleId":"471","severity":1,"message":"590","line":1,"column":16,"nodeType":"473","messageId":"474","endLine":1,"endColumn":26},{"ruleId":"471","severity":1,"message":"490","line":1,"column":28,"nodeType":"473","messageId":"474","endLine":1,"endColumn":34},{"ruleId":"471","severity":1,"message":"512","line":1,"column":36,"nodeType":"473","messageId":"474","endLine":1,"endColumn":39},{"ruleId":"591","severity":1,"message":"592","line":17,"column":13,"nodeType":"593","messageId":"594","endLine":17,"endColumn":38},{"ruleId":"591","severity":1,"message":"592","line":19,"column":13,"nodeType":"593","messageId":"594","endLine":19,"endColumn":30},{"ruleId":"471","severity":1,"message":"595","line":3,"column":10,"nodeType":"473","messageId":"474","endLine":3,"endColumn":18},{"ruleId":"471","severity":1,"message":"596","line":4,"column":8,"nodeType":"473","messageId":"474","endLine":4,"endColumn":14},{"ruleId":"597","severity":1,"message":"598","line":16,"column":13,"nodeType":"536","endLine":21,"endColumn":15},{"ruleId":"471","severity":1,"message":"599","line":6,"column":3,"nodeType":"473","messageId":"474","endLine":6,"endColumn":12},{"ruleId":"471","severity":1,"message":"600","line":7,"column":3,"nodeType":"473","messageId":"474","endLine":7,"endColumn":7},{"ruleId":"471","severity":1,"message":"523","line":8,"column":3,"nodeType":"473","messageId":"474","endLine":8,"endColumn":7},{"ruleId":"471","severity":1,"message":"512","line":9,"column":3,"nodeType":"473","messageId":"474","endLine":9,"endColumn":6},{"ruleId":"471","severity":1,"message":"601","line":10,"column":3,"nodeType":"473","messageId":"474","endLine":10,"endColumn":6},{"ruleId":"471","severity":1,"message":"602","line":18,"column":16,"nodeType":"473","messageId":"474","endLine":18,"endColumn":23},{"ruleId":"591","severity":1,"message":"592","line":16,"column":13,"nodeType":"593","messageId":"594","endLine":16,"endColumn":34},{"ruleId":"471","severity":1,"message":"490","line":3,"column":10,"nodeType":"473","messageId":"474","endLine":3,"endColumn":16},{"ruleId":"471","severity":1,"message":"586","line":5,"column":8,"nodeType":"473","messageId":"474","endLine":5,"endColumn":16},{"ruleId":"471","severity":1,"message":"523","line":6,"column":10,"nodeType":"473","messageId":"474","endLine":6,"endColumn":14},{"ruleId":"471","severity":1,"message":"601","line":6,"column":16,"nodeType":"473","messageId":"474","endLine":6,"endColumn":19},{"ruleId":"471","severity":1,"message":"512","line":6,"column":21,"nodeType":"473","messageId":"474","endLine":6,"endColumn":24},{"ruleId":"471","severity":1,"message":"496","line":8,"column":10,"nodeType":"473","messageId":"474","endLine":8,"endColumn":17},{"ruleId":"471","severity":1,"message":"576","line":11,"column":20,"nodeType":"473","messageId":"474","endLine":11,"endColumn":26},{"ruleId":"471","severity":1,"message":"603","line":11,"column":37,"nodeType":"473","messageId":"474","endLine":11,"endColumn":42},{"ruleId":"471","severity":1,"message":"579","line":15,"column":23,"nodeType":"473","messageId":"474","endLine":15,"endColumn":37},{"ruleId":"471","severity":1,"message":"604","line":18,"column":10,"nodeType":"473","messageId":"474","endLine":18,"endColumn":17},{"ruleId":"476","severity":1,"message":"605","line":30,"column":6,"nodeType":"503","endLine":30,"endColumn":8,"suggestions":"606"},{"ruleId":"476","severity":1,"message":"607","line":33,"column":6,"nodeType":"503","endLine":33,"endColumn":58,"suggestions":"608"},{"ruleId":"471","severity":1,"message":"609","line":65,"column":9,"nodeType":"473","messageId":"474","endLine":65,"endColumn":21},{"ruleId":"471","severity":1,"message":"520","line":71,"column":11,"nodeType":"473","messageId":"474","endLine":71,"endColumn":19},{"ruleId":"588","severity":1,"message":"589","line":120,"column":17,"nodeType":"536","endLine":120,"endColumn":214},{"ruleId":"610","severity":1,"message":"611","line":1,"column":1,"nodeType":"612","endLine":33,"endColumn":3},{"ruleId":"471","severity":1,"message":"613","line":1,"column":20,"nodeType":"473","messageId":"474","endLine":1,"endColumn":29},{"ruleId":"471","severity":1,"message":"614","line":3,"column":8,"nodeType":"473","messageId":"474","endLine":3,"endColumn":13},{"ruleId":"471","severity":1,"message":"615","line":4,"column":8,"nodeType":"473","messageId":"474","endLine":4,"endColumn":22},{"ruleId":"471","severity":1,"message":"586","line":5,"column":8,"nodeType":"473","messageId":"474","endLine":5,"endColumn":16},{"ruleId":"471","severity":1,"message":"616","line":6,"column":8,"nodeType":"473","messageId":"474","endLine":6,"endColumn":15},{"ruleId":"471","severity":1,"message":"617","line":7,"column":8,"nodeType":"473","messageId":"474","endLine":7,"endColumn":22},{"ruleId":"471","severity":1,"message":"490","line":8,"column":10,"nodeType":"473","messageId":"474","endLine":8,"endColumn":16},{"ruleId":"471","severity":1,"message":"618","line":10,"column":9,"nodeType":"473","messageId":"474","endLine":10,"endColumn":16},{"ruleId":"471","severity":1,"message":"619","line":10,"column":18,"nodeType":"473","messageId":"474","endLine":10,"endColumn":32},{"ruleId":"471","severity":1,"message":"620","line":10,"column":34,"nodeType":"473","messageId":"474","endLine":10,"endColumn":49},{"ruleId":"471","severity":1,"message":"621","line":12,"column":11,"nodeType":"473","messageId":"474","endLine":12,"endColumn":18},{"ruleId":"471","severity":1,"message":"622","line":13,"column":12,"nodeType":"473","messageId":"474","endLine":13,"endColumn":20},{"ruleId":"471","severity":1,"message":"623","line":13,"column":22,"nodeType":"473","messageId":"474","endLine":13,"endColumn":33},{"ruleId":"467","replacedBy":"624"},{"ruleId":"469","replacedBy":"625"},{"ruleId":"471","severity":1,"message":"626","line":1,"column":15,"nodeType":"473","messageId":"474","endLine":1,"endColumn":25},{"ruleId":"471","severity":1,"message":"627","line":3,"column":8,"nodeType":"473","messageId":"474","endLine":3,"endColumn":15},{"ruleId":"476","severity":1,"message":"477","line":11,"column":15,"nodeType":"478","endLine":17,"endColumn":6},{"ruleId":"476","severity":1,"message":"628","line":17,"column":8,"nodeType":"503","endLine":17,"endColumn":10,"suggestions":"629"},{"ruleId":"588","severity":1,"message":"589","line":32,"column":29,"nodeType":"536","endLine":32,"endColumn":226},{"ruleId":"471","severity":1,"message":"493","line":2,"column":10,"nodeType":"473","messageId":"474","endLine":2,"endColumn":14},{"ruleId":"471","severity":1,"message":"630","line":5,"column":8,"nodeType":"473","messageId":"474","endLine":5,"endColumn":20},{"ruleId":"471","severity":1,"message":"540","line":6,"column":8,"nodeType":"473","messageId":"474","endLine":6,"endColumn":16},{"ruleId":"471","severity":1,"message":"539","line":7,"column":8,"nodeType":"473","messageId":"474","endLine":7,"endColumn":15},{"ruleId":"471","severity":1,"message":"541","line":8,"column":8,"nodeType":"473","messageId":"474","endLine":8,"endColumn":21},{"ruleId":"471","severity":1,"message":"533","line":9,"column":10,"nodeType":"473","messageId":"474","endLine":9,"endColumn":21},{"ruleId":"471","severity":1,"message":"631","line":9,"column":23,"nodeType":"473","messageId":"474","endLine":9,"endColumn":32},{"ruleId":"471","severity":1,"message":"513","line":12,"column":19,"nodeType":"473","messageId":"474","endLine":12,"endColumn":33},{"ruleId":"471","severity":1,"message":"622","line":17,"column":12,"nodeType":"473","messageId":"474","endLine":17,"endColumn":20},{"ruleId":"471","severity":1,"message":"632","line":20,"column":12,"nodeType":"473","messageId":"474","endLine":20,"endColumn":26},{"ruleId":"471","severity":1,"message":"621","line":21,"column":11,"nodeType":"473","messageId":"474","endLine":21,"endColumn":18},{"ruleId":"476","severity":1,"message":"477","line":23,"column":15,"nodeType":"478","endLine":37,"endColumn":6},{"ruleId":"476","severity":1,"message":"633","line":37,"column":8,"nodeType":"503","endLine":37,"endColumn":10,"suggestions":"634"},{"ruleId":"476","severity":1,"message":"477","line":58,"column":15,"nodeType":"478","endLine":67,"endColumn":6},{"ruleId":"476","severity":1,"message":"633","line":67,"column":8,"nodeType":"503","endLine":67,"endColumn":10,"suggestions":"635"},{"ruleId":"534","severity":1,"message":"535","line":50,"column":53,"nodeType":"536","endLine":50,"endColumn":65},{"ruleId":"467","replacedBy":"636"},{"ruleId":"469","replacedBy":"637"},{"ruleId":"588","severity":1,"message":"589","line":10,"column":21,"nodeType":"536","endLine":10,"endColumn":193},{"ruleId":"471","severity":1,"message":"493","line":2,"column":10,"nodeType":"473","messageId":"474","endLine":2,"endColumn":14},{"ruleId":"471","severity":1,"message":"630","line":3,"column":8,"nodeType":"473","messageId":"474","endLine":3,"endColumn":20},{"ruleId":"471","severity":1,"message":"540","line":4,"column":8,"nodeType":"473","messageId":"474","endLine":4,"endColumn":16},{"ruleId":"471","severity":1,"message":"539","line":5,"column":8,"nodeType":"473","messageId":"474","endLine":5,"endColumn":15},{"ruleId":"471","severity":1,"message":"541","line":6,"column":8,"nodeType":"473","messageId":"474","endLine":6,"endColumn":21},{"ruleId":"471","severity":1,"message":"533","line":7,"column":10,"nodeType":"473","messageId":"474","endLine":7,"endColumn":21},{"ruleId":"471","severity":1,"message":"631","line":7,"column":23,"nodeType":"473","messageId":"474","endLine":7,"endColumn":32},{"ruleId":"471","severity":1,"message":"513","line":10,"column":19,"nodeType":"473","messageId":"474","endLine":10,"endColumn":33},{"ruleId":"471","severity":1,"message":"622","line":14,"column":12,"nodeType":"473","messageId":"474","endLine":14,"endColumn":20},{"ruleId":"638","severity":2,"message":"639","line":14,"column":37,"nodeType":"473","endLine":14,"endColumn":45},{"ruleId":"638","severity":2,"message":"639","line":15,"column":31,"nodeType":"473","endLine":15,"endColumn":39},{"ruleId":"471","severity":1,"message":"632","line":16,"column":12,"nodeType":"473","messageId":"474","endLine":16,"endColumn":26},{"ruleId":"638","severity":2,"message":"639","line":16,"column":49,"nodeType":"473","endLine":16,"endColumn":57},{"ruleId":"471","severity":1,"message":"621","line":17,"column":11,"nodeType":"473","messageId":"474","endLine":17,"endColumn":18},{"ruleId":"638","severity":2,"message":"640","line":17,"column":21,"nodeType":"473","endLine":17,"endColumn":31},{"ruleId":"638","severity":2,"message":"641","line":19,"column":5,"nodeType":"473","endLine":19,"endColumn":14},{"ruleId":"476","severity":1,"message":"477","line":19,"column":15,"nodeType":"478","endLine":33,"endColumn":6},{"ruleId":"476","severity":1,"message":"642","line":33,"column":8,"nodeType":"503","endLine":33,"endColumn":10,"suggestions":"643"},{"ruleId":"471","severity":1,"message":"493","line":2,"column":10,"nodeType":"473","messageId":"474","endLine":2,"endColumn":14},{"ruleId":"471","severity":1,"message":"630","line":3,"column":8,"nodeType":"473","messageId":"474","endLine":3,"endColumn":20},{"ruleId":"471","severity":1,"message":"540","line":4,"column":8,"nodeType":"473","messageId":"474","endLine":4,"endColumn":16},{"ruleId":"471","severity":1,"message":"539","line":5,"column":8,"nodeType":"473","messageId":"474","endLine":5,"endColumn":15},{"ruleId":"471","severity":1,"message":"541","line":6,"column":8,"nodeType":"473","messageId":"474","endLine":6,"endColumn":21},{"ruleId":"471","severity":1,"message":"533","line":7,"column":10,"nodeType":"473","messageId":"474","endLine":7,"endColumn":21},{"ruleId":"471","severity":1,"message":"631","line":7,"column":23,"nodeType":"473","messageId":"474","endLine":7,"endColumn":32},{"ruleId":"471","severity":1,"message":"513","line":10,"column":19,"nodeType":"473","messageId":"474","endLine":10,"endColumn":33},{"ruleId":"471","severity":1,"message":"622","line":14,"column":12,"nodeType":"473","messageId":"474","endLine":14,"endColumn":20},{"ruleId":"471","severity":1,"message":"632","line":19,"column":12,"nodeType":"473","messageId":"474","endLine":19,"endColumn":26},{"ruleId":"471","severity":1,"message":"621","line":20,"column":11,"nodeType":"473","messageId":"474","endLine":20,"endColumn":18},{"ruleId":"476","severity":1,"message":"477","line":22,"column":15,"nodeType":"478","endLine":38,"endColumn":6},{"ruleId":"476","severity":1,"message":"642","line":38,"column":8,"nodeType":"503","endLine":38,"endColumn":10,"suggestions":"644"},{"ruleId":"471","severity":1,"message":"645","line":2,"column":10,"nodeType":"473","messageId":"474","endLine":2,"endColumn":21},{"ruleId":"476","severity":1,"message":"477","line":9,"column":15,"nodeType":"478","endLine":15,"endColumn":6},{"ruleId":"476","severity":1,"message":"628","line":15,"column":8,"nodeType":"503","endLine":15,"endColumn":10,"suggestions":"646"},{"ruleId":"471","severity":1,"message":"647","line":18,"column":15,"nodeType":"473","messageId":"474","endLine":18,"endColumn":17},{"ruleId":"588","severity":1,"message":"589","line":30,"column":25,"nodeType":"536","endLine":30,"endColumn":232},{"ruleId":"471","severity":1,"message":"601","line":4,"column":10,"nodeType":"473","messageId":"474","endLine":4,"endColumn":13},{"ruleId":"471","severity":1,"message":"524","line":4,"column":21,"nodeType":"473","messageId":"474","endLine":4,"endColumn":30},{"ruleId":"471","severity":1,"message":"512","line":4,"column":32,"nodeType":"473","messageId":"474","endLine":4,"endColumn":35},{"ruleId":"471","severity":1,"message":"648","line":6,"column":13,"nodeType":"473","messageId":"474","endLine":6,"endColumn":16},{"ruleId":"471","severity":1,"message":"649","line":9,"column":7,"nodeType":"473","messageId":"474","endLine":9,"endColumn":14},{"ruleId":"476","severity":1,"message":"477","line":23,"column":15,"nodeType":"478","endLine":34,"endColumn":6},{"ruleId":"514","severity":1,"message":"650","line":45,"column":68,"nodeType":"478","messageId":"651","endLine":45,"endColumn":70},{"ruleId":"514","severity":1,"message":"650","line":54,"column":63,"nodeType":"478","messageId":"651","endLine":54,"endColumn":65},{"ruleId":"514","severity":1,"message":"650","line":64,"column":69,"nodeType":"478","messageId":"651","endLine":64,"endColumn":71},{"ruleId":"476","severity":1,"message":"652","line":81,"column":8,"nodeType":"503","endLine":81,"endColumn":76,"suggestions":"653"},{"ruleId":"588","severity":1,"message":"589","line":164,"column":37,"nodeType":"536","endLine":164,"endColumn":234},"no-native-reassign",["654"],"no-negated-in-lhs",["655"],"no-unused-vars","'data' is defined but never used.","Identifier","unusedVar","'async' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"656","text":"657"},"'fetch' is assigned a value but never used.","'FormikNewRecipe' is defined but never used.","'SearchRecipes' is defined but never used.","'myRecipesProtected' is assigned a value but never used.","'Modal' is defined but never used.","'ListGroupItem' is defined but never used.","'Button' is defined but never used.","'Image' is defined but never used.","'Carousel' is defined but never used.","'Link' is defined but never used.","'Details' is defined but never used.","'getRecipeIngredients' is defined but never used.","'getData' is defined but never used.","'fetchData' is assigned a value but never used.","'userId' is assigned a value but never used.","'instructions' is assigned a value but never used.","'ingredients' is assigned a value but never used.","'incView' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["658"],"'getRecipes' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'cartList' and 'match'. Either include them or remove the dependency array. You can also do a functional update 'setCartList(c => ...)' if you only need 'cartList' in the 'setCartList' call.",["659"],"'Col' is defined but never used.","'insertDataToDB' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has missing dependencies: 'editUser', 'formik.values.diet', and 'insertToForm'. Either include them or remove the dependency array.",["660"],"'data' is assigned a value but never used.","'response' is assigned a value but never used.","'update' is assigned a value but never used.","'RecipesContext' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'edituser' is assigned a value but never used.",["661"],"'onChange' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'NavDropdown' is defined but never used.","'FormControl' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Table' is defined but never used.","'useForm' is defined but never used.","'validate' is defined but never used.","'ErrorMessages' is defined but never used.","'axios' is assigned a value but never used.","'setNewIngredient' is assigned a value but never used.","'addIng' is assigned a value but never used.","'addIngtoDB' is assigned a value but never used.","'instruc' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'formik.values.category', 'formik.values.diet', 'history', 'insertDataToForm', and 'recipeId'. Either include them or remove the dependency array.",["662"],"'MyVerticallyCenteredModal' is defined but never used.","'Pagination' is defined but never used.","'App' is defined but never used.","'Cards' is defined but never used.","'setOrder' is assigned a value but never used.","'categories' is assigned a value but never used.","'selecteduser' is assigned a value but never used.","'currentPage' is assigned a value but never used.","'postsPerPage' is assigned a value but never used.","'paginate' is assigned a value but never used.","'validateInfo' is defined but never used.","'getUsers' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["663","664"],["665","666"],"React Hook useEffect has a missing dependency: 'userDetails'. Either include it or remove the dependency array.",["667"],["668","669"],["670","671"],"Expected '!==' and instead saw '!='.","'isSubmitting' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'callback'. Either include it or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["672"],"'Posts' is defined but never used.","'images' is assigned a value but never used.","'setImages' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'setCurrentPage' is assigned a value but never used.","'recipesPerPage' is assigned a value but never used.","'setRecipesPerPage' is assigned a value but never used.","'uuidv4' is defined but never used.","'removeRecipe' is assigned a value but never used.","'editRecipe' is assigned a value but never used.","'addRecipe' is assigned a value but never used.","'CardItem' is defined but never used.","'secondSection' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'InputGroup' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'useState' is defined but never used.","'Modal1' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Accordion' is defined but never used.","'Card' is defined but never used.","'Row' is defined but never used.","'setList' is assigned a value but never used.","'onAdd' is assigned a value but never used.","'checked' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'recipes'. Either include it or remove the dependency array.",["673"],"React Hook useEffect has a missing dependency: 'order'. Either include it or remove the dependency array.",["674"],"'currentPosts' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","'Login' is defined but never used.","'ShowAllRecipes' is defined but never used.","'Cookies' is defined but never used.","'FormikRegister' is defined but never used.","'getData' is assigned a value but never used.","'getUserRecipes' is assigned a value but never used.","'getSpecificUser' is assigned a value but never used.","'history' is assigned a value but never used.","'editMode' is assigned a value but never used.","'setEditMode' is assigned a value but never used.",["654"],["655"],"'useContext' is defined but never used.","'Gallery' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["675"],"'InputCreator' is defined but never used.","'FormCheck' is defined but never used.","'chechboxOption' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'editUser'. Either include it or remove the dependency array.",["676"],["677"],["654"],["655"],"react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"formikNewRecipe\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook \"useHistory\" is called in function \"formikNewRecipe\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook \"useEffect\" is called in function \"formikNewRecipe\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook useEffect has a missing dependency: 'recipe'. Either include it or remove the dependency array.",["678"],["679"],"'userRecipes' is defined but never used.",["680"],"'id' is assigned a value but never used.","'Yup' is defined but never used.","'Cookies' is assigned a value but never used.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has a missing dependency: 'getResults'. Either include it or remove the dependency array.",["681"],"no-global-assign","no-unsafe-negation",[0,13],"",{"desc":"682","fix":"683"},{"desc":"684","fix":"685"},{"desc":"686","fix":"687"},{"desc":"682","fix":"688"},{"desc":"689","fix":"690"},{"messageId":"691","fix":"692","desc":"693"},{"messageId":"694","fix":"695","desc":"696"},{"messageId":"691","fix":"697","desc":"693"},{"messageId":"694","fix":"698","desc":"696"},{"desc":"699","fix":"700"},{"messageId":"691","fix":"701","desc":"693"},{"messageId":"694","fix":"702","desc":"696"},{"messageId":"691","fix":"703","desc":"693"},{"messageId":"694","fix":"704","desc":"696"},{"desc":"705","fix":"706"},{"desc":"707","fix":"708"},{"desc":"709","fix":"710"},{"desc":"711","fix":"712"},{"desc":"713","fix":"714"},{"desc":"713","fix":"715"},{"desc":"716","fix":"717"},{"desc":"716","fix":"718"},{"desc":"711","fix":"719"},{"desc":"720","fix":"721"},"Update the dependencies array to be: [match.params.id]",{"range":"722","text":"723"},"Update the dependencies array to be: [cartList, match]",{"range":"724","text":"725"},"Update the dependencies array to be: [editUser, formik.values.diet, insertToForm]",{"range":"726","text":"727"},{"range":"728","text":"723"},"Update the dependencies array to be: [formik.values.category, formik.values.diet, history, insertDataToForm, recipeId]",{"range":"729","text":"730"},"removeEscape",{"range":"731","text":"657"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"732","text":"733"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"734","text":"657"},{"range":"735","text":"733"},"Update the dependencies array to be: [userDetails]",{"range":"736","text":"737"},{"range":"738","text":"657"},{"range":"739","text":"733"},{"range":"740","text":"657"},{"range":"741","text":"733"},"Update the dependencies array to be: [callback, errors]",{"range":"742","text":"743"},"Update the dependencies array to be: [recipes]",{"range":"744","text":"745"},"Update the dependencies array to be: [orderListBy, listState, pageNumber, recipesPerPage, order]",{"range":"746","text":"747"},"Update the dependencies array to be: [history]",{"range":"748","text":"749"},"Update the dependencies array to be: [editUser]",{"range":"750","text":"751"},{"range":"752","text":"751"},"Update the dependencies array to be: [recipe]",{"range":"753","text":"754"},{"range":"755","text":"754"},{"range":"756","text":"749"},"Update the dependencies array to be: [selectedcategories, recipeText, selectedDiets, selectedIngredients, getResults]",{"range":"757","text":"758"},[1224,1226],"[match.params.id]",[579,581],"[cartList, match]",[1616,1618],"[editUser, formik.values.diet, insertToForm]",[874,876],[7495,7497],"[formik.values.category, formik.values.diet, history, insertDataToForm, recipeId]",[1625,1626],[1625,1625],"\\",[1641,1642],[1641,1641],[2368,2370],"[userDetails]",[1173,1174],[1173,1173],[1189,1190],[1189,1189],[1716,1724],"[callback, errors]",[1198,1200],"[recipes]",[1249,1301],"[orderListBy, listState, pageNumber, recipesPerPage, order]",[596,598],"[history]",[1396,1398],"[editUser]",[2455,2457],[1224,1226],"[recipe]",[1387,1389],[559,561],[2993,3061],"[selectedcategories, recipeText, selectedDiets, selectedIngredients, getResults]"]